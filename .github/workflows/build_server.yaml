name: Server Build and Release

on:
  push:
    branches: ["main"]

jobs:
  build:
    name: "Server: Build üê≥"
    timeout-minutes: 15
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.5.0

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/polarsource/polar
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - uses: docker/build-push-action@v4.0.0
        id: push
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          context: ./server
          platforms: linux/amd64,linux/arm64/v8
          build-args: |
            RELEASE_VERSION=${{ github.sha }}

      - name: Deploy
        if: github.ref == 'refs/heads/main'
        run: "./.github/workflows/deploy_server.sh ${{ steps.push.outputs.digest }}"
        env:
          RENDER_DEPLOY_KEY_WORKER_DEFAULT: ${{ secrets.RENDER_DEPLOY_KEY_WORKER_DEFAULT }}
          RENDER_DEPLOY_KEY_WORKER_GITHUB: ${{ secrets.RENDER_DEPLOY_KEY_WORKER_GITHUB }}
          RENDER_DEPLOY_KEY_API: ${{ secrets.RENDER_DEPLOY_KEY_API }}

      - name: Sentry Release
        uses: getsentry/action-release@v1.7.0
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        with:
          environment: production
          dist: ${{ steps.push.outputs.digest }}
          version: ${{ github.sha }}
          projects: server
          working_directory: ./server
