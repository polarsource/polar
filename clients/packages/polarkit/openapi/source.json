{
    "openapi": "3.0.2",
    "info": {
        "title": "FastAPI",
        "version": "0.1.0"
    },
    "paths": {
        "/api/v1/users/me": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Users:Current User",
                "operationId": "users:users:current_user",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRead"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing token or inactive user."
                    }
                },
                "security": [
                    {
                        "APIKeyCookie": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "users"
                ],
                "summary": "Users:Patch Current User",
                "operationId": "users:users:patch_current_user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRead"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                },
                                "examples": {
                                    "UPDATE_USER_EMAIL_ALREADY_EXISTS": {
                                        "summary": "A user with this email already exists.",
                                        "value": {
                                            "detail": "UPDATE_USER_EMAIL_ALREADY_EXISTS"
                                        }
                                    },
                                    "UPDATE_USER_INVALID_PASSWORD": {
                                        "summary": "Password validation failed.",
                                        "value": {
                                            "detail": {
                                                "code": "UPDATE_USER_INVALID_PASSWORD",
                                                "reason": "Password should beat least 3 characters"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing token or inactive user."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyCookie": []
                    }
                ]
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Users:User",
                "operationId": "users:users:user",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Id"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRead"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing token or inactive user."
                    },
                    "403": {
                        "description": "Not a superuser."
                    },
                    "404": {
                        "description": "The user does not exist."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyCookie": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "users"
                ],
                "summary": "Users:Delete User",
                "operationId": "users:users:delete_user",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Id"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "401": {
                        "description": "Missing token or inactive user."
                    },
                    "403": {
                        "description": "Not a superuser."
                    },
                    "404": {
                        "description": "The user does not exist."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyCookie": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "users"
                ],
                "summary": "Users:Patch User",
                "operationId": "users:users:patch_user",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Id"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRead"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                },
                                "examples": {
                                    "UPDATE_USER_EMAIL_ALREADY_EXISTS": {
                                        "summary": "A user with this email already exists.",
                                        "value": {
                                            "detail": "UPDATE_USER_EMAIL_ALREADY_EXISTS"
                                        }
                                    },
                                    "UPDATE_USER_INVALID_PASSWORD": {
                                        "summary": "Password validation failed.",
                                        "value": {
                                            "detail": {
                                                "code": "UPDATE_USER_INVALID_PASSWORD",
                                                "reason": "Password should beat least 3 characters"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing token or inactive user."
                    },
                    "403": {
                        "description": "Not a superuser."
                    },
                    "404": {
                        "description": "The user does not exist."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyCookie": []
                    }
                ]
            }
        },
        "/api/v1/users/login": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Auth:Jwt.Login",
                "operationId": "users:auth:jwt.login",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_users_auth_jwt.login"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                },
                                "examples": {
                                    "LOGIN_BAD_CREDENTIALS": {
                                        "summary": "Bad credentials or the user is inactive.",
                                        "value": {
                                            "detail": "LOGIN_BAD_CREDENTIALS"
                                        }
                                    },
                                    "LOGIN_USER_NOT_VERIFIED": {
                                        "summary": "The user is not verified.",
                                        "value": {
                                            "detail": "LOGIN_USER_NOT_VERIFIED"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/users/logout": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Auth:Jwt.Logout",
                "operationId": "users:auth:jwt.logout",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Missing token or inactive user."
                    }
                },
                "security": [
                    {
                        "APIKeyCookie": []
                    }
                ]
            }
        },
        "/api/v1/user/organizations": {
            "get": {
                "tags": [
                    "user.organizations"
                ],
                "summary": "Get User Organizations",
                "operationId": "user.organizations:get_user_organizations",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response User.Organizations:Get User Organizations",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrganizationRead"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyCookie": []
                    }
                ]
            }
        },
        "/api/v1/integrations/github/authorize": {
            "get": {
                "tags": [
                    "integrations"
                ],
                "summary": "Oauth:Github.Jwt.Authorize",
                "operationId": "integrations:oauth:github.jwt.authorize",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "title": "Scopes",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "name": "scopes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuth2AuthorizeResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/integrations/github/callback": {
            "get": {
                "tags": [
                    "integrations"
                ],
                "summary": "Oauth:Github.Jwt.Callback",
                "description": "The response varies based on the authentication backend used.",
                "operationId": "integrations:oauth:github.jwt.callback",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "title": "Code",
                            "type": "string"
                        },
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Code Verifier",
                            "type": "string"
                        },
                        "name": "code_verifier",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "State",
                            "type": "string"
                        },
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Error",
                            "type": "string"
                        },
                        "name": "error",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                },
                                "examples": {
                                    "INVALID_STATE_TOKEN": {
                                        "summary": "Invalid state token."
                                    },
                                    "LOGIN_BAD_CREDENTIALS": {
                                        "summary": "User is inactive.",
                                        "value": {
                                            "detail": "LOGIN_BAD_CREDENTIALS"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/integrations/github/{org}/{repo}/issues/{number}/badges/{badge_type}": {
            "get": {
                "tags": [
                    "integrations"
                ],
                "summary": "Get Badge Settings",
                "operationId": "integrations:get_badge_settings",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Org",
                            "type": "string"
                        },
                        "name": "org",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Repo",
                            "type": "string"
                        },
                        "name": "repo",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Number",
                            "type": "integer"
                        },
                        "name": "number",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Badge Type",
                            "enum": [
                                "funding"
                            ],
                            "type": "string"
                        },
                        "name": "badge_type",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GithubBadgeRead"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/integrations/github/installations": {
            "post": {
                "tags": [
                    "integrations"
                ],
                "summary": "Install",
                "operationId": "integrations:install",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstallationCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationRead"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyCookie": []
                    }
                ]
            }
        },
        "/api/v1/integrations/github/webhook": {
            "post": {
                "tags": [
                    "integrations"
                ],
                "summary": "Webhook",
                "operationId": "integrations:webhook",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebhookResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/pull_requests/{platform}/{organization_name}/{name}": {
            "get": {
                "tags": [
                    "pull_requests"
                ],
                "summary": "Get Repository Pull Requests",
                "operationId": "pull_requests:get_repository_pull_requests",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Platforms"
                        },
                        "name": "platform",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Organization Name",
                            "type": "string"
                        },
                        "name": "organization_name",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Name",
                            "type": "string"
                        },
                        "name": "name",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Pull Requests:Get Repository Pull Requests",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PullRequestRead"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyCookie": []
                    }
                ]
            }
        },
        "/api/v1/issues/{platform}/{organization_name}/{name}": {
            "get": {
                "tags": [
                    "issues"
                ],
                "summary": "Get Repository Issues",
                "operationId": "issues:get_repository_issues",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Platforms"
                        },
                        "name": "platform",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Organization Name",
                            "type": "string"
                        },
                        "name": "organization_name",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Name",
                            "type": "string"
                        },
                        "name": "name",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Issues:Get Repository Issues",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IssueRead"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyCookie": []
                    }
                ]
            }
        },
        "/api/v1/rewards": {
            "post": {
                "tags": [
                    "rewards"
                ],
                "summary": "Create Rewawrd",
                "operationId": "rewards:create_rewawrd",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RewardCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RewardRead"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyCookie": []
                    }
                ]
            }
        },
        "/api/v1/rewards/{platform}/{organization_name}/{name}": {
            "get": {
                "tags": [
                    "rewards"
                ],
                "summary": "Get Repository Rewards",
                "operationId": "rewards:get_repository_rewards",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Platforms"
                        },
                        "name": "platform",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Organization Name",
                            "type": "string"
                        },
                        "name": "organization_name",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Name",
                            "type": "string"
                        },
                        "name": "name",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Rewards:Get Repository Rewards",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RewardRead"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyCookie": []
                    }
                ]
            }
        },
        "/api/v1/stream": {
            "get": {
                "tags": [
                    "stream"
                ],
                "summary": "Listen",
                "operationId": "stream:listen",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Organization Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "organization_id",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Repository Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "repository_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyCookie": []
                    }
                ]
            }
        },
        "/api/v1/organizations/{platform}/{organization_name}/settings": {
            "put": {
                "tags": [
                    "organizations"
                ],
                "summary": "Update Settings",
                "operationId": "organizations:update_settings",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Platforms"
                        },
                        "name": "platform",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Organization Name",
                            "type": "string"
                        },
                        "name": "organization_name",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationSettings"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationRead"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyCookie": []
                    }
                ]
            }
        },
        "/api/v1/dashboard/{platform}/{organization_name}/{repository_name}": {
            "get": {
                "tags": [
                    "dashboard"
                ],
                "summary": "Get Dashboard",
                "operationId": "dashboard:get_dashboard",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Platforms"
                        },
                        "name": "platform",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Organization Name",
                            "type": "string"
                        },
                        "name": "organization_name",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Repository Name",
                            "type": "string"
                        },
                        "name": "repository_name",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Q",
                            "type": "string"
                        },
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IssueListResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyCookie": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "BadgeAmount": {
                "title": "BadgeAmount",
                "required": [
                    "currency",
                    "amount"
                ],
                "type": "object",
                "properties": {
                    "currency": {
                        "title": "Currency",
                        "type": "string"
                    },
                    "amount": {
                        "title": "Amount",
                        "type": "number"
                    }
                }
            },
            "Body_users_auth_jwt.login": {
                "title": "Body_users:auth:jwt.login",
                "required": [
                    "username",
                    "password"
                ],
                "type": "object",
                "properties": {
                    "grant_type": {
                        "title": "Grant Type",
                        "pattern": "password",
                        "type": "string"
                    },
                    "username": {
                        "title": "Username",
                        "type": "string"
                    },
                    "password": {
                        "title": "Password",
                        "type": "string"
                    },
                    "scope": {
                        "title": "Scope",
                        "type": "string",
                        "default": ""
                    },
                    "client_id": {
                        "title": "Client Id",
                        "type": "string"
                    },
                    "client_secret": {
                        "title": "Client Secret",
                        "type": "string"
                    }
                }
            },
            "Entry_Any_": {
                "title": "Entry[Any]",
                "required": [
                    "type",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "string",
                                "format": "uuid"
                            }
                        ]
                    },
                    "attributes": {
                        "title": "Attributes"
                    },
                    "relationships": {
                        "title": "Relationships",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Relationship"
                        },
                        "default": []
                    }
                }
            },
            "Entry_IssueRead_": {
                "title": "Entry[IssueRead]",
                "required": [
                    "type",
                    "id",
                    "attributes"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "string",
                                "format": "uuid"
                            }
                        ]
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/IssueRead"
                    },
                    "relationships": {
                        "title": "Relationships",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Relationship"
                        },
                        "default": []
                    }
                }
            },
            "ErrorModel": {
                "title": "ErrorModel",
                "required": [
                    "detail"
                ],
                "type": "object",
                "properties": {
                    "detail": {
                        "title": "Detail",
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            }
                        ]
                    }
                }
            },
            "GithubBadgeRead": {
                "title": "GithubBadgeRead",
                "required": [
                    "badge_type"
                ],
                "type": "object",
                "properties": {
                    "badge_type": {
                        "title": "Badge Type",
                        "enum": [
                            "funding"
                        ],
                        "type": "string"
                    },
                    "width": {
                        "title": "Width",
                        "type": "integer",
                        "default": 445
                    },
                    "height": {
                        "title": "Height",
                        "type": "integer",
                        "default": 44
                    },
                    "amount": {
                        "$ref": "#/components/schemas/BadgeAmount"
                    }
                }
            },
            "HTTPValidationError": {
                "title": "HTTPValidationError",
                "type": "object",
                "properties": {
                    "detail": {
                        "title": "Detail",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        }
                    }
                }
            },
            "InstallationCreate": {
                "title": "InstallationCreate",
                "required": [
                    "platform",
                    "external_id"
                ],
                "type": "object",
                "properties": {
                    "platform": {
                        "title": "Platform",
                        "enum": [
                            "github"
                        ],
                        "type": "string"
                    },
                    "external_id": {
                        "title": "External Id",
                        "type": "integer"
                    }
                }
            },
            "IssueListResponse": {
                "title": "IssueListResponse",
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "title": "Data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Entry_IssueRead_"
                        }
                    },
                    "included": {
                        "title": "Included",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Entry_Any_"
                        },
                        "default": []
                    }
                }
            },
            "IssueRead": {
                "title": "IssueRead",
                "required": [
                    "platform",
                    "external_id",
                    "organization_id",
                    "repository_id",
                    "number",
                    "title",
                    "state",
                    "issue_created_at",
                    "id",
                    "created_at"
                ],
                "type": "object",
                "properties": {
                    "platform": {
                        "$ref": "#/components/schemas/Platforms"
                    },
                    "external_id": {
                        "title": "External Id",
                        "type": "integer"
                    },
                    "organization_id": {
                        "title": "Organization Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "repository_id": {
                        "title": "Repository Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "number": {
                        "title": "Number",
                        "type": "integer"
                    },
                    "title": {
                        "title": "Title",
                        "type": "string"
                    },
                    "body": {
                        "title": "Body",
                        "type": "string"
                    },
                    "comments": {
                        "title": "Comments",
                        "type": "integer"
                    },
                    "author": {
                        "title": "Author",
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            {
                                "type": "object"
                            }
                        ]
                    },
                    "author_association": {
                        "title": "Author Association",
                        "type": "string"
                    },
                    "labels": {
                        "title": "Labels",
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            {
                                "type": "object"
                            }
                        ]
                    },
                    "assignee": {
                        "title": "Assignee",
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            {
                                "type": "object"
                            }
                        ]
                    },
                    "assignees": {
                        "title": "Assignees",
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            {
                                "type": "object"
                            }
                        ]
                    },
                    "milestone": {
                        "title": "Milestone",
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            {
                                "type": "object"
                            }
                        ]
                    },
                    "closed_by": {
                        "title": "Closed By",
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            {
                                "type": "object"
                            }
                        ]
                    },
                    "reactions": {
                        "title": "Reactions",
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            {
                                "type": "object"
                            }
                        ]
                    },
                    "state": {
                        "$ref": "#/components/schemas/polar__models__issue__IssueFields__State"
                    },
                    "state_reason": {
                        "title": "State Reason",
                        "type": "string"
                    },
                    "issue_closed_at": {
                        "title": "Issue Closed At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "issue_modified_at": {
                        "title": "Issue Modified At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "issue_created_at": {
                        "title": "Issue Created At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "OAuth2AuthorizeResponse": {
                "title": "OAuth2AuthorizeResponse",
                "required": [
                    "authorization_url"
                ],
                "type": "object",
                "properties": {
                    "authorization_url": {
                        "title": "Authorization Url",
                        "type": "string"
                    }
                }
            },
            "OrganizationRead": {
                "title": "OrganizationRead",
                "required": [
                    "platform",
                    "name",
                    "external_id",
                    "avatar_url",
                    "is_personal",
                    "is_site_admin",
                    "installation_id",
                    "installation_created_at",
                    "id",
                    "status",
                    "created_at"
                ],
                "type": "object",
                "properties": {
                    "funding_badge_retroactive": {
                        "title": "Funding Badge Retroactive",
                        "type": "boolean",
                        "default": false
                    },
                    "funding_badge_show_amount": {
                        "title": "Funding Badge Show Amount",
                        "type": "boolean",
                        "default": false
                    },
                    "platform": {
                        "$ref": "#/components/schemas/Platforms"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "external_id": {
                        "title": "External Id",
                        "type": "integer"
                    },
                    "avatar_url": {
                        "title": "Avatar Url",
                        "type": "string"
                    },
                    "is_personal": {
                        "title": "Is Personal",
                        "type": "boolean"
                    },
                    "is_site_admin": {
                        "title": "Is Site Admin",
                        "type": "boolean"
                    },
                    "installation_id": {
                        "title": "Installation Id",
                        "type": "integer"
                    },
                    "installation_created_at": {
                        "title": "Installation Created At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "installation_updated_at": {
                        "title": "Installation Updated At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "installation_suspended_at": {
                        "title": "Installation Suspended At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "onboarded_at": {
                        "title": "Onboarded At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "repositories": {
                        "title": "Repositories",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RepositoryRead"
                        }
                    }
                }
            },
            "OrganizationSettings": {
                "title": "OrganizationSettings",
                "type": "object",
                "properties": {
                    "funding_badge_retroactive": {
                        "title": "Funding Badge Retroactive",
                        "type": "boolean",
                        "default": false
                    },
                    "funding_badge_show_amount": {
                        "title": "Funding Badge Show Amount",
                        "type": "boolean",
                        "default": false
                    }
                }
            },
            "Platforms": {
                "title": "Platforms",
                "enum": [
                    "github"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "PullRequestRead": {
                "title": "PullRequestRead",
                "required": [
                    "platform",
                    "external_id",
                    "organization_id",
                    "repository_id",
                    "number",
                    "title",
                    "state",
                    "issue_created_at",
                    "id",
                    "created_at"
                ],
                "type": "object",
                "properties": {
                    "platform": {
                        "$ref": "#/components/schemas/Platforms"
                    },
                    "external_id": {
                        "title": "External Id",
                        "type": "integer"
                    },
                    "organization_id": {
                        "title": "Organization Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "repository_id": {
                        "title": "Repository Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "number": {
                        "title": "Number",
                        "type": "integer"
                    },
                    "title": {
                        "title": "Title",
                        "type": "string"
                    },
                    "body": {
                        "title": "Body",
                        "type": "string"
                    },
                    "comments": {
                        "title": "Comments",
                        "type": "integer"
                    },
                    "author": {
                        "title": "Author",
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            {
                                "type": "object"
                            }
                        ]
                    },
                    "author_association": {
                        "title": "Author Association",
                        "type": "string"
                    },
                    "labels": {
                        "title": "Labels",
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            {
                                "type": "object"
                            }
                        ]
                    },
                    "assignee": {
                        "title": "Assignee",
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            {
                                "type": "object"
                            }
                        ]
                    },
                    "assignees": {
                        "title": "Assignees",
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            {
                                "type": "object"
                            }
                        ]
                    },
                    "milestone": {
                        "title": "Milestone",
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            {
                                "type": "object"
                            }
                        ]
                    },
                    "closed_by": {
                        "title": "Closed By",
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            {
                                "type": "object"
                            }
                        ]
                    },
                    "reactions": {
                        "title": "Reactions",
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            {
                                "type": "object"
                            }
                        ]
                    },
                    "state": {
                        "$ref": "#/components/schemas/polar__models__issue__IssueFields__State"
                    },
                    "state_reason": {
                        "title": "State Reason",
                        "type": "string"
                    },
                    "issue_closed_at": {
                        "title": "Issue Closed At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "issue_modified_at": {
                        "title": "Issue Modified At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "issue_created_at": {
                        "title": "Issue Created At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "requested_reviewers": {
                        "title": "Requested Reviewers",
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            {
                                "type": "object"
                            }
                        ]
                    },
                    "requested_teams": {
                        "title": "Requested Teams",
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            {
                                "type": "object"
                            }
                        ]
                    },
                    "is_merged": {
                        "title": "Is Merged",
                        "type": "boolean"
                    },
                    "merged_at": {
                        "title": "Merged At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "merge_commit_sha": {
                        "title": "Merge Commit Sha",
                        "type": "string"
                    },
                    "head": {
                        "title": "Head",
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            {
                                "type": "object"
                            }
                        ]
                    },
                    "base": {
                        "title": "Base",
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            {
                                "type": "object"
                            }
                        ]
                    },
                    "commits": {
                        "title": "Commits",
                        "type": "integer"
                    },
                    "additions": {
                        "title": "Additions",
                        "type": "integer"
                    },
                    "deletions": {
                        "title": "Deletions",
                        "type": "integer"
                    },
                    "changed_files": {
                        "title": "Changed Files",
                        "type": "integer"
                    },
                    "review_comments": {
                        "title": "Review Comments",
                        "type": "integer"
                    },
                    "maintainer_can_modify": {
                        "title": "Maintainer Can Modify",
                        "type": "boolean"
                    },
                    "is_mergeable": {
                        "title": "Is Mergeable",
                        "type": "boolean"
                    },
                    "mergeable_state": {
                        "title": "Mergeable State",
                        "type": "string"
                    },
                    "merged_by": {
                        "title": "Merged By",
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            {
                                "type": "object"
                            }
                        ]
                    },
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Relationship": {
                "title": "Relationship",
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "title": "Data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RelationshipData"
                        }
                    }
                }
            },
            "RelationshipData": {
                "title": "RelationshipData",
                "required": [
                    "type",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "string",
                                "format": "uuid"
                            }
                        ]
                    }
                }
            },
            "RepositoryRead": {
                "title": "RepositoryRead",
                "required": [
                    "platform",
                    "external_id",
                    "name",
                    "is_private",
                    "id",
                    "visibility"
                ],
                "type": "object",
                "properties": {
                    "platform": {
                        "$ref": "#/components/schemas/Platforms"
                    },
                    "external_id": {
                        "title": "External Id",
                        "type": "integer"
                    },
                    "organization_id": {
                        "title": "Organization Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "open_issues": {
                        "title": "Open Issues",
                        "type": "integer"
                    },
                    "forks": {
                        "title": "Forks",
                        "type": "integer"
                    },
                    "stars": {
                        "title": "Stars",
                        "type": "integer"
                    },
                    "watchers": {
                        "title": "Watchers",
                        "type": "integer"
                    },
                    "main_branch": {
                        "title": "Main Branch",
                        "type": "string"
                    },
                    "topics": {
                        "title": "Topics",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "license": {
                        "title": "License",
                        "type": "string"
                    },
                    "repository_pushed_at": {
                        "title": "Repository Pushed At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "repository_created_at": {
                        "title": "Repository Created At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "repository_modified_at": {
                        "title": "Repository Modified At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "is_private": {
                        "title": "Is Private",
                        "type": "boolean"
                    },
                    "is_fork": {
                        "title": "Is Fork",
                        "type": "boolean"
                    },
                    "is_issues_enabled": {
                        "title": "Is Issues Enabled",
                        "type": "boolean"
                    },
                    "is_projects_enabled": {
                        "title": "Is Projects Enabled",
                        "type": "boolean"
                    },
                    "is_wiki_enabled": {
                        "title": "Is Wiki Enabled",
                        "type": "boolean"
                    },
                    "is_pages_enabled": {
                        "title": "Is Pages Enabled",
                        "type": "boolean"
                    },
                    "is_downloads_enabled": {
                        "title": "Is Downloads Enabled",
                        "type": "boolean"
                    },
                    "is_archived": {
                        "title": "Is Archived",
                        "type": "boolean"
                    },
                    "is_disabled": {
                        "title": "Is Disabled",
                        "type": "boolean"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "visibility": {
                        "$ref": "#/components/schemas/Visibility"
                    }
                }
            },
            "RewardCreate": {
                "title": "RewardCreate",
                "required": [
                    "issue_id",
                    "amount"
                ],
                "type": "object",
                "properties": {
                    "issue_id": {
                        "title": "Issue Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "amount": {
                        "title": "Amount",
                        "type": "number"
                    }
                }
            },
            "RewardRead": {
                "title": "RewardRead",
                "required": [
                    "issue_id",
                    "amount",
                    "id",
                    "created_at",
                    "repository_id",
                    "organization_id",
                    "state"
                ],
                "type": "object",
                "properties": {
                    "issue_id": {
                        "title": "Issue Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "amount": {
                        "title": "Amount",
                        "type": "number"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "repository_id": {
                        "title": "Repository Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "organization_id": {
                        "title": "Organization Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "state": {
                        "$ref": "#/components/schemas/polar__reward__schemas__State"
                    }
                }
            },
            "Status": {
                "title": "Status",
                "enum": [
                    "inactive",
                    "active",
                    "suspended"
                ],
                "description": "An enumeration."
            },
            "UserRead": {
                "title": "UserRead",
                "required": [
                    "profile",
                    "email"
                ],
                "type": "object",
                "properties": {
                    "profile": {
                        "title": "Profile",
                        "type": "object"
                    },
                    "id": {
                        "title": "Id"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "is_active": {
                        "title": "Is Active",
                        "type": "boolean",
                        "default": true
                    },
                    "is_superuser": {
                        "title": "Is Superuser",
                        "type": "boolean",
                        "default": false
                    },
                    "is_verified": {
                        "title": "Is Verified",
                        "type": "boolean",
                        "default": false
                    }
                },
                "description": "Base User model."
            },
            "UserUpdate": {
                "title": "UserUpdate",
                "required": [
                    "profile"
                ],
                "type": "object",
                "properties": {
                    "profile": {
                        "title": "Profile",
                        "type": "object"
                    },
                    "password": {
                        "title": "Password",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "is_active": {
                        "title": "Is Active",
                        "type": "boolean"
                    },
                    "is_superuser": {
                        "title": "Is Superuser",
                        "type": "boolean"
                    },
                    "is_verified": {
                        "title": "Is Verified",
                        "type": "boolean"
                    }
                }
            },
            "ValidationError": {
                "title": "ValidationError",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "loc": {
                        "title": "Location",
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    "msg": {
                        "title": "Message",
                        "type": "string"
                    },
                    "type": {
                        "title": "Error Type",
                        "type": "string"
                    }
                }
            },
            "Visibility": {
                "title": "Visibility",
                "enum": [
                    "public",
                    "private"
                ],
                "description": "An enumeration."
            },
            "WebhookResponse": {
                "title": "WebhookResponse",
                "required": [
                    "success"
                ],
                "type": "object",
                "properties": {
                    "success": {
                        "title": "Success",
                        "type": "boolean"
                    },
                    "message": {
                        "title": "Message",
                        "type": "string"
                    },
                    "job_id": {
                        "title": "Job Id",
                        "type": "string"
                    }
                }
            },
            "polar__models__issue__IssueFields__State": {
                "title": "State",
                "enum": [
                    "open",
                    "closed"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "polar__reward__schemas__State": {
                "title": "State",
                "enum": [
                    "created",
                    "pending",
                    "paid"
                ],
                "type": "string",
                "description": "An enumeration."
            }
        },
        "securitySchemes": {
            "APIKeyCookie": {
                "type": "apiKey",
                "in": "cookie",
                "name": "polar"
            }
        }
    }
}