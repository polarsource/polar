/* tslint:disable */
/* eslint-disable */
/**
 * Polar API
 *  Welcome to the **Polar API** for [polar.sh](https://polar.sh).  The Public API is currently a [work in progress](https://github.com/polarsource/polar/issues/834) and is in active development. ðŸš€  #### Authentication  Use a [Personal Access Token](https://polar.sh/settings) and send it in the `Authorization` header on the format `Bearer [YOUR_TOKEN]`.  #### Feedback  If you have any feedback or comments, reach out in the [Polar API-issue](https://github.com/polarsource/polar/issues/834), or reach out on the Polar Discord server.  We\'d love to see what you\'ve built with the API and to get your thoughts on how we can make the API better!  #### Connecting  The Polar API is online at `https://api.polar.sh`. 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PledgesSummary } from './PledgesSummary';
import {
    PledgesSummaryFromJSON,
    PledgesSummaryFromJSONTyped,
    PledgesSummaryToJSON,
} from './PledgesSummary';

/**
 * 
 * @export
 * @interface PledgesTypeSummaries
 */
export interface PledgesTypeSummaries {
    /**
     * 
     * @type {PledgesSummary}
     * @memberof PledgesTypeSummaries
     */
    pay_upfront: PledgesSummary;
    /**
     * 
     * @type {PledgesSummary}
     * @memberof PledgesTypeSummaries
     */
    pay_on_completion: PledgesSummary;
    /**
     * 
     * @type {PledgesSummary}
     * @memberof PledgesTypeSummaries
     */
    pay_directly: PledgesSummary;
}

/**
 * Check if a given object implements the PledgesTypeSummaries interface.
 */
export function instanceOfPledgesTypeSummaries(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "pay_upfront" in value;
    isInstance = isInstance && "pay_on_completion" in value;
    isInstance = isInstance && "pay_directly" in value;

    return isInstance;
}

export function PledgesTypeSummariesFromJSON(json: any): PledgesTypeSummaries {
    return PledgesTypeSummariesFromJSONTyped(json, false);
}

export function PledgesTypeSummariesFromJSONTyped(json: any, ignoreDiscriminator: boolean): PledgesTypeSummaries {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pay_upfront': PledgesSummaryFromJSON(json['pay_upfront']),
        'pay_on_completion': PledgesSummaryFromJSON(json['pay_on_completion']),
        'pay_directly': PledgesSummaryFromJSON(json['pay_directly']),
    };
}

export function PledgesTypeSummariesToJSON(value?: PledgesTypeSummaries | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'pay_upfront': PledgesSummaryToJSON(value.pay_upfront),
        'pay_on_completion': PledgesSummaryToJSON(value.pay_on_completion),
        'pay_directly': PledgesSummaryToJSON(value.pay_directly),
    };
}

