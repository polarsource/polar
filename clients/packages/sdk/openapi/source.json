{
    "openapi": "3.0.2",
    "info": {
        "title": "Polar API",
        "description": "\nWelcome to the **Polar API** for [polar.sh](https://polar.sh).\n\nThe Public API is currently a [work in progress](https://github.com/polarsource/polar/issues/834) and is in active development. ðŸš€\n\n#### Authentication\n\nUse a [Personal Access Token](https://polar.sh/settings/tokens) and send it in the `Authorization` header on the format `Bearer [YOUR_TOKEN]`.\n\n#### Feedback\n\nIf you have any feedback or comments, reach out in the [Polar API-issue](https://github.com/polarsource/polar/issues/834), or reach out on the Polar Discord server.\n\nWe'd love to see what you've built with the API and to get your thoughts on how we can make the API better!\n\n#### Connecting\n\nThe Polar API is online at `https://api.polar.sh`.\n",
        "version": "0.1.0",
        "x-logo": {
            "url": "https://blog.polar.sh/content/images/2023/07/Frame-647--1-.png"
        }
    },
    "servers": [
        {
            "url": "https://api.polar.sh"
        }
    ],
    "paths": {
        "/healthz": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "Healthz",
                "operationId": "health:healthz",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Health:Healthz",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/readyz": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "Readyz",
                "operationId": "health:readyz",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Health:Readyz",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/users/me": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get Authenticated",
                "operationId": "users:get_authenticated",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRead"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "users"
                ],
                "summary": "Update Preferences",
                "operationId": "users:update_preferences",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdateSettings"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRead"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/users/me/token": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Create Token",
                "operationId": "users:create_token",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/users/logout": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Logout",
                "operationId": "users:logout",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogoutResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/users/me/stripe_customer_portal": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Create Stripe Customer Portal",
                "operationId": "users:create_stripe_customer_portal",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserStripePortalSession"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/integrations/github/authorize": {
            "get": {
                "tags": [
                    "integrations"
                ],
                "summary": "Github Authorize",
                "operationId": "integrations:github_authorize",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "title": "Payment Intent Id",
                            "type": "string"
                        },
                        "name": "payment_intent_id",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Goto Url",
                            "type": "string"
                        },
                        "name": "goto_url",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/integrations/github/callback": {
            "get": {
                "tags": [
                    "integrations"
                ],
                "summary": "Github Callback",
                "operationId": "integrations:github_callback",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "title": "Code",
                            "type": "string"
                        },
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Code Verifier",
                            "type": "string"
                        },
                        "name": "code_verifier",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "State",
                            "type": "string"
                        },
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Error",
                            "type": "string"
                        },
                        "name": "error",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/integrations/github/{org}/{repo}/issues/{number}/badges/{badge_type}": {
            "get": {
                "tags": [
                    "integrations"
                ],
                "summary": "Get Badge Settings",
                "operationId": "integrations:get_badge_settings",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Org",
                            "type": "string"
                        },
                        "name": "org",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Repo",
                            "type": "string"
                        },
                        "name": "repo",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Number",
                            "type": "integer"
                        },
                        "name": "number",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Badge Type",
                            "enum": [
                                "pledge"
                            ],
                            "type": "string"
                        },
                        "name": "badge_type",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GithubBadgeRead"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/integrations/github/lookup_user": {
            "post": {
                "tags": [
                    "integrations"
                ],
                "summary": "Lookup User",
                "operationId": "integrations:lookup_user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LookupUserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GithubUser"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/integrations/github/installations": {
            "post": {
                "tags": [
                    "integrations"
                ],
                "summary": "Install",
                "operationId": "integrations:install",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstallationCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationPrivateRead"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/integrations/github/webhook": {
            "post": {
                "tags": [
                    "integrations"
                ],
                "summary": "Webhook",
                "operationId": "integrations:webhook",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/polar__integrations__github__endpoints__WebhookResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/integrations/stripe/return": {
            "get": {
                "tags": [
                    "integrations"
                ],
                "summary": "Stripe Connect Return",
                "operationId": "integrations:stripe_connect_return",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Stripe Id",
                            "type": "string"
                        },
                        "name": "stripe_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/integrations/stripe/refresh": {
            "get": {
                "tags": [
                    "integrations"
                ],
                "summary": "Stripe Connect Refresh",
                "operationId": "integrations:stripe_connect_refresh",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/polar__integrations__stripe__endpoints__WebhookResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/integrations/stripe/webhook": {
            "post": {
                "tags": [
                    "integrations"
                ],
                "summary": "Webhook",
                "operationId": "integrations:webhook",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/polar__integrations__stripe__endpoints__WebhookResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/backoffice/pledges": {
            "get": {
                "tags": [
                    "backoffice"
                ],
                "summary": "Pledges",
                "operationId": "backoffice:pledges",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Backoffice:Pledges",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BackofficePledge"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/backoffice/rewards/by_issue": {
            "get": {
                "tags": [
                    "backoffice"
                ],
                "summary": "Rewards",
                "operationId": "backoffice:rewards",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "title": "Issue Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "issue_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_BackofficeReward_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/backoffice/rewards/pending": {
            "get": {
                "tags": [
                    "backoffice"
                ],
                "summary": "Rewards Pending",
                "operationId": "backoffice:rewards_pending",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_BackofficeReward_"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/backoffice/issue/{id}": {
            "get": {
                "tags": [
                    "backoffice"
                ],
                "summary": "Issue",
                "operationId": "backoffice:issue",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Issue"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/backoffice/pledges/approve": {
            "post": {
                "tags": [
                    "backoffice"
                ],
                "summary": "Pledge Reward Transfer",
                "operationId": "backoffice:pledge_reward_transfer",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PledgeRewardTransfer"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackofficeReward"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/backoffice/pledges/mark_pending/{pledge_id}": {
            "post": {
                "tags": [
                    "backoffice"
                ],
                "summary": "Pledge Mark Pending",
                "operationId": "backoffice:pledge_mark_pending",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Pledge Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "pledge_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackofficePledge"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/backoffice/pledges/create_invoice/{pledge_id}": {
            "post": {
                "tags": [
                    "backoffice"
                ],
                "summary": "Pledge Create Invoice",
                "operationId": "backoffice:pledge_create_invoice",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Pledge Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "pledge_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackofficePledge"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/backoffice/pledges/mark_disputed/{pledge_id}": {
            "post": {
                "tags": [
                    "backoffice"
                ],
                "summary": "Pledge Mark Disputed",
                "operationId": "backoffice:pledge_mark_disputed",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Pledge Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "pledge_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackofficePledge"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/backoffice/organization/sync/{name}": {
            "post": {
                "tags": [
                    "backoffice"
                ],
                "summary": "Organization Sync",
                "operationId": "backoffice:organization_sync",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Name",
                            "type": "string"
                        },
                        "name": "name",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationPrivateRead"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/backoffice/badge": {
            "post": {
                "tags": [
                    "backoffice"
                ],
                "summary": "Manage Badge",
                "operationId": "backoffice:manage_badge",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BackofficeBadge"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackofficeBadgeResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/dashboard/personal": {
            "get": {
                "tags": [
                    "dashboard"
                ],
                "summary": "Get Personal Dashboard",
                "operationId": "dashboard:get_personal_dashboard",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/IssueListType"
                                }
                            ],
                            "default": "issues"
                        },
                        "name": "issue_list_type",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/IssueStatus"
                            }
                        },
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Q",
                            "type": "string"
                        },
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/IssueSortBy"
                        },
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Only Pledged",
                            "type": "boolean",
                            "default": false
                        },
                        "name": "only_pledged",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Only Badged",
                            "type": "boolean",
                            "default": false
                        },
                        "name": "only_badged",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Page",
                            "type": "integer",
                            "default": 1
                        },
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IssueListResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/dashboard/{platform}/{org_name}": {
            "get": {
                "tags": [
                    "dashboard"
                ],
                "summary": "Get Dashboard",
                "operationId": "dashboard:get_dashboard",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Platforms"
                        },
                        "name": "platform",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Org Name",
                            "type": "string"
                        },
                        "name": "org_name",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Repo Name",
                            "type": "string"
                        },
                        "name": "repo_name",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/IssueListType"
                                }
                            ],
                            "default": "issues"
                        },
                        "name": "issue_list_type",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/IssueStatus"
                            }
                        },
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Q",
                            "type": "string"
                        },
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/IssueSortBy"
                        },
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Only Pledged",
                            "type": "boolean",
                            "default": false
                        },
                        "name": "only_pledged",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Only Badged",
                            "type": "boolean",
                            "default": false
                        },
                        "name": "only_badged",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Page",
                            "type": "integer",
                            "default": 1
                        },
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IssueListResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/dashboard/dummy_do_not_use": {
            "get": {
                "tags": [
                    "dashboard"
                ],
                "summary": "Dummy Do Not Use",
                "operationId": "dashboard:dummy_do_not_use",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PledgesTypeSummaries"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/extension/{platform}/{org_name}/{repo_name}/issues": {
            "get": {
                "tags": [
                    "extension"
                ],
                "summary": "List Issues For Extension",
                "operationId": "extension:list_issues_for_extension",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Platforms"
                        },
                        "name": "platform",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Org Name",
                            "type": "string"
                        },
                        "name": "org_name",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Repo Name",
                            "type": "string"
                        },
                        "name": "repo_name",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Numbers",
                            "type": "string"
                        },
                        "name": "numbers",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Extension:List Issues For Extension",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IssueExtensionRead"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/funding/": {
            "get": {
                "tags": [
                    "funding"
                ],
                "summary": "List Funding",
                "operationId": "funding:list_funding",
                "parameters": [
                    {
                        "description": "Filter by organization name.",
                        "required": true,
                        "schema": {
                            "title": "Organization Name",
                            "minLength": 1,
                            "type": "string",
                            "description": "Filter by organization name."
                        },
                        "example": "my-org",
                        "name": "organization_name",
                        "in": "query"
                    },
                    {
                        "description": "Filter by repository name.",
                        "required": false,
                        "schema": {
                            "title": "Repository Name",
                            "minLength": 1,
                            "type": "string",
                            "description": "Filter by repository name."
                        },
                        "example": "my-repo",
                        "name": "repository_name",
                        "in": "query"
                    },
                    {
                        "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/ListFundingSortBy"
                            },
                            "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order.",
                            "default": [
                                "newest"
                            ]
                        },
                        "name": "sorting",
                        "in": "query"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Platforms"
                        },
                        "name": "platform",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_IssueFunding_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/magic_link/request": {
            "post": {
                "tags": [
                    "magic_link"
                ],
                "summary": "Request Magic Link",
                "operationId": "magic_link:request_magic_link",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MagicLinkRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/magic_link/authenticate": {
            "post": {
                "tags": [
                    "magic_link"
                ],
                "summary": "Authenticate Magic Link",
                "operationId": "magic_link:authenticate_magic_link",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Token",
                            "type": "string"
                        },
                        "name": "token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/notifications": {
            "get": {
                "tags": [
                    "notifications"
                ],
                "summary": "Get",
                "operationId": "notifications:get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationsList"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/notifications/read": {
            "post": {
                "tags": [
                    "notifications"
                ],
                "summary": "Mark Read",
                "operationId": "notifications:mark_read",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationsMarkRead"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/repositories": {
            "get": {
                "tags": [
                    "repositories"
                ],
                "summary": "List repositories (Public API)",
                "description": "List repositories in organizations that the authenticated user is a member of. Requires authentication.",
                "operationId": "repositories:list",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_Repository_"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/repositories/search": {
            "get": {
                "tags": [
                    "repositories"
                ],
                "summary": "Search repositories (Public API)",
                "description": "Search repositories.",
                "operationId": "repositories:search",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Platforms"
                        },
                        "name": "platform",
                        "in": "query"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Organization Name",
                            "type": "string"
                        },
                        "name": "organization_name",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Repository Name",
                            "type": "string"
                        },
                        "name": "repository_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_Repository_"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/repositories/lookup": {
            "get": {
                "tags": [
                    "repositories"
                ],
                "summary": "Lookup repositories (Public API)",
                "description": "Lookup repositories. Like search but returns at only one repository.",
                "operationId": "repositories:lookup",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Platforms"
                        },
                        "name": "platform",
                        "in": "query"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Organization Name",
                            "type": "string"
                        },
                        "name": "organization_name",
                        "in": "query"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Repository Name",
                            "type": "string"
                        },
                        "name": "repository_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Repository"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/repositories/{id}": {
            "get": {
                "tags": [
                    "repositories"
                ],
                "summary": "Get a repository (Public API)",
                "description": "Get a repository",
                "operationId": "repositories:get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Repository"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/rewards/search": {
            "get": {
                "tags": [
                    "rewards"
                ],
                "summary": "Search rewards (Public API)",
                "description": "Search rewards.",
                "operationId": "rewards:search",
                "parameters": [
                    {
                        "description": "Search rewards for pledges in this organization.",
                        "required": false,
                        "schema": {
                            "title": "Pledges To Organization",
                            "type": "string",
                            "description": "Search rewards for pledges in this organization.",
                            "format": "uuid"
                        },
                        "name": "pledges_to_organization",
                        "in": "query"
                    },
                    {
                        "description": "Search rewards to user.",
                        "required": false,
                        "schema": {
                            "title": "Rewards To User",
                            "type": "string",
                            "description": "Search rewards to user.",
                            "format": "uuid"
                        },
                        "name": "rewards_to_user",
                        "in": "query"
                    },
                    {
                        "description": "Search rewards to organization.",
                        "required": false,
                        "schema": {
                            "title": "Rewards To Org",
                            "type": "string",
                            "description": "Search rewards to organization.",
                            "format": "uuid"
                        },
                        "name": "rewards_to_org",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_Reward_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/personal_access_tokens/{id}": {
            "delete": {
                "tags": [
                    "personal_access_token"
                ],
                "summary": "Delete a personal access tokens (Public API)",
                "description": "Delete a personal access tokens. Requires authentication.",
                "operationId": "personal_access_token:delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccessToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/personal_access_tokens": {
            "get": {
                "tags": [
                    "personal_access_token"
                ],
                "summary": "List personal access tokens (Public API)",
                "description": "List personal access tokens. Requires authentication.",
                "operationId": "personal_access_token:list",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_PersonalAccessToken_"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "personal_access_token"
                ],
                "summary": "Create a new personal access token (Public API)",
                "description": "Create a new personal access token. Requires authentication.",
                "operationId": "personal_access_token:create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonalAccessToken"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonalAccessTokenResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/payment_methods": {
            "get": {
                "tags": [
                    "payment_methods"
                ],
                "summary": "List",
                "operationId": "payment_methods:list",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_PaymentMethod_"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/payment_methods/{id}/detach": {
            "post": {
                "tags": [
                    "payment_methods"
                ],
                "summary": "Detach",
                "operationId": "payment_methods:detach",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Id",
                            "type": "string"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentMethod"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/accounts/search": {
            "get": {
                "tags": [
                    "accounts"
                ],
                "summary": "Search",
                "operationId": "accounts:search",
                "parameters": [
                    {
                        "description": "Search accounts connected to this organization. Either user_id or organization_id must be set.",
                        "required": false,
                        "schema": {
                            "title": "Organization Id",
                            "type": "string",
                            "description": "Search accounts connected to this organization. Either user_id or organization_id must be set.",
                            "format": "uuid"
                        },
                        "name": "organization_id",
                        "in": "query"
                    },
                    {
                        "description": "Search accounts connected to this user. Either user_id or organization_id must be set.",
                        "required": false,
                        "schema": {
                            "title": "User Id",
                            "type": "string",
                            "description": "Search accounts connected to this user. Either user_id or organization_id must be set.",
                            "format": "uuid"
                        },
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_Account_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/accounts/{id}": {
            "get": {
                "tags": [
                    "accounts"
                ],
                "summary": "Get",
                "operationId": "accounts:get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/accounts/{id}/onboarding_link": {
            "post": {
                "tags": [
                    "accounts"
                ],
                "summary": "Onboarding Link",
                "operationId": "accounts:onboarding_link",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountLink"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/accounts/{id}/dashboard_link": {
            "post": {
                "tags": [
                    "accounts"
                ],
                "summary": "Dashboard Link",
                "operationId": "accounts:dashboard_link",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountLink"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/accounts": {
            "post": {
                "tags": [
                    "accounts"
                ],
                "summary": "Create",
                "operationId": "accounts:create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/issues/search": {
            "get": {
                "tags": [
                    "issues"
                ],
                "summary": "Search issues (Public API)",
                "description": "Search issues.",
                "operationId": "issues:search",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Platforms"
                        },
                        "name": "platform",
                        "in": "query"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Organization Name",
                            "type": "string"
                        },
                        "name": "organization_name",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Repository Name",
                            "type": "string"
                        },
                        "name": "repository_name",
                        "in": "query"
                    },
                    {
                        "description": "Issue sorting method",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/IssueSortBy"
                                }
                            ],
                            "description": "Issue sorting method",
                            "default": "issues_default"
                        },
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "description": "Set to true to only return issues that have a pledge behind them",
                        "required": false,
                        "schema": {
                            "title": "Have Pledge",
                            "type": "boolean",
                            "description": "Set to true to only return issues that have a pledge behind them"
                        },
                        "name": "have_pledge",
                        "in": "query"
                    },
                    {
                        "description": "Set to true to only return issues that have the Polar badge in the issue description",
                        "required": false,
                        "schema": {
                            "title": "Have Badge",
                            "type": "boolean",
                            "description": "Set to true to only return issues that have the Polar badge in the issue description"
                        },
                        "name": "have_badge",
                        "in": "query"
                    },
                    {
                        "description": "Filter to only return issues connected to this GitHub milestone.",
                        "required": false,
                        "schema": {
                            "title": "Github Milestone Number",
                            "type": "integer",
                            "description": "Filter to only return issues connected to this GitHub milestone."
                        },
                        "name": "github_milestone_number",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_Issue_"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/issues/lookup": {
            "get": {
                "tags": [
                    "issues"
                ],
                "summary": "Lookup",
                "operationId": "issues:lookup",
                "parameters": [
                    {
                        "description": "URL to issue on external source",
                        "required": false,
                        "schema": {
                            "title": "External Url",
                            "type": "string",
                            "description": "URL to issue on external source"
                        },
                        "example": "https://github.com/polarsource/polar/issues/897",
                        "name": "external_url",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Issue"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/issues/{id}/body": {
            "get": {
                "tags": [
                    "issues"
                ],
                "summary": "Get Body",
                "operationId": "issues:get_body",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/issues/for_you": {
            "get": {
                "tags": [
                    "issues"
                ],
                "summary": "For You",
                "operationId": "issues:for_you",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_Issue_"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/issues/{id}": {
            "get": {
                "tags": [
                    "issues"
                ],
                "summary": "Get issue (Public API)",
                "description": "Get issue",
                "operationId": "issues:get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Issue"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "issues"
                ],
                "summary": "Update issue. (Public API)",
                "description": "Update issue. Requires authentication.",
                "operationId": "issues:update",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateIssue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Issue"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/issues/{id}/confirm_solved": {
            "post": {
                "tags": [
                    "issues"
                ],
                "summary": "Mark an issue as confirmed solved. (Public API)",
                "description": "Mark an issue as confirmed solved, and configure issue reward splits. Enables payouts of pledges. Can only be done once per issue. Requires authentication.",
                "operationId": "issues:confirm",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConfirmIssue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Issue"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/issues/{id}/add_badge": {
            "post": {
                "tags": [
                    "issues"
                ],
                "summary": "Add Polar Badge",
                "operationId": "issues:add_polar_badge",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Issue"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/issues/{id}/remove_badge": {
            "post": {
                "tags": [
                    "issues"
                ],
                "summary": "Remove Polar Badge",
                "operationId": "issues:remove_polar_badge",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Issue"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/issues/{id}/comment": {
            "post": {
                "tags": [
                    "issues"
                ],
                "summary": "Add Issue Comment",
                "operationId": "issues:add_issue_comment",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostIssueComment"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Issue"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/issues/{id}/badge_with_message": {
            "post": {
                "tags": [
                    "issues"
                ],
                "summary": "Badge With Message",
                "operationId": "issues:badge_with_message",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IssueUpdateBadgeMessage"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Issue"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/pledges/search": {
            "get": {
                "tags": [
                    "pledges"
                ],
                "summary": "Search pledges (Public API)",
                "description": "Search pledges. Requires authentication. The user can only read pledges that they have made (personally or via an organization) or received (to organizations that they are a member of).",
                "operationId": "pledges:search",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/Platforms"
                        },
                        "name": "platform",
                        "in": "query"
                    },
                    {
                        "description": "Search pledges in the organization with this name. Requires platform to be set.",
                        "required": false,
                        "schema": {
                            "title": "Organization Name",
                            "minLength": 1,
                            "type": "string",
                            "description": "Search pledges in the organization with this name. Requires platform to be set."
                        },
                        "example": "my-org",
                        "name": "organization_name",
                        "in": "query"
                    },
                    {
                        "description": "Search pledges in the repository with this name. Can only be used if organization_name is set.",
                        "required": false,
                        "schema": {
                            "title": "Repository Name",
                            "minLength": 1,
                            "type": "string",
                            "description": "Search pledges in the repository with this name. Can only be used if organization_name is set."
                        },
                        "example": "my-repo",
                        "name": "repository_name",
                        "in": "query"
                    },
                    {
                        "description": "Search pledges to this issue",
                        "required": false,
                        "schema": {
                            "title": "Issue Id",
                            "type": "string",
                            "description": "Search pledges to this issue",
                            "format": "uuid"
                        },
                        "name": "issue_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_Pledge_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/pledges/summary": {
            "get": {
                "tags": [
                    "pledges"
                ],
                "summary": "Get pledges summary (Public API)",
                "description": "Get summary of pledges for resource.",
                "operationId": "pledges:summary",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Issue Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "issue_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PledgePledgesSummary"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/pledges/{id}": {
            "get": {
                "tags": [
                    "pledges"
                ],
                "summary": "Get pledge (Public API)",
                "description": "Get a pledge. Requires authentication.",
                "operationId": "pledges:get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pledge"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/pledges": {
            "post": {
                "tags": [
                    "pledges"
                ],
                "summary": "Create",
                "description": "Creates a pledge from a payment intent",
                "operationId": "pledges:create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePledgeFromPaymentIntent"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pledge"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/pledges/pay_on_completion": {
            "post": {
                "tags": [
                    "pledges"
                ],
                "summary": "Create Pay On Completion",
                "description": "Creates a pay_on_completion type of pledge",
                "operationId": "pledges:create_pay_on_completion",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePledgePayLater"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pledge"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/pledges/{id}/create_invoice": {
            "post": {
                "tags": [
                    "pledges"
                ],
                "summary": "Create Invoice",
                "description": "Creates an invoice for pay_on_completion pledges",
                "operationId": "pledges:create_invoice",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pledge"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/pledges/payment_intent": {
            "post": {
                "tags": [
                    "pledges"
                ],
                "summary": "Create Payment Intent",
                "operationId": "pledges:create_payment_intent",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PledgeStripePaymentIntentCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PledgeStripePaymentIntentMutationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "detail": "message"
                    },
                    "403": {
                        "description": "Forbidden",
                        "detail": "message"
                    },
                    "404": {
                        "description": "Not Found",
                        "detail": "message"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/pledges/payment_intent/{id}": {
            "patch": {
                "tags": [
                    "pledges"
                ],
                "summary": "Update Payment Intent",
                "operationId": "pledges:update_payment_intent",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Id",
                            "type": "string"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PledgeStripePaymentIntentUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PledgeStripePaymentIntentMutationResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/pledges/{pledge_id}/dispute": {
            "post": {
                "tags": [
                    "pledges"
                ],
                "summary": "Dispute Pledge",
                "operationId": "pledges:dispute_pledge",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Pledge Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "pledge_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Reason",
                            "type": "string"
                        },
                        "name": "reason",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PledgeRead"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/user/stream": {
            "get": {
                "tags": [
                    "stream"
                ],
                "summary": "User Stream",
                "operationId": "stream:user_stream",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/{platform}/{org_name}/stream": {
            "get": {
                "tags": [
                    "stream"
                ],
                "summary": "User Org Stream",
                "operationId": "stream:user_org_stream",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Platforms"
                        },
                        "name": "platform",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Org Name",
                            "type": "string"
                        },
                        "name": "org_name",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/{platform}/{org_name}/{repo_name}/stream": {
            "get": {
                "tags": [
                    "stream"
                ],
                "summary": "User Org Repo Stream",
                "operationId": "stream:user_org_repo_stream",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Platforms"
                        },
                        "name": "platform",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Org Name",
                            "type": "string"
                        },
                        "name": "org_name",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Repo Name",
                            "type": "string"
                        },
                        "name": "repo_name",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/organizations": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "List organizations (Public API)",
                "description": "List organizations that the authenticated user is a member of. Requires authentication.",
                "operationId": "organizations:list",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_Organization_"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/organizations/search": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Search organizations (Public API)",
                "description": "Search organizations.",
                "operationId": "organizations:search",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/Platforms"
                        },
                        "name": "platform",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Organization Name",
                            "type": "string"
                        },
                        "name": "organization_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_Organization_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/organizations/lookup": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Lookup organization (Public API)",
                "description": "Lookup organization. Like search but returns at only one organization.",
                "operationId": "organizations:lookup",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/Platforms"
                        },
                        "name": "platform",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Organization Name",
                            "type": "string"
                        },
                        "name": "organization_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/organizations/{id}": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get organization (Public API)",
                "description": "Get organization",
                "operationId": "organizations:get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/organizations/{id}/badge_settings": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get badge settings (Internal API)",
                "operationId": "organizations:get_badge_settings",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationBadgeSettingsRead"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "organizations"
                ],
                "summary": "Update badge settings (Internal API)",
                "operationId": "organizations:update_badge_settings",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Id",
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationBadgeSettingsUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationBadgeSettingsUpdate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Account": {
                "title": "Account",
                "required": [
                    "id",
                    "account_type",
                    "country"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "account_type": {
                        "$ref": "#/components/schemas/AccountType"
                    },
                    "stripe_id": {
                        "title": "Stripe Id",
                        "type": "string"
                    },
                    "open_collective_slug": {
                        "title": "Open Collective Slug",
                        "type": "string"
                    },
                    "is_details_submitted": {
                        "title": "Is Details Submitted",
                        "type": "boolean"
                    },
                    "country": {
                        "title": "Country",
                        "maxLength": 2,
                        "minLength": 2,
                        "type": "string"
                    }
                }
            },
            "AccountCreate": {
                "title": "AccountCreate",
                "required": [
                    "account_type",
                    "country"
                ],
                "type": "object",
                "properties": {
                    "user_id": {
                        "title": "User Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "organization_id": {
                        "title": "Organization Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "account_type": {
                        "$ref": "#/components/schemas/AccountType"
                    },
                    "open_collective_slug": {
                        "title": "Open Collective Slug",
                        "minLength": 1,
                        "type": "string"
                    },
                    "country": {
                        "title": "Country",
                        "maxLength": 2,
                        "minLength": 2,
                        "type": "string",
                        "description": "Two letter uppercase country code"
                    }
                }
            },
            "AccountLink": {
                "title": "AccountLink",
                "required": [
                    "url"
                ],
                "type": "object",
                "properties": {
                    "url": {
                        "title": "Url",
                        "type": "string"
                    }
                }
            },
            "AccountType": {
                "title": "AccountType",
                "enum": [
                    "stripe",
                    "open_collective"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "Author": {
                "title": "Author",
                "required": [
                    "id",
                    "login",
                    "html_url",
                    "avatar_url"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "login": {
                        "title": "Login",
                        "type": "string"
                    },
                    "html_url": {
                        "title": "Html Url",
                        "maxLength": 2083,
                        "minLength": 1,
                        "type": "string",
                        "format": "uri"
                    },
                    "avatar_url": {
                        "title": "Avatar Url",
                        "maxLength": 2083,
                        "minLength": 1,
                        "type": "string",
                        "format": "uri"
                    }
                }
            },
            "AuthorizationResponse": {
                "title": "AuthorizationResponse",
                "required": [
                    "authorization_url"
                ],
                "type": "object",
                "properties": {
                    "authorization_url": {
                        "title": "Authorization Url",
                        "type": "string"
                    }
                }
            },
            "BackofficeBadge": {
                "title": "BackofficeBadge",
                "required": [
                    "org_slug",
                    "repo_slug",
                    "issue_number",
                    "action"
                ],
                "type": "object",
                "properties": {
                    "org_slug": {
                        "title": "Org Slug",
                        "type": "string"
                    },
                    "repo_slug": {
                        "title": "Repo Slug",
                        "type": "string"
                    },
                    "issue_number": {
                        "title": "Issue Number",
                        "type": "integer"
                    },
                    "action": {
                        "title": "Action",
                        "enum": [
                            "embed",
                            "remove"
                        ],
                        "type": "string"
                    }
                }
            },
            "BackofficeBadgeResponse": {
                "title": "BackofficeBadgeResponse",
                "required": [
                    "org_slug",
                    "repo_slug",
                    "issue_number",
                    "action",
                    "success"
                ],
                "type": "object",
                "properties": {
                    "org_slug": {
                        "title": "Org Slug",
                        "type": "string"
                    },
                    "repo_slug": {
                        "title": "Repo Slug",
                        "type": "string"
                    },
                    "issue_number": {
                        "title": "Issue Number",
                        "type": "integer"
                    },
                    "action": {
                        "title": "Action",
                        "enum": [
                            "embed",
                            "remove"
                        ],
                        "type": "string"
                    },
                    "success": {
                        "title": "Success",
                        "type": "boolean"
                    }
                }
            },
            "BackofficePledge": {
                "title": "BackofficePledge",
                "required": [
                    "id",
                    "created_at",
                    "amount",
                    "state",
                    "type",
                    "issue"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "description": "Pledge ID",
                        "format": "uuid"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "string",
                        "description": "When the pledge was created",
                        "format": "date-time"
                    },
                    "amount": {
                        "title": "Amount",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyAmount"
                            }
                        ],
                        "description": "Amount pledged towards the issue"
                    },
                    "state": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PledgeState"
                            }
                        ],
                        "description": "Current state of the pledge"
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PledgeType"
                            }
                        ],
                        "description": "Type of pledge"
                    },
                    "refunded_at": {
                        "title": "Refunded At",
                        "type": "string",
                        "description": "If and when the pledge was refunded to the pledger",
                        "format": "date-time"
                    },
                    "scheduled_payout_at": {
                        "title": "Scheduled Payout At",
                        "type": "string",
                        "description": "When the payout is scheduled to be made to the maintainers behind the issue. Disputes must be made before this date.",
                        "format": "date-time"
                    },
                    "issue": {
                        "title": "Issue",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Issue"
                            }
                        ],
                        "description": "The issue that the pledge was made towards"
                    },
                    "pledger": {
                        "title": "Pledger",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Pledger"
                            }
                        ],
                        "description": "The user or organization that made this pledge"
                    },
                    "hosted_invoice_url": {
                        "title": "Hosted Invoice Url",
                        "type": "string",
                        "description": "URL of invoice for this pledge"
                    },
                    "payment_id": {
                        "title": "Payment Id",
                        "type": "string"
                    },
                    "dispute_reason": {
                        "title": "Dispute Reason",
                        "type": "string"
                    },
                    "disputed_by_user_id": {
                        "title": "Disputed By User Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "disputed_at": {
                        "title": "Disputed At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "pledger_email": {
                        "title": "Pledger Email",
                        "type": "string"
                    }
                }
            },
            "BackofficeReward": {
                "title": "BackofficeReward",
                "required": [
                    "pledge",
                    "amount",
                    "state",
                    "issue_reward_id"
                ],
                "type": "object",
                "properties": {
                    "pledge": {
                        "title": "Pledge",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Pledge"
                            }
                        ],
                        "description": "The pledge that the reward was split from"
                    },
                    "user": {
                        "title": "User",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/User"
                            }
                        ],
                        "description": "The user that received the reward (if any)"
                    },
                    "organization": {
                        "title": "Organization",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Organization"
                            }
                        ],
                        "description": "The organization that received the reward (if any)"
                    },
                    "amount": {
                        "$ref": "#/components/schemas/CurrencyAmount"
                    },
                    "state": {
                        "$ref": "#/components/schemas/RewardState"
                    },
                    "paid_at": {
                        "title": "Paid At",
                        "type": "string",
                        "description": "If and when the reward was paid out.",
                        "format": "date-time"
                    },
                    "transfer_id": {
                        "title": "Transfer Id",
                        "type": "string"
                    },
                    "issue_reward_id": {
                        "title": "Issue Reward Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "pledge_payment_id": {
                        "title": "Pledge Payment Id",
                        "type": "string"
                    },
                    "pledger_email": {
                        "title": "Pledger Email",
                        "type": "string"
                    }
                }
            },
            "ConfirmIssue": {
                "title": "ConfirmIssue",
                "required": [
                    "splits"
                ],
                "type": "object",
                "properties": {
                    "splits": {
                        "title": "Splits",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConfirmIssueSplit"
                        }
                    }
                }
            },
            "ConfirmIssueSplit": {
                "title": "ConfirmIssueSplit",
                "required": [
                    "share_thousands"
                ],
                "type": "object",
                "properties": {
                    "organization_id": {
                        "title": "Organization Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "github_username": {
                        "title": "Github Username",
                        "type": "string"
                    },
                    "share_thousands": {
                        "title": "Share Thousands",
                        "type": "integer"
                    }
                }
            },
            "CreatePersonalAccessToken": {
                "title": "CreatePersonalAccessToken",
                "required": [
                    "comment"
                ],
                "type": "object",
                "properties": {
                    "comment": {
                        "title": "Comment",
                        "type": "string"
                    }
                }
            },
            "CreatePersonalAccessTokenResponse": {
                "title": "CreatePersonalAccessTokenResponse",
                "required": [
                    "id",
                    "created_at",
                    "expires_at",
                    "comment",
                    "token"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_used_at": {
                        "title": "Last Used At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "expires_at": {
                        "title": "Expires At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "comment": {
                        "title": "Comment",
                        "type": "string"
                    },
                    "token": {
                        "title": "Token",
                        "type": "string"
                    }
                }
            },
            "CreatePledgeFromPaymentIntent": {
                "title": "CreatePledgeFromPaymentIntent",
                "required": [
                    "payment_intent_id"
                ],
                "type": "object",
                "properties": {
                    "payment_intent_id": {
                        "title": "Payment Intent Id",
                        "type": "string"
                    }
                }
            },
            "CreatePledgePayLater": {
                "title": "CreatePledgePayLater",
                "required": [
                    "issue_id",
                    "amount"
                ],
                "type": "object",
                "properties": {
                    "issue_id": {
                        "title": "Issue Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "amount": {
                        "title": "Amount",
                        "type": "integer"
                    }
                }
            },
            "CurrencyAmount": {
                "title": "CurrencyAmount",
                "required": [
                    "currency",
                    "amount"
                ],
                "type": "object",
                "properties": {
                    "currency": {
                        "title": "Currency",
                        "type": "string",
                        "description": "Three letter currency code (eg: USD)"
                    },
                    "amount": {
                        "title": "Amount",
                        "type": "integer",
                        "description": "Amount in the currencys smallest unit (cents if currency is USD)"
                    }
                }
            },
            "Entry_Any_": {
                "title": "Entry[Any]",
                "required": [
                    "type",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "string",
                                "format": "uuid"
                            }
                        ]
                    },
                    "attributes": {
                        "title": "Attributes"
                    },
                    "relationships": {
                        "title": "Relationships",
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/Relationship"
                        }
                    }
                }
            },
            "Entry_Issue_": {
                "title": "Entry[Issue]",
                "required": [
                    "type",
                    "id",
                    "attributes"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "string",
                                "format": "uuid"
                            }
                        ]
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/Issue"
                    },
                    "relationships": {
                        "title": "Relationships",
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/Relationship"
                        }
                    }
                }
            },
            "ExternalGitHubCommitReference": {
                "title": "ExternalGitHubCommitReference",
                "required": [
                    "author_login",
                    "author_avatar",
                    "sha",
                    "organization_name",
                    "repository_name"
                ],
                "type": "object",
                "properties": {
                    "author_login": {
                        "title": "Author Login",
                        "type": "string"
                    },
                    "author_avatar": {
                        "title": "Author Avatar",
                        "type": "string"
                    },
                    "sha": {
                        "title": "Sha",
                        "type": "string"
                    },
                    "organization_name": {
                        "title": "Organization Name",
                        "type": "string"
                    },
                    "repository_name": {
                        "title": "Repository Name",
                        "type": "string"
                    },
                    "branch_name": {
                        "title": "Branch Name",
                        "type": "string"
                    },
                    "message": {
                        "title": "Message",
                        "type": "string"
                    }
                }
            },
            "ExternalGitHubPullRequestReference": {
                "title": "ExternalGitHubPullRequestReference",
                "required": [
                    "title",
                    "author_login",
                    "author_avatar",
                    "number",
                    "organization_name",
                    "repository_name",
                    "state"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "title": "Title",
                        "type": "string"
                    },
                    "author_login": {
                        "title": "Author Login",
                        "type": "string"
                    },
                    "author_avatar": {
                        "title": "Author Avatar",
                        "type": "string"
                    },
                    "number": {
                        "title": "Number",
                        "type": "integer"
                    },
                    "organization_name": {
                        "title": "Organization Name",
                        "type": "string"
                    },
                    "repository_name": {
                        "title": "Repository Name",
                        "type": "string"
                    },
                    "state": {
                        "title": "State",
                        "type": "string"
                    }
                }
            },
            "Funding": {
                "title": "Funding",
                "type": "object",
                "properties": {
                    "funding_goal": {
                        "$ref": "#/components/schemas/CurrencyAmount"
                    },
                    "pledges_sum": {
                        "title": "Pledges Sum",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyAmount"
                            }
                        ],
                        "description": "Sum of pledges to this isuse (including currently open pledges and pledges that have been paid out). Always in USD."
                    }
                }
            },
            "GithubBadgeRead": {
                "title": "GithubBadgeRead",
                "required": [
                    "badge_type",
                    "amount",
                    "funding"
                ],
                "type": "object",
                "properties": {
                    "badge_type": {
                        "title": "Badge Type",
                        "enum": [
                            "pledge"
                        ],
                        "type": "string"
                    },
                    "amount": {
                        "title": "Amount",
                        "type": "integer"
                    },
                    "funding": {
                        "$ref": "#/components/schemas/Funding"
                    }
                }
            },
            "GithubUser": {
                "title": "GithubUser",
                "required": [
                    "username",
                    "avatar_url"
                ],
                "type": "object",
                "properties": {
                    "username": {
                        "title": "Username",
                        "type": "string"
                    },
                    "avatar_url": {
                        "title": "Avatar Url",
                        "type": "string"
                    }
                }
            },
            "HTTPValidationError": {
                "title": "HTTPValidationError",
                "type": "object",
                "properties": {
                    "detail": {
                        "title": "Detail",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        }
                    }
                }
            },
            "InstallationCreate": {
                "title": "InstallationCreate",
                "required": [
                    "platform",
                    "external_id"
                ],
                "type": "object",
                "properties": {
                    "platform": {
                        "title": "Platform",
                        "enum": [
                            "github"
                        ],
                        "type": "string"
                    },
                    "external_id": {
                        "title": "External Id",
                        "type": "integer"
                    }
                }
            },
            "Issue": {
                "title": "Issue",
                "required": [
                    "id",
                    "platform",
                    "number",
                    "title",
                    "state",
                    "issue_created_at",
                    "needs_confirmation_solved",
                    "funding",
                    "repository",
                    "pledge_badge_currently_embedded"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "platform": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Platforms"
                            }
                        ],
                        "description": "Issue platform (currently always GitHub)"
                    },
                    "number": {
                        "title": "Number",
                        "type": "integer",
                        "description": "GitHub #number"
                    },
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "description": "GitHub issue title"
                    },
                    "body": {
                        "title": "Body",
                        "type": "string",
                        "description": "GitHub issue body"
                    },
                    "comments": {
                        "title": "Comments",
                        "type": "integer",
                        "description": "Number of GitHub comments made on the issue"
                    },
                    "labels": {
                        "title": "Labels",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Label"
                        },
                        "default": []
                    },
                    "author": {
                        "title": "Author",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Author"
                            }
                        ],
                        "description": "GitHub author"
                    },
                    "reactions": {
                        "title": "Reactions",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Reactions"
                            }
                        ],
                        "description": "GitHub reactions"
                    },
                    "state": {
                        "title": "State",
                        "enum": [
                            "OPEN",
                            "CLOSED"
                        ],
                        "type": "string"
                    },
                    "issue_closed_at": {
                        "title": "Issue Closed At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "issue_modified_at": {
                        "title": "Issue Modified At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "issue_created_at": {
                        "title": "Issue Created At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "needs_confirmation_solved": {
                        "title": "Needs Confirmation Solved",
                        "type": "boolean",
                        "description": "If a maintainer needs to mark this issue as solved"
                    },
                    "confirmed_solved_at": {
                        "title": "Confirmed Solved At",
                        "type": "string",
                        "description": "If this issue has been marked as confirmed solved through Polar",
                        "format": "date-time"
                    },
                    "funding": {
                        "$ref": "#/components/schemas/Funding"
                    },
                    "repository": {
                        "title": "Repository",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Repository"
                            }
                        ],
                        "description": "The repository that the issue is in"
                    },
                    "upfront_split_to_contributors": {
                        "title": "Upfront Split To Contributors",
                        "type": "integer",
                        "description": "Share of rewrads that will be rewarded to contributors of this issue. A number between 0 and 100 (inclusive)."
                    },
                    "pledge_badge_currently_embedded": {
                        "title": "Pledge Badge Currently Embedded",
                        "type": "boolean",
                        "description": "If this issue currently has the Polar badge SVG embedded"
                    },
                    "badge_custom_content": {
                        "title": "Badge Custom Content",
                        "type": "string",
                        "description": "Optional custom badge SVG promotional content"
                    }
                }
            },
            "IssueExtensionRead": {
                "title": "IssueExtensionRead",
                "required": [
                    "number",
                    "pledges",
                    "references",
                    "issue"
                ],
                "type": "object",
                "properties": {
                    "number": {
                        "title": "Number",
                        "type": "integer"
                    },
                    "pledges": {
                        "title": "Pledges",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PledgeRead"
                        }
                    },
                    "references": {
                        "title": "References",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IssueReferenceRead"
                        }
                    },
                    "issue": {
                        "$ref": "#/components/schemas/Issue"
                    }
                }
            },
            "IssueFunding": {
                "title": "IssueFunding",
                "required": [
                    "issue",
                    "total",
                    "pledges_summaries"
                ],
                "type": "object",
                "properties": {
                    "issue": {
                        "$ref": "#/components/schemas/Issue"
                    },
                    "funding_goal": {
                        "$ref": "#/components/schemas/CurrencyAmount"
                    },
                    "total": {
                        "$ref": "#/components/schemas/CurrencyAmount"
                    },
                    "pledges_summaries": {
                        "$ref": "#/components/schemas/PledgesTypeSummaries"
                    }
                }
            },
            "IssueListResponse": {
                "title": "IssueListResponse",
                "required": [
                    "data",
                    "pagination"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "title": "Data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Entry_Issue_"
                        }
                    },
                    "included": {
                        "title": "Included",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Entry_Any_"
                        },
                        "default": []
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/PaginationResponse"
                    }
                }
            },
            "IssueListType": {
                "title": "IssueListType",
                "enum": [
                    "issues",
                    "dependencies"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "IssueReferenceRead": {
                "title": "IssueReferenceRead",
                "required": [
                    "id",
                    "type",
                    "payload"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/IssueReferenceType"
                    },
                    "payload": {
                        "title": "Payload",
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PullRequestReference"
                            },
                            {
                                "$ref": "#/components/schemas/ExternalGitHubPullRequestReference"
                            },
                            {
                                "$ref": "#/components/schemas/ExternalGitHubCommitReference"
                            }
                        ]
                    }
                }
            },
            "IssueReferenceType": {
                "title": "IssueReferenceType",
                "enum": [
                    "pull_request",
                    "external_github_pull_request",
                    "external_github_commit"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "IssueSortBy": {
                "title": "IssueSortBy",
                "enum": [
                    "newest",
                    "recently_updated",
                    "least_recently_updated",
                    "pledged_amount_desc",
                    "relevance",
                    "dependencies_default",
                    "issues_default",
                    "most_engagement",
                    "most_positive_reactions",
                    "funding_goal_desc_and_most_positive_reactions"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "IssueStatus": {
                "title": "IssueStatus",
                "enum": [
                    "backlog",
                    "triaged",
                    "in_progress",
                    "pull_request",
                    "closed",
                    "building"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "IssueUpdateBadgeMessage": {
                "title": "IssueUpdateBadgeMessage",
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "title": "Message",
                        "type": "string"
                    }
                }
            },
            "Label": {
                "title": "Label",
                "required": [
                    "name",
                    "color"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "color": {
                        "title": "Color",
                        "type": "string"
                    }
                }
            },
            "ListFundingSortBy": {
                "title": "ListFundingSortBy",
                "enum": [
                    "oldest",
                    "newest",
                    "most_funded",
                    "most_engagement"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "ListResource_Account_": {
                "title": "ListResource[Account]",
                "required": [
                    "pagination"
                ],
                "type": "object",
                "properties": {
                    "items": {
                        "title": "Items",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Account"
                        },
                        "default": []
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                }
            },
            "ListResource_BackofficeReward_": {
                "title": "ListResource[BackofficeReward]",
                "required": [
                    "pagination"
                ],
                "type": "object",
                "properties": {
                    "items": {
                        "title": "Items",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BackofficeReward"
                        },
                        "default": []
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                }
            },
            "ListResource_IssueFunding_": {
                "title": "ListResource[IssueFunding]",
                "required": [
                    "pagination"
                ],
                "type": "object",
                "properties": {
                    "items": {
                        "title": "Items",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IssueFunding"
                        },
                        "default": []
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                }
            },
            "ListResource_Issue_": {
                "title": "ListResource[Issue]",
                "required": [
                    "pagination"
                ],
                "type": "object",
                "properties": {
                    "items": {
                        "title": "Items",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Issue"
                        },
                        "default": []
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                }
            },
            "ListResource_Organization_": {
                "title": "ListResource[Organization]",
                "required": [
                    "pagination"
                ],
                "type": "object",
                "properties": {
                    "items": {
                        "title": "Items",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Organization"
                        },
                        "default": []
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                }
            },
            "ListResource_PaymentMethod_": {
                "title": "ListResource[PaymentMethod]",
                "required": [
                    "pagination"
                ],
                "type": "object",
                "properties": {
                    "items": {
                        "title": "Items",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PaymentMethod"
                        },
                        "default": []
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                }
            },
            "ListResource_PersonalAccessToken_": {
                "title": "ListResource[PersonalAccessToken]",
                "required": [
                    "pagination"
                ],
                "type": "object",
                "properties": {
                    "items": {
                        "title": "Items",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PersonalAccessToken"
                        },
                        "default": []
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                }
            },
            "ListResource_Pledge_": {
                "title": "ListResource[Pledge]",
                "required": [
                    "pagination"
                ],
                "type": "object",
                "properties": {
                    "items": {
                        "title": "Items",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Pledge"
                        },
                        "default": []
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                }
            },
            "ListResource_Repository_": {
                "title": "ListResource[Repository]",
                "required": [
                    "pagination"
                ],
                "type": "object",
                "properties": {
                    "items": {
                        "title": "Items",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Repository"
                        },
                        "default": []
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                }
            },
            "ListResource_Reward_": {
                "title": "ListResource[Reward]",
                "required": [
                    "pagination"
                ],
                "type": "object",
                "properties": {
                    "items": {
                        "title": "Items",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reward"
                        },
                        "default": []
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                }
            },
            "LoginResponse": {
                "title": "LoginResponse",
                "required": [
                    "success",
                    "expires_at"
                ],
                "type": "object",
                "properties": {
                    "success": {
                        "title": "Success",
                        "type": "boolean"
                    },
                    "expires_at": {
                        "title": "Expires At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "token": {
                        "title": "Token",
                        "type": "string"
                    },
                    "goto_url": {
                        "title": "Goto Url",
                        "type": "string"
                    }
                }
            },
            "LogoutResponse": {
                "title": "LogoutResponse",
                "required": [
                    "success"
                ],
                "type": "object",
                "properties": {
                    "success": {
                        "title": "Success",
                        "type": "boolean"
                    }
                }
            },
            "LookupUserRequest": {
                "title": "LookupUserRequest",
                "required": [
                    "username"
                ],
                "type": "object",
                "properties": {
                    "username": {
                        "title": "Username",
                        "type": "string"
                    }
                }
            },
            "MagicLinkRequest": {
                "title": "MagicLinkRequest",
                "required": [
                    "email"
                ],
                "type": "object",
                "properties": {
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "format": "email"
                    }
                }
            },
            "MaintainerPledgeConfirmationPendingNotification": {
                "title": "MaintainerPledgeConfirmationPendingNotification",
                "required": [
                    "pledger_name",
                    "pledge_amount",
                    "issue_url",
                    "issue_title",
                    "issue_org_name",
                    "issue_repo_name",
                    "issue_number",
                    "maintainer_has_stripe_account"
                ],
                "type": "object",
                "properties": {
                    "pledger_name": {
                        "title": "Pledger Name",
                        "type": "string"
                    },
                    "pledge_amount": {
                        "title": "Pledge Amount",
                        "type": "string"
                    },
                    "issue_url": {
                        "title": "Issue Url",
                        "type": "string"
                    },
                    "issue_title": {
                        "title": "Issue Title",
                        "type": "string"
                    },
                    "issue_org_name": {
                        "title": "Issue Org Name",
                        "type": "string"
                    },
                    "issue_repo_name": {
                        "title": "Issue Repo Name",
                        "type": "string"
                    },
                    "issue_number": {
                        "title": "Issue Number",
                        "type": "integer"
                    },
                    "maintainer_has_stripe_account": {
                        "title": "Maintainer Has Stripe Account",
                        "type": "boolean"
                    },
                    "pledge_id": {
                        "title": "Pledge Id",
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "MaintainerPledgeCreatedNotification": {
                "title": "MaintainerPledgeCreatedNotification",
                "required": [
                    "pledger_name",
                    "pledge_amount",
                    "issue_url",
                    "issue_title",
                    "issue_org_name",
                    "issue_repo_name",
                    "issue_number",
                    "maintainer_has_stripe_account"
                ],
                "type": "object",
                "properties": {
                    "pledger_name": {
                        "title": "Pledger Name",
                        "type": "string"
                    },
                    "pledge_amount": {
                        "title": "Pledge Amount",
                        "type": "string"
                    },
                    "issue_url": {
                        "title": "Issue Url",
                        "type": "string"
                    },
                    "issue_title": {
                        "title": "Issue Title",
                        "type": "string"
                    },
                    "issue_org_name": {
                        "title": "Issue Org Name",
                        "type": "string"
                    },
                    "issue_repo_name": {
                        "title": "Issue Repo Name",
                        "type": "string"
                    },
                    "issue_number": {
                        "title": "Issue Number",
                        "type": "integer"
                    },
                    "maintainer_has_stripe_account": {
                        "title": "Maintainer Has Stripe Account",
                        "type": "boolean"
                    },
                    "pledge_id": {
                        "title": "Pledge Id",
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "MaintainerPledgePaidNotification": {
                "title": "MaintainerPledgePaidNotification",
                "required": [
                    "paid_out_amount",
                    "issue_url",
                    "issue_title",
                    "issue_org_name",
                    "issue_repo_name",
                    "issue_number"
                ],
                "type": "object",
                "properties": {
                    "paid_out_amount": {
                        "title": "Paid Out Amount",
                        "type": "string"
                    },
                    "issue_url": {
                        "title": "Issue Url",
                        "type": "string"
                    },
                    "issue_title": {
                        "title": "Issue Title",
                        "type": "string"
                    },
                    "issue_org_name": {
                        "title": "Issue Org Name",
                        "type": "string"
                    },
                    "issue_repo_name": {
                        "title": "Issue Repo Name",
                        "type": "string"
                    },
                    "issue_number": {
                        "title": "Issue Number",
                        "type": "integer"
                    },
                    "pledge_id": {
                        "title": "Pledge Id",
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "MaintainerPledgePendingNotification": {
                "title": "MaintainerPledgePendingNotification",
                "required": [
                    "pledger_name",
                    "pledge_amount",
                    "issue_url",
                    "issue_title",
                    "issue_org_name",
                    "issue_repo_name",
                    "issue_number",
                    "maintainer_has_stripe_account"
                ],
                "type": "object",
                "properties": {
                    "pledger_name": {
                        "title": "Pledger Name",
                        "type": "string"
                    },
                    "pledge_amount": {
                        "title": "Pledge Amount",
                        "type": "string"
                    },
                    "issue_url": {
                        "title": "Issue Url",
                        "type": "string"
                    },
                    "issue_title": {
                        "title": "Issue Title",
                        "type": "string"
                    },
                    "issue_org_name": {
                        "title": "Issue Org Name",
                        "type": "string"
                    },
                    "issue_repo_name": {
                        "title": "Issue Repo Name",
                        "type": "string"
                    },
                    "issue_number": {
                        "title": "Issue Number",
                        "type": "integer"
                    },
                    "maintainer_has_stripe_account": {
                        "title": "Maintainer Has Stripe Account",
                        "type": "boolean"
                    },
                    "pledge_id": {
                        "title": "Pledge Id",
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "MaintainerPledgedIssueConfirmationPendingNotification": {
                "title": "MaintainerPledgedIssueConfirmationPendingNotification",
                "required": [
                    "pledge_amount_sum",
                    "issue_id",
                    "issue_url",
                    "issue_title",
                    "issue_org_name",
                    "issue_repo_name",
                    "issue_number",
                    "maintainer_has_account"
                ],
                "type": "object",
                "properties": {
                    "pledge_amount_sum": {
                        "title": "Pledge Amount Sum",
                        "type": "string"
                    },
                    "issue_id": {
                        "title": "Issue Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "issue_url": {
                        "title": "Issue Url",
                        "type": "string"
                    },
                    "issue_title": {
                        "title": "Issue Title",
                        "type": "string"
                    },
                    "issue_org_name": {
                        "title": "Issue Org Name",
                        "type": "string"
                    },
                    "issue_repo_name": {
                        "title": "Issue Repo Name",
                        "type": "string"
                    },
                    "issue_number": {
                        "title": "Issue Number",
                        "type": "integer"
                    },
                    "maintainer_has_account": {
                        "title": "Maintainer Has Account",
                        "type": "boolean"
                    }
                }
            },
            "MaintainerPledgedIssuePendingNotification": {
                "title": "MaintainerPledgedIssuePendingNotification",
                "required": [
                    "pledge_amount_sum",
                    "issue_id",
                    "issue_url",
                    "issue_title",
                    "issue_org_name",
                    "issue_repo_name",
                    "issue_number",
                    "maintainer_has_account"
                ],
                "type": "object",
                "properties": {
                    "pledge_amount_sum": {
                        "title": "Pledge Amount Sum",
                        "type": "string"
                    },
                    "issue_id": {
                        "title": "Issue Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "issue_url": {
                        "title": "Issue Url",
                        "type": "string"
                    },
                    "issue_title": {
                        "title": "Issue Title",
                        "type": "string"
                    },
                    "issue_org_name": {
                        "title": "Issue Org Name",
                        "type": "string"
                    },
                    "issue_repo_name": {
                        "title": "Issue Repo Name",
                        "type": "string"
                    },
                    "issue_number": {
                        "title": "Issue Number",
                        "type": "integer"
                    },
                    "maintainer_has_account": {
                        "title": "Maintainer Has Account",
                        "type": "boolean"
                    }
                }
            },
            "NotificationRead": {
                "title": "NotificationRead",
                "required": [
                    "id",
                    "type",
                    "created_at",
                    "payload"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "type": {
                        "$ref": "#/components/schemas/NotificationType"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "payload": {
                        "title": "Payload",
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MaintainerPledgePaidNotification"
                            },
                            {
                                "$ref": "#/components/schemas/MaintainerPledgeConfirmationPendingNotification"
                            },
                            {
                                "$ref": "#/components/schemas/MaintainerPledgePendingNotification"
                            },
                            {
                                "$ref": "#/components/schemas/MaintainerPledgeCreatedNotification"
                            },
                            {
                                "$ref": "#/components/schemas/PledgerPledgePendingNotification"
                            },
                            {
                                "$ref": "#/components/schemas/RewardPaidNotification"
                            },
                            {
                                "$ref": "#/components/schemas/MaintainerPledgedIssueConfirmationPendingNotification"
                            },
                            {
                                "$ref": "#/components/schemas/MaintainerPledgedIssuePendingNotification"
                            }
                        ]
                    }
                }
            },
            "NotificationType": {
                "title": "NotificationType",
                "enum": [
                    "MaintainerPledgePaidNotification",
                    "MaintainerPledgeConfirmationPendingNotification",
                    "MaintainerPledgePendingNotification",
                    "MaintainerPledgeCreatedNotification",
                    "PledgerPledgePendingNotification",
                    "RewardPaidNotification",
                    "MaintainerPledgedIssueConfirmationPendingNotification",
                    "MaintainerPledgedIssuePendingNotification"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "NotificationsList": {
                "title": "NotificationsList",
                "required": [
                    "notifications"
                ],
                "type": "object",
                "properties": {
                    "notifications": {
                        "title": "Notifications",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NotificationRead"
                        }
                    },
                    "last_read_notification_id": {
                        "title": "Last Read Notification Id",
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "NotificationsMarkRead": {
                "title": "NotificationsMarkRead",
                "required": [
                    "notification_id"
                ],
                "type": "object",
                "properties": {
                    "notification_id": {
                        "title": "Notification Id",
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "OAuthAccountRead": {
                "title": "OAuthAccountRead",
                "required": [
                    "created_at",
                    "platform",
                    "account_id",
                    "account_email"
                ],
                "type": "object",
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "platform": {
                        "$ref": "#/components/schemas/Platforms"
                    },
                    "account_id": {
                        "title": "Account Id",
                        "type": "string"
                    },
                    "account_email": {
                        "title": "Account Email",
                        "type": "string"
                    }
                }
            },
            "Organization": {
                "title": "Organization",
                "required": [
                    "id",
                    "platform",
                    "name",
                    "avatar_url",
                    "pledge_minimum_amount",
                    "pledge_badge_show_amount"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "platform": {
                        "$ref": "#/components/schemas/Platforms"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "avatar_url": {
                        "title": "Avatar Url",
                        "type": "string"
                    },
                    "bio": {
                        "title": "Bio",
                        "type": "string"
                    },
                    "pretty_name": {
                        "title": "Pretty Name",
                        "type": "string"
                    },
                    "company": {
                        "title": "Company",
                        "type": "string"
                    },
                    "blog": {
                        "title": "Blog",
                        "type": "string"
                    },
                    "location": {
                        "title": "Location",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string"
                    },
                    "twitter_username": {
                        "title": "Twitter Username",
                        "type": "string"
                    },
                    "pledge_minimum_amount": {
                        "title": "Pledge Minimum Amount",
                        "type": "integer"
                    },
                    "pledge_badge_show_amount": {
                        "title": "Pledge Badge Show Amount",
                        "type": "boolean"
                    }
                }
            },
            "OrganizationBadgeSettingsRead": {
                "title": "OrganizationBadgeSettingsRead",
                "required": [
                    "show_amount",
                    "minimum_amount",
                    "repositories"
                ],
                "type": "object",
                "properties": {
                    "show_amount": {
                        "title": "Show Amount",
                        "type": "boolean"
                    },
                    "minimum_amount": {
                        "title": "Minimum Amount",
                        "type": "integer"
                    },
                    "message": {
                        "title": "Message",
                        "type": "string"
                    },
                    "repositories": {
                        "title": "Repositories",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RepositoryBadgeSettingsRead"
                        }
                    }
                }
            },
            "OrganizationBadgeSettingsUpdate": {
                "title": "OrganizationBadgeSettingsUpdate",
                "required": [
                    "show_amount",
                    "minimum_amount",
                    "message",
                    "repositories"
                ],
                "type": "object",
                "properties": {
                    "show_amount": {
                        "title": "Show Amount",
                        "type": "boolean"
                    },
                    "minimum_amount": {
                        "title": "Minimum Amount",
                        "type": "integer"
                    },
                    "message": {
                        "title": "Message",
                        "type": "string"
                    },
                    "repositories": {
                        "title": "Repositories",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RepositoryBadgeSettingsUpdate"
                        }
                    }
                }
            },
            "OrganizationPrivateRead": {
                "title": "OrganizationPrivateRead",
                "required": [
                    "platform",
                    "name",
                    "avatar_url",
                    "external_id",
                    "is_personal",
                    "pledge_minimum_amount",
                    "id",
                    "created_at"
                ],
                "type": "object",
                "properties": {
                    "pledge_badge_show_amount": {
                        "title": "Pledge Badge Show Amount",
                        "type": "boolean",
                        "default": true
                    },
                    "billing_email": {
                        "title": "Billing Email",
                        "type": "string"
                    },
                    "platform": {
                        "$ref": "#/components/schemas/Platforms"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "avatar_url": {
                        "title": "Avatar Url",
                        "type": "string"
                    },
                    "external_id": {
                        "title": "External Id",
                        "type": "integer"
                    },
                    "is_personal": {
                        "title": "Is Personal",
                        "type": "boolean"
                    },
                    "installation_id": {
                        "title": "Installation Id",
                        "type": "integer"
                    },
                    "installation_created_at": {
                        "title": "Installation Created At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "installation_updated_at": {
                        "title": "Installation Updated At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "installation_suspended_at": {
                        "title": "Installation Suspended At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "onboarded_at": {
                        "title": "Onboarded At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "pledge_minimum_amount": {
                        "title": "Pledge Minimum Amount",
                        "type": "integer"
                    },
                    "default_badge_custom_content": {
                        "title": "Default Badge Custom Content",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "repositories": {
                        "title": "Repositories",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RepositoryLegacyRead"
                        }
                    }
                }
            },
            "Pagination": {
                "title": "Pagination",
                "required": [
                    "total_count"
                ],
                "type": "object",
                "properties": {
                    "total_count": {
                        "title": "Total Count",
                        "type": "integer"
                    }
                }
            },
            "PaginationResponse": {
                "title": "PaginationResponse",
                "required": [
                    "total_count",
                    "page"
                ],
                "type": "object",
                "properties": {
                    "total_count": {
                        "title": "Total Count",
                        "type": "integer"
                    },
                    "page": {
                        "title": "Page",
                        "type": "integer"
                    },
                    "next_page": {
                        "title": "Next Page",
                        "type": "integer"
                    }
                }
            },
            "PaymentMethod": {
                "title": "PaymentMethod",
                "required": [
                    "stripe_payment_method_id",
                    "type",
                    "last4",
                    "exp_month",
                    "exp_year"
                ],
                "type": "object",
                "properties": {
                    "stripe_payment_method_id": {
                        "title": "Stripe Payment Method Id",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "enum": [
                            "card"
                        ],
                        "type": "string"
                    },
                    "brand": {
                        "title": "Brand",
                        "type": "string"
                    },
                    "last4": {
                        "title": "Last4",
                        "type": "string"
                    },
                    "exp_month": {
                        "title": "Exp Month",
                        "type": "integer"
                    },
                    "exp_year": {
                        "title": "Exp Year",
                        "type": "integer"
                    }
                }
            },
            "PersonalAccessToken": {
                "title": "PersonalAccessToken",
                "required": [
                    "id",
                    "created_at",
                    "expires_at",
                    "comment"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_used_at": {
                        "title": "Last Used At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "expires_at": {
                        "title": "Expires At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "comment": {
                        "title": "Comment",
                        "type": "string"
                    }
                }
            },
            "Platforms": {
                "title": "Platforms",
                "enum": [
                    "github"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "Pledge": {
                "title": "Pledge",
                "required": [
                    "id",
                    "created_at",
                    "amount",
                    "state",
                    "type",
                    "issue"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "description": "Pledge ID",
                        "format": "uuid"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "string",
                        "description": "When the pledge was created",
                        "format": "date-time"
                    },
                    "amount": {
                        "title": "Amount",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyAmount"
                            }
                        ],
                        "description": "Amount pledged towards the issue"
                    },
                    "state": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PledgeState"
                            }
                        ],
                        "description": "Current state of the pledge"
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PledgeType"
                            }
                        ],
                        "description": "Type of pledge"
                    },
                    "refunded_at": {
                        "title": "Refunded At",
                        "type": "string",
                        "description": "If and when the pledge was refunded to the pledger",
                        "format": "date-time"
                    },
                    "scheduled_payout_at": {
                        "title": "Scheduled Payout At",
                        "type": "string",
                        "description": "When the payout is scheduled to be made to the maintainers behind the issue. Disputes must be made before this date.",
                        "format": "date-time"
                    },
                    "issue": {
                        "title": "Issue",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Issue"
                            }
                        ],
                        "description": "The issue that the pledge was made towards"
                    },
                    "pledger": {
                        "title": "Pledger",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Pledger"
                            }
                        ],
                        "description": "The user or organization that made this pledge"
                    },
                    "hosted_invoice_url": {
                        "title": "Hosted Invoice Url",
                        "type": "string",
                        "description": "URL of invoice for this pledge"
                    }
                }
            },
            "PledgePledgesSummary": {
                "title": "PledgePledgesSummary",
                "required": [
                    "funding",
                    "pledges"
                ],
                "type": "object",
                "properties": {
                    "funding": {
                        "$ref": "#/components/schemas/Funding"
                    },
                    "pledges": {
                        "title": "Pledges",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SummaryPledge"
                        }
                    }
                }
            },
            "PledgeRead": {
                "title": "PledgeRead",
                "required": [
                    "id",
                    "created_at",
                    "issue_id",
                    "amount",
                    "repository_id",
                    "organization_id",
                    "state",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "issue_id": {
                        "title": "Issue Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "amount": {
                        "title": "Amount",
                        "type": "integer"
                    },
                    "repository_id": {
                        "title": "Repository Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "organization_id": {
                        "title": "Organization Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "pledger_user_id": {
                        "title": "Pledger User Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "state": {
                        "$ref": "#/components/schemas/PledgeState"
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PledgeType"
                            }
                        ],
                        "description": "Type of pledge"
                    },
                    "pledger_name": {
                        "title": "Pledger Name",
                        "type": "string"
                    },
                    "pledger_avatar": {
                        "title": "Pledger Avatar",
                        "type": "string"
                    },
                    "authed_user_can_admin": {
                        "title": "Authed User Can Admin",
                        "type": "boolean",
                        "default": false
                    },
                    "scheduled_payout_at": {
                        "title": "Scheduled Payout At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "paid_at": {
                        "title": "Paid At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "refunded_at": {
                        "title": "Refunded At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "authed_user_can_admin_sender": {
                        "title": "Authed User Can Admin Sender",
                        "type": "boolean",
                        "default": false
                    },
                    "authed_user_can_admin_received": {
                        "title": "Authed User Can Admin Received",
                        "type": "boolean",
                        "default": false
                    }
                }
            },
            "PledgeRewardTransfer": {
                "title": "PledgeRewardTransfer",
                "required": [
                    "pledge_id",
                    "issue_reward_id"
                ],
                "type": "object",
                "properties": {
                    "pledge_id": {
                        "title": "Pledge Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "issue_reward_id": {
                        "title": "Issue Reward Id",
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "PledgeState": {
                "title": "PledgeState",
                "enum": [
                    "initiated",
                    "created",
                    "pending",
                    "refunded",
                    "disputed",
                    "charge_disputed"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "PledgeStripePaymentIntentCreate": {
                "title": "PledgeStripePaymentIntentCreate",
                "required": [
                    "issue_id",
                    "email",
                    "amount"
                ],
                "type": "object",
                "properties": {
                    "issue_id": {
                        "title": "Issue Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string"
                    },
                    "amount": {
                        "title": "Amount",
                        "type": "integer"
                    },
                    "setup_future_usage": {
                        "title": "Setup Future Usage",
                        "enum": [
                            "on_session"
                        ],
                        "type": "string"
                    }
                }
            },
            "PledgeStripePaymentIntentMutationResponse": {
                "title": "PledgeStripePaymentIntentMutationResponse",
                "required": [
                    "payment_intent_id",
                    "amount",
                    "fee",
                    "amount_including_fee"
                ],
                "type": "object",
                "properties": {
                    "payment_intent_id": {
                        "title": "Payment Intent Id",
                        "type": "string"
                    },
                    "amount": {
                        "title": "Amount",
                        "type": "integer"
                    },
                    "fee": {
                        "title": "Fee",
                        "type": "integer"
                    },
                    "amount_including_fee": {
                        "title": "Amount Including Fee",
                        "type": "integer"
                    },
                    "client_secret": {
                        "title": "Client Secret",
                        "type": "string"
                    }
                }
            },
            "PledgeStripePaymentIntentUpdate": {
                "title": "PledgeStripePaymentIntentUpdate",
                "required": [
                    "email",
                    "amount"
                ],
                "type": "object",
                "properties": {
                    "email": {
                        "title": "Email",
                        "type": "string"
                    },
                    "amount": {
                        "title": "Amount",
                        "type": "integer"
                    },
                    "setup_future_usage": {
                        "title": "Setup Future Usage",
                        "enum": [
                            "on_session"
                        ],
                        "type": "string"
                    }
                }
            },
            "PledgeType": {
                "title": "PledgeType",
                "enum": [
                    "pay_upfront",
                    "pay_on_completion",
                    "pay_directly"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "Pledger": {
                "title": "Pledger",
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "github_username": {
                        "title": "Github Username",
                        "type": "string"
                    },
                    "avatar_url": {
                        "title": "Avatar Url",
                        "type": "string"
                    }
                }
            },
            "PledgerPledgePendingNotification": {
                "title": "PledgerPledgePendingNotification",
                "required": [
                    "pledge_amount",
                    "issue_url",
                    "issue_title",
                    "issue_number",
                    "issue_org_name",
                    "issue_repo_name",
                    "pledge_date"
                ],
                "type": "object",
                "properties": {
                    "pledge_amount": {
                        "title": "Pledge Amount",
                        "type": "string"
                    },
                    "issue_url": {
                        "title": "Issue Url",
                        "type": "string"
                    },
                    "issue_title": {
                        "title": "Issue Title",
                        "type": "string"
                    },
                    "issue_number": {
                        "title": "Issue Number",
                        "type": "integer"
                    },
                    "issue_org_name": {
                        "title": "Issue Org Name",
                        "type": "string"
                    },
                    "issue_repo_name": {
                        "title": "Issue Repo Name",
                        "type": "string"
                    },
                    "pledge_date": {
                        "title": "Pledge Date",
                        "type": "string"
                    },
                    "pledge_id": {
                        "title": "Pledge Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "pledge_type": {
                        "$ref": "#/components/schemas/PledgeType"
                    }
                }
            },
            "PledgesSummary": {
                "title": "PledgesSummary",
                "required": [
                    "total",
                    "pledgers"
                ],
                "type": "object",
                "properties": {
                    "total": {
                        "$ref": "#/components/schemas/CurrencyAmount"
                    },
                    "pledgers": {
                        "title": "Pledgers",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Pledger"
                        }
                    }
                }
            },
            "PledgesTypeSummaries": {
                "title": "PledgesTypeSummaries",
                "required": [
                    "pay_upfront",
                    "pay_on_completion",
                    "pay_directly"
                ],
                "type": "object",
                "properties": {
                    "pay_upfront": {
                        "$ref": "#/components/schemas/PledgesSummary"
                    },
                    "pay_on_completion": {
                        "$ref": "#/components/schemas/PledgesSummary"
                    },
                    "pay_directly": {
                        "$ref": "#/components/schemas/PledgesSummary"
                    }
                }
            },
            "PostIssueComment": {
                "title": "PostIssueComment",
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "title": "Message",
                        "type": "string"
                    },
                    "append_badge": {
                        "title": "Append Badge",
                        "type": "boolean",
                        "default": false
                    }
                }
            },
            "PullRequestReference": {
                "title": "PullRequestReference",
                "required": [
                    "id",
                    "title",
                    "author_login",
                    "author_avatar",
                    "number",
                    "additions",
                    "deletions",
                    "state",
                    "created_at",
                    "is_draft"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "title": {
                        "title": "Title",
                        "type": "string"
                    },
                    "author_login": {
                        "title": "Author Login",
                        "type": "string"
                    },
                    "author_avatar": {
                        "title": "Author Avatar",
                        "type": "string"
                    },
                    "number": {
                        "title": "Number",
                        "type": "integer"
                    },
                    "additions": {
                        "title": "Additions",
                        "type": "integer"
                    },
                    "deletions": {
                        "title": "Deletions",
                        "type": "integer"
                    },
                    "state": {
                        "title": "State",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "merged_at": {
                        "title": "Merged At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "closed_at": {
                        "title": "Closed At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "is_draft": {
                        "title": "Is Draft",
                        "type": "boolean"
                    }
                }
            },
            "Reactions": {
                "title": "Reactions",
                "required": [
                    "total_count",
                    "plus_one",
                    "minus_one",
                    "laugh",
                    "hooray",
                    "confused",
                    "heart",
                    "rocket",
                    "eyes"
                ],
                "type": "object",
                "properties": {
                    "total_count": {
                        "title": "Total Count",
                        "type": "integer"
                    },
                    "plus_one": {
                        "title": "Plus One",
                        "type": "integer"
                    },
                    "minus_one": {
                        "title": "Minus One",
                        "type": "integer"
                    },
                    "laugh": {
                        "title": "Laugh",
                        "type": "integer"
                    },
                    "hooray": {
                        "title": "Hooray",
                        "type": "integer"
                    },
                    "confused": {
                        "title": "Confused",
                        "type": "integer"
                    },
                    "heart": {
                        "title": "Heart",
                        "type": "integer"
                    },
                    "rocket": {
                        "title": "Rocket",
                        "type": "integer"
                    },
                    "eyes": {
                        "title": "Eyes",
                        "type": "integer"
                    }
                }
            },
            "Relationship": {
                "title": "Relationship",
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "title": "Data",
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/RelationshipData"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RelationshipData"
                                }
                            }
                        ]
                    }
                }
            },
            "RelationshipData": {
                "title": "RelationshipData",
                "required": [
                    "type",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "string",
                                "format": "uuid"
                            }
                        ]
                    }
                }
            },
            "Repository": {
                "title": "Repository",
                "required": [
                    "id",
                    "platform",
                    "visibility",
                    "name",
                    "organization"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "platform": {
                        "$ref": "#/components/schemas/Platforms"
                    },
                    "visibility": {
                        "$ref": "#/components/schemas/Visibility"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "examples": [
                            "MyOrg"
                        ]
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "stars": {
                        "title": "Stars",
                        "type": "integer",
                        "examples": [
                            1337
                        ]
                    },
                    "license": {
                        "title": "License",
                        "type": "string"
                    },
                    "homepage": {
                        "title": "Homepage",
                        "type": "string"
                    },
                    "organization": {
                        "$ref": "#/components/schemas/Organization"
                    }
                }
            },
            "RepositoryBadgeSettingsRead": {
                "title": "RepositoryBadgeSettingsRead",
                "required": [
                    "id",
                    "name",
                    "synced_issues",
                    "open_issues",
                    "auto_embedded_issues",
                    "label_embedded_issues",
                    "pull_requests",
                    "badge_auto_embed",
                    "badge_label",
                    "is_private",
                    "is_sync_completed"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "avatar_url": {
                        "title": "Avatar Url",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "synced_issues": {
                        "title": "Synced Issues",
                        "type": "integer"
                    },
                    "open_issues": {
                        "title": "Open Issues",
                        "type": "integer"
                    },
                    "auto_embedded_issues": {
                        "title": "Auto Embedded Issues",
                        "type": "integer"
                    },
                    "label_embedded_issues": {
                        "title": "Label Embedded Issues",
                        "type": "integer"
                    },
                    "pull_requests": {
                        "title": "Pull Requests",
                        "type": "integer"
                    },
                    "badge_auto_embed": {
                        "title": "Badge Auto Embed",
                        "type": "boolean"
                    },
                    "badge_label": {
                        "title": "Badge Label",
                        "type": "string"
                    },
                    "is_private": {
                        "title": "Is Private",
                        "type": "boolean"
                    },
                    "is_sync_completed": {
                        "title": "Is Sync Completed",
                        "type": "boolean"
                    }
                }
            },
            "RepositoryBadgeSettingsUpdate": {
                "title": "RepositoryBadgeSettingsUpdate",
                "required": [
                    "id",
                    "badge_auto_embed",
                    "retroactive"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "badge_auto_embed": {
                        "title": "Badge Auto Embed",
                        "type": "boolean"
                    },
                    "retroactive": {
                        "title": "Retroactive",
                        "type": "boolean"
                    }
                }
            },
            "RepositoryLegacyRead": {
                "title": "RepositoryLegacyRead",
                "required": [
                    "id",
                    "platform",
                    "visibility",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "platform": {
                        "$ref": "#/components/schemas/Platforms"
                    },
                    "visibility": {
                        "$ref": "#/components/schemas/Visibility"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "stars": {
                        "title": "Stars",
                        "type": "integer"
                    },
                    "license": {
                        "title": "License",
                        "type": "string"
                    },
                    "homepage": {
                        "title": "Homepage",
                        "type": "string"
                    }
                }
            },
            "Reward": {
                "title": "Reward",
                "required": [
                    "pledge",
                    "amount",
                    "state"
                ],
                "type": "object",
                "properties": {
                    "pledge": {
                        "title": "Pledge",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Pledge"
                            }
                        ],
                        "description": "The pledge that the reward was split from"
                    },
                    "user": {
                        "title": "User",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/User"
                            }
                        ],
                        "description": "The user that received the reward (if any)"
                    },
                    "organization": {
                        "title": "Organization",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Organization"
                            }
                        ],
                        "description": "The organization that received the reward (if any)"
                    },
                    "amount": {
                        "$ref": "#/components/schemas/CurrencyAmount"
                    },
                    "state": {
                        "$ref": "#/components/schemas/RewardState"
                    },
                    "paid_at": {
                        "title": "Paid At",
                        "type": "string",
                        "description": "If and when the reward was paid out.",
                        "format": "date-time"
                    }
                }
            },
            "RewardPaidNotification": {
                "title": "RewardPaidNotification",
                "required": [
                    "paid_out_amount",
                    "issue_url",
                    "issue_title",
                    "issue_org_name",
                    "issue_repo_name",
                    "issue_number",
                    "issue_id",
                    "pledge_id"
                ],
                "type": "object",
                "properties": {
                    "paid_out_amount": {
                        "title": "Paid Out Amount",
                        "type": "string"
                    },
                    "issue_url": {
                        "title": "Issue Url",
                        "type": "string"
                    },
                    "issue_title": {
                        "title": "Issue Title",
                        "type": "string"
                    },
                    "issue_org_name": {
                        "title": "Issue Org Name",
                        "type": "string"
                    },
                    "issue_repo_name": {
                        "title": "Issue Repo Name",
                        "type": "string"
                    },
                    "issue_number": {
                        "title": "Issue Number",
                        "type": "integer"
                    },
                    "issue_id": {
                        "title": "Issue Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "pledge_id": {
                        "title": "Pledge Id",
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "RewardState": {
                "title": "RewardState",
                "enum": [
                    "pending",
                    "paid"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "SummaryPledge": {
                "title": "SummaryPledge",
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PledgeType"
                            }
                        ],
                        "description": "Type of pledge"
                    },
                    "pledger": {
                        "$ref": "#/components/schemas/Pledger"
                    }
                }
            },
            "UpdateIssue": {
                "title": "UpdateIssue",
                "type": "object",
                "properties": {
                    "funding_goal": {
                        "$ref": "#/components/schemas/CurrencyAmount"
                    },
                    "upfront_split_to_contributors": {
                        "title": "Upfront Split To Contributors",
                        "maximum": 100,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "unset_upfront_split_to_contributors": {
                        "title": "Unset Upfront Split To Contributors",
                        "type": "boolean"
                    }
                }
            },
            "User": {
                "title": "User",
                "required": [
                    "username",
                    "avatar_url"
                ],
                "type": "object",
                "properties": {
                    "username": {
                        "title": "Username",
                        "type": "string"
                    },
                    "avatar_url": {
                        "title": "Avatar Url",
                        "type": "string"
                    }
                }
            },
            "UserRead": {
                "title": "UserRead",
                "required": [
                    "created_at",
                    "username",
                    "email",
                    "profile",
                    "id",
                    "accepted_terms_of_service",
                    "email_newsletters_and_changelogs",
                    "email_promotions_and_events",
                    "oauth_accounts"
                ],
                "type": "object",
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "username": {
                        "title": "Username",
                        "maxLength": 50,
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "avatar_url": {
                        "title": "Avatar Url",
                        "type": "string"
                    },
                    "profile": {
                        "title": "Profile",
                        "type": "object"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "accepted_terms_of_service": {
                        "title": "Accepted Terms Of Service",
                        "type": "boolean"
                    },
                    "email_newsletters_and_changelogs": {
                        "title": "Email Newsletters And Changelogs",
                        "type": "boolean"
                    },
                    "email_promotions_and_events": {
                        "title": "Email Promotions And Events",
                        "type": "boolean"
                    },
                    "oauth_accounts": {
                        "title": "Oauth Accounts",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OAuthAccountRead"
                        }
                    }
                }
            },
            "UserStripePortalSession": {
                "title": "UserStripePortalSession",
                "required": [
                    "url"
                ],
                "type": "object",
                "properties": {
                    "url": {
                        "title": "Url",
                        "type": "string"
                    }
                }
            },
            "UserUpdateSettings": {
                "title": "UserUpdateSettings",
                "type": "object",
                "properties": {
                    "email_newsletters_and_changelogs": {
                        "title": "Email Newsletters And Changelogs",
                        "type": "boolean"
                    },
                    "email_promotions_and_events": {
                        "title": "Email Promotions And Events",
                        "type": "boolean"
                    }
                }
            },
            "ValidationError": {
                "title": "ValidationError",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "loc": {
                        "title": "Location",
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    "msg": {
                        "title": "Message",
                        "type": "string"
                    },
                    "type": {
                        "title": "Error Type",
                        "type": "string"
                    }
                }
            },
            "Visibility": {
                "title": "Visibility",
                "enum": [
                    "public",
                    "private"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "polar__integrations__github__endpoints__WebhookResponse": {
                "title": "WebhookResponse",
                "required": [
                    "success"
                ],
                "type": "object",
                "properties": {
                    "success": {
                        "title": "Success",
                        "type": "boolean"
                    },
                    "message": {
                        "title": "Message",
                        "type": "string"
                    },
                    "job_id": {
                        "title": "Job Id",
                        "type": "string"
                    }
                }
            },
            "polar__integrations__stripe__endpoints__WebhookResponse": {
                "title": "WebhookResponse",
                "required": [
                    "success"
                ],
                "type": "object",
                "properties": {
                    "success": {
                        "title": "Success",
                        "type": "boolean"
                    },
                    "message": {
                        "title": "Message",
                        "type": "string"
                    },
                    "job_id": {
                        "title": "Job Id",
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "HTTPBearer": {
                "type": "http",
                "description": "You can generate a **Personal Access Token** from your [settings](https://polar.sh/settings/tokens).",
                "scheme": "bearer"
            }
        }
    }
}