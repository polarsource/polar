{
    "openapi": "3.0.3",
    "info": {
        "title": "Polar API",
        "summary": "Polar HTTP and Webhooks API",
        "description": "Read the docs at https://docs.polar.sh/api",
        "version": "0.1.0"
    },
    "servers": [
        {
            "url": "https://api.polar.sh",
            "description": "Production environment",
            "x-speakeasy-server-id": "production"
        },
        {
            "url": "https://sandbox-api.polar.sh",
            "description": "Sandbox environment",
            "x-speakeasy-server-id": "sandbox"
        }
    ],
    "paths": {
        "/v1/users/me": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get Authenticated",
                "operationId": "get_authenticated",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRead"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-name-override": "get_authenticated",
                "x-speakeasy-ignore": true,
                "x-speakeasy-group": "users"
            }
        },
        "/v1/users/me/scopes": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Scopes",
                "operationId": "scopes",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserScopes"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-name-override": "scopes",
                "x-speakeasy-ignore": true,
                "x-speakeasy-group": "users"
            }
        },
        "/v1/users/me/account": {
            "patch": {
                "tags": [
                    "users"
                ],
                "summary": "Set Account",
                "operationId": "set_account",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSetAccount"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRead"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-name-override": "set_account",
                "x-speakeasy-ignore": true,
                "x-speakeasy-group": "users"
            }
        },
        "/v1/users/me/stripe_customer_portal": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Create Stripe Customer Portal",
                "operationId": "create_stripe_customer_portal",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserStripePortalSession"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-name-override": "create_stripe_customer_portal",
                "x-speakeasy-ignore": true,
                "x-speakeasy-group": "users"
            }
        },
        "/v1/integrations/github/authorize": {
            "get": {
                "tags": [
                    "integrations_github"
                ],
                "summary": "Integrations.Github.Authorize",
                "operationId": "integrations.github.authorize",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "payment_intent_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Payment Intent Id"
                        }
                    },
                    {
                        "name": "return_to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Return To"
                        }
                    },
                    {
                        "name": "attribution",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Attribution"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "User"
                ],
                "x-speakeasy-group": "integrations_github",
                "x-speakeasy-name-override": "github_authorize",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/integrations/github/callback": {
            "get": {
                "tags": [
                    "integrations_github"
                ],
                "summary": "Integrations.Github.Callback",
                "operationId": "integrations.github.callback",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Code"
                        }
                    },
                    {
                        "name": "code_verifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Code Verifier"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "State"
                        }
                    },
                    {
                        "name": "error",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Error"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "User"
                ],
                "x-speakeasy-group": "integrations_github",
                "x-speakeasy-name-override": "github_callback",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/integrations/github/lookup_user": {
            "post": {
                "tags": [
                    "integrations_github"
                ],
                "summary": "Lookup User",
                "operationId": "lookup_user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LookupUserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GithubUser"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "integrations_github",
                "x-speakeasy-name-override": "lookup_user",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/integrations/github/organizations/{id}/installation": {
            "get": {
                "tags": [
                    "integrations_github"
                ],
                "summary": "Redirect To Organization Installation",
                "operationId": "redirect_to_organization_installation",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The external organization ID.",
                            "x-polar-selector-widget": {
                                "resourceRoot": "/v1/external-organizations",
                                "resourceName": "External Organization",
                                "displayProperty": "name"
                            },
                            "title": "Id"
                        }
                    },
                    {
                        "name": "return_to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Return To"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "integrations_github",
                "x-speakeasy-name-override": "redirect_to_organization_installation",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/integrations/github/organizations/{id}/check_permissions": {
            "post": {
                "tags": [
                    "integrations_github"
                ],
                "summary": "Check Organization Permissions",
                "operationId": "check_organization_permissions",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The external organization ID.",
                            "x-polar-selector-widget": {
                                "resourceRoot": "/v1/external-organizations",
                                "resourceName": "External Organization",
                                "displayProperty": "name"
                            },
                            "title": "Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationCheckPermissionsInput"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "integrations_github",
                "x-speakeasy-name-override": "check_organization_permissions",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/integrations/github/organizations/{id}/billing": {
            "get": {
                "tags": [
                    "integrations_github"
                ],
                "summary": "Get Organization Billing Plan",
                "operationId": "get_organization_billing_plan",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The external organization ID.",
                            "x-polar-selector-widget": {
                                "resourceRoot": "/v1/external-organizations",
                                "resourceName": "External Organization",
                                "displayProperty": "name"
                            },
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationBillingPlan"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "integrations_github",
                "x-speakeasy-name-override": "get_organization_billing_plan",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/integrations/github/installations": {
            "post": {
                "tags": [
                    "integrations_github"
                ],
                "summary": "Install",
                "operationId": "install",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstallationCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalOrganization"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "integrations_github",
                "x-speakeasy-name-override": "install",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/integrations/github/webhook": {
            "post": {
                "tags": [
                    "integrations_github"
                ],
                "summary": "Webhook",
                "operationId": "webhook",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebhookResponse"
                                }
                            }
                        }
                    }
                },
                "x-speakeasy-group": "integrations_github",
                "x-speakeasy-name-override": "webhook",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/integrations/github_repository_benefit/user/authorize": {
            "get": {
                "tags": [
                    "integrations_github_repository_benefit"
                ],
                "summary": "Integrations.Github Repository Benefit.User Authorize",
                "operationId": "integrations.github_repository_benefit.user_authorize",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "return_to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Return To"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "integrations_github_repository_benefit",
                "x-speakeasy-name-override": "user_authorize",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/integrations/github_repository_benefit/user/callback": {
            "get": {
                "tags": [
                    "integrations_github_repository_benefit"
                ],
                "summary": "Integrations.Github Repository Benefit.User Callback",
                "operationId": "integrations.github_repository_benefit.user_callback",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Code"
                        }
                    },
                    {
                        "name": "code_verifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Code Verifier"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "State"
                        }
                    },
                    {
                        "name": "error",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Error"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "integrations_github_repository_benefit",
                "x-speakeasy-name-override": "user_callback",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/integrations/github_repository_benefit/user/repositories": {
            "get": {
                "tags": [
                    "integrations_github_repository_benefit"
                ],
                "summary": "Integrations.Github Repository Benefit.User Repositories",
                "description": "Lists available repositories for this user",
                "operationId": "integrations.github_repository_benefit.user_repositories",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GitHubInvitesBenefitRepositories"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "integrations_github_repository_benefit",
                "x-speakeasy-name-override": "user_repositories",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/integrations/github_repository_benefit/installation/install": {
            "get": {
                "tags": [
                    "integrations_github_repository_benefit"
                ],
                "summary": "Integrations.Github Repository Benefit.Installation Install",
                "operationId": "integrations.github_repository_benefit.installation_install",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "integrations_github_repository_benefit",
                "x-speakeasy-name-override": "installation_install",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/integrations/github_repository_benefit/installation/callback": {
            "get": {
                "tags": [
                    "integrations_github_repository_benefit"
                ],
                "summary": "Integrations.Github Repository Benefit.Installation Callback",
                "operationId": "integrations.github_repository_benefit.installation_callback",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "integrations_github_repository_benefit",
                "x-speakeasy-name-override": "installation_callback",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/integrations/discord/bot/authorize": {
            "get": {
                "tags": [
                    "integrations_discord"
                ],
                "summary": "Integrations.Discord.Bot Authorize",
                "operationId": "integrations.discord.bot_authorize",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "return_to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Return To"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "integrations_discord",
                "x-speakeasy-name-override": "discord_bot_authorize",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/integrations/discord/bot/callback": {
            "get": {
                "tags": [
                    "integrations_discord"
                ],
                "summary": "Integrations.Discord.Bot Callback",
                "operationId": "integrations.discord.bot_callback",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "state",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "State"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Code"
                        }
                    },
                    {
                        "name": "code_verifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Code Verifier"
                        }
                    },
                    {
                        "name": "error",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Error"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "integrations_discord",
                "x-speakeasy-name-override": "discord_bot_callback",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/integrations/discord/guild/lookup": {
            "get": {
                "tags": [
                    "integrations_discord"
                ],
                "summary": "Discord Guild Lookup",
                "operationId": "discord_guild_lookup",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "guild_token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Guild Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordGuild"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "integrations_discord",
                "x-speakeasy-name-override": "discord_guild_lookup",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/backoffice/pledges": {
            "get": {
                "tags": [
                    "backoffice"
                ],
                "summary": "Pledges",
                "operationId": "pledges",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/BackofficePledge"
                                    },
                                    "type": "array",
                                    "title": "Response Backoffice:Pledges"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "backoffice",
                "x-speakeasy-name-override": "pledges",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/backoffice/rewards/by_issue": {
            "get": {
                "tags": [
                    "backoffice"
                ],
                "summary": "Rewards",
                "operationId": "rewards",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "issue_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Issue Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_BackofficeReward_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "backoffice",
                "x-speakeasy-name-override": "rewards",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/backoffice/rewards/pending": {
            "get": {
                "tags": [
                    "backoffice"
                ],
                "summary": "Rewards Pending",
                "operationId": "rewards_pending",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_BackofficeReward_"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "backoffice",
                "x-speakeasy-name-override": "rewards_pending",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/backoffice/issue/{id}": {
            "get": {
                "tags": [
                    "backoffice"
                ],
                "summary": "Issue",
                "operationId": "issue",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Issue"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "backoffice",
                "x-speakeasy-name-override": "issue",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/backoffice/pledges/approve": {
            "post": {
                "tags": [
                    "backoffice"
                ],
                "summary": "Pledge Reward Transfer",
                "operationId": "pledge_reward_transfer",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PledgeRewardTransfer"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackofficeReward"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "backoffice",
                "x-speakeasy-name-override": "pledge_reward_transfer",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/backoffice/pledges/create_invoice/{pledge_id}": {
            "post": {
                "tags": [
                    "backoffice"
                ],
                "summary": "Pledge Create Invoice",
                "operationId": "pledge_create_invoice",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "pledge_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Pledge Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackofficePledge"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "backoffice",
                "x-speakeasy-name-override": "pledge_create_invoice",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/backoffice/pledges/mark_disputed/{pledge_id}": {
            "post": {
                "tags": [
                    "backoffice"
                ],
                "summary": "Pledge Mark Disputed",
                "operationId": "pledge_mark_disputed",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "pledge_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Pledge Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackofficePledge"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "backoffice",
                "x-speakeasy-name-override": "pledge_mark_disputed",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/backoffice/badge": {
            "post": {
                "tags": [
                    "backoffice"
                ],
                "summary": "Manage Badge",
                "operationId": "manage_badge",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BackofficeBadge"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackofficeBadgeResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "backoffice",
                "x-speakeasy-name-override": "manage_badge",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/backoffice/update_badge_contents": {
            "post": {
                "tags": [
                    "backoffice"
                ],
                "summary": "Update Badge Contents",
                "operationId": "update_badge_contents",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "org_slug",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Org Slug"
                        }
                    },
                    {
                        "name": "repo_slug",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Repo Slug"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Response Backoffice:Update Badge Contents"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "backoffice",
                "x-speakeasy-name-override": "update_badge_contents",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/dashboard/personal": {
            "get": {
                "tags": [
                    "dashboard"
                ],
                "summary": "Get Personal Dashboard",
                "operationId": "get_personal_dashboard",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Q"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/IssueSortBy"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Sort"
                        }
                    },
                    {
                        "name": "only_pledged",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "title": "Only Pledged"
                        }
                    },
                    {
                        "name": "only_badged",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "title": "Only Badged"
                        }
                    },
                    {
                        "name": "show_closed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "title": "Show Closed"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "title": "Page"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IssueListResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "dashboard",
                "x-speakeasy-name-override": "get_personal_dashboard",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/dashboard/organization/{id}": {
            "get": {
                "tags": [
                    "dashboard"
                ],
                "summary": "Get Dashboard",
                "operationId": "get_dashboard",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The organization ID.",
                            "x-polar-selector-widget": {
                                "resourceRoot": "/v1/organizations",
                                "resourceName": "Organization",
                                "displayProperty": "name"
                            },
                            "title": "Id"
                        }
                    },
                    {
                        "name": "repository_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "minLength": 1
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by repository name.",
                            "examples": [
                                "my-repo"
                            ],
                            "title": "Repository Name"
                        },
                        "description": "Filter by repository name."
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Q"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/IssueSortBy"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Sort"
                        }
                    },
                    {
                        "name": "only_pledged",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "title": "Only Pledged"
                        }
                    },
                    {
                        "name": "only_badged",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "title": "Only Badged"
                        }
                    },
                    {
                        "name": "show_closed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "title": "Show Closed"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "title": "Page"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IssueListResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "dashboard",
                "x-speakeasy-name-override": "get_dashboard",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/dashboard/dummy_do_not_use": {
            "get": {
                "tags": [
                    "dashboard"
                ],
                "summary": "Dummy Do Not Use",
                "operationId": "dummy_do_not_use",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PledgesTypeSummaries"
                                }
                            }
                        }
                    }
                },
                "x-speakeasy-group": "dashboard",
                "x-speakeasy-name-override": "dummy_do_not_use",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/funding/search": {
            "get": {
                "tags": [
                    "funding"
                ],
                "summary": "Search",
                "operationId": "search",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The organization ID.",
                            "x-polar-selector-widget": {
                                "resourceRoot": "/v1/organizations",
                                "resourceName": "Organization",
                                "displayProperty": "name"
                            },
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "repository_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "minLength": 1
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by repository name.",
                            "examples": [
                                "my-repo"
                            ],
                            "title": "Repository Name"
                        },
                        "description": "Filter by repository name."
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Query"
                        }
                    },
                    {
                        "name": "badged",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Badged"
                        }
                    },
                    {
                        "name": "closed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Closed"
                        }
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/ListFundingSortBy"
                            },
                            "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order.",
                            "default": [
                                "newest"
                            ],
                            "title": "Sorting"
                        },
                        "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_IssueFunding_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "funding",
                "x-speakeasy-name-override": "search",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/funding/lookup": {
            "get": {
                "tags": [
                    "funding"
                ],
                "summary": "Lookup",
                "operationId": "lookup",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "issue_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Issue Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IssueFunding"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "User"
                ],
                "x-speakeasy-group": "funding",
                "x-speakeasy-name-override": "lookup",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/magic_link/request": {
            "post": {
                "tags": [
                    "magic_link"
                ],
                "summary": "Magic Link.Request",
                "operationId": "magic_link.request",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MagicLinkRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-speakeasy-group": "magic_link",
                "x-speakeasy-name-override": "request_magic_link",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/magic_link/authenticate": {
            "post": {
                "tags": [
                    "magic_link"
                ],
                "summary": "Magic Link.Authenticate",
                "operationId": "magic_link.authenticate",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "return_to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Return To"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/authenticate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "User"
                ],
                "x-speakeasy-group": "magic_link",
                "x-speakeasy-name-override": "authenticate_magic_link",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/notifications": {
            "get": {
                "tags": [
                    "notifications"
                ],
                "summary": "Get",
                "operationId": "get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationsList"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "notifications",
                "x-speakeasy-name-override": "get",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/notifications/read": {
            "post": {
                "tags": [
                    "notifications"
                ],
                "summary": "Mark Read",
                "operationId": "mark_read",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationsMarkRead"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "notifications",
                "x-speakeasy-name-override": "mark_read",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/external_organizations/": {
            "get": {
                "tags": [
                    "external_organizations"
                ],
                "summary": "List External Organizations",
                "description": "List external organizations.",
                "operationId": "list",
                "security": [
                    {
                        "oidc": [
                            "external_organizations:read"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "platform",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/Platforms"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Platforms"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Platform Filter",
                            "description": "Filter by platform."
                        },
                        "description": "Filter by platform."
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "RepositoryName Filter",
                            "description": "Filter by name."
                        },
                        "description": "Filter by name."
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The organization ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/organizations",
                                        "resourceName": "Organization",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The organization ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/organizations",
                                            "resourceName": "Organization",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "OrganizationID Filter",
                            "description": "Filter by organization ID."
                        },
                        "description": "Filter by organization ID."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ExternalOrganizationSortProperty"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.",
                            "default": [
                                "-created_at"
                            ],
                            "title": "Sorting"
                        },
                        "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_ExternalOrganization_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "Organization",
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "external_organizations",
                "x-speakeasy-name-override": "list"
            }
        },
        "/v1/repositories/": {
            "get": {
                "tags": [
                    "repositories"
                ],
                "summary": "List Repositories",
                "description": "List repositories.",
                "operationId": "list",
                "security": [
                    {
                        "oidc": [
                            "repositories:read",
                            "repositories:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "platform",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/Platforms"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Platforms"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Platform Filter",
                            "description": "Filter by platform."
                        },
                        "description": "Filter by platform."
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "RepositoryName Filter",
                            "description": "Filter by name."
                        },
                        "description": "Filter by name."
                    },
                    {
                        "name": "external_organization_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "ExternalOrganizationName Filter",
                            "description": "Filter by external organization name."
                        },
                        "description": "Filter by external organization name."
                    },
                    {
                        "name": "is_private",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by private status.",
                            "title": "Is Private"
                        },
                        "description": "Filter by private status."
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The organization ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/organizations",
                                        "resourceName": "Organization",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The organization ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/organizations",
                                            "resourceName": "Organization",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "OrganizationID Filter",
                            "description": "Filter by organization ID."
                        },
                        "description": "Filter by organization ID."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RepositorySortProperty"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.",
                            "default": [
                                "-created_at"
                            ],
                            "title": "Sorting"
                        },
                        "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_Repository_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "Organization",
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "repositories",
                "x-speakeasy-name-override": "list"
            }
        },
        "/v1/repositories/{id}": {
            "get": {
                "tags": [
                    "repositories"
                ],
                "summary": "Get Repository",
                "description": "Get a repository by ID.",
                "operationId": "get",
                "security": [
                    {
                        "oidc": [
                            "repositories:read",
                            "repositories:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The repository ID.",
                            "x-polar-selector-widget": {
                                "resourceRoot": "/v1/repositories",
                                "resourceName": "Repository",
                                "displayProperty": "name"
                            },
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Repository"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Repository not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "repositories",
                "x-speakeasy-name-override": "get"
            },
            "patch": {
                "tags": [
                    "repositories"
                ],
                "summary": "Update Repository",
                "description": "Update a repository.",
                "operationId": "update",
                "security": [
                    {
                        "oidc": [
                            "repositories:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The repository ID.",
                            "x-polar-selector-widget": {
                                "resourceRoot": "/v1/repositories",
                                "resourceName": "Repository",
                                "displayProperty": "name"
                            },
                            "title": "Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Repository updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Repository"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You don't have the permission to update this repository.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotPermitted"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Repository not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "repositories",
                "x-speakeasy-name-override": "update"
            }
        },
        "/v1/rewards/search": {
            "get": {
                "tags": [
                    "rewards"
                ],
                "summary": "Search rewards",
                "description": "Search rewards.",
                "operationId": "search",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "pledges_to_organization",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Search rewards for pledges in this organization.",
                            "title": "Pledges To Organization"
                        },
                        "description": "Search rewards for pledges in this organization."
                    },
                    {
                        "name": "rewards_to_user",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Search rewards to user.",
                            "title": "Rewards To User"
                        },
                        "description": "Search rewards to user."
                    },
                    {
                        "name": "rewards_to_org",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Search rewards to organization.",
                            "title": "Rewards To Org"
                        },
                        "description": "Search rewards to organization."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_Reward_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "rewards",
                "x-speakeasy-name-override": "search",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/rewards/summary": {
            "get": {
                "tags": [
                    "rewards"
                ],
                "summary": "Get rewards summary",
                "description": "Get summary of rewards for resource.",
                "operationId": "summary",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "issue_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Issue Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RewardsSummary"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "User"
                ],
                "x-speakeasy-group": "rewards",
                "x-speakeasy-name-override": "summary",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/personal_access_tokens/": {
            "get": {
                "tags": [
                    "personal_access_token"
                ],
                "summary": "List Personal Access Tokens",
                "description": "List personal access tokens.",
                "operationId": "list_personal_access_tokens",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_PersonalAccessToken_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "personal_access_token",
                "x-speakeasy-name-override": "list_personal_access_tokens",
                "x-speakeasy-ignore": true
            },
            "post": {
                "tags": [
                    "personal_access_token"
                ],
                "summary": "Create Personal Access Token",
                "operationId": "create_personal_access_token",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PersonalAccessTokenCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccessTokenCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "personal_access_token",
                "x-speakeasy-name-override": "create_personal_access_token",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/personal_access_tokens/{id}": {
            "delete": {
                "tags": [
                    "personal_access_token"
                ],
                "summary": "Delete Personal Access Token",
                "operationId": "delete_personal_access_token",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "personal_access_token",
                "x-speakeasy-name-override": "delete_personal_access_token",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/payment_methods": {
            "get": {
                "tags": [
                    "payment_methods"
                ],
                "summary": "List",
                "operationId": "list",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_PaymentMethod_"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "payment_methods",
                "x-speakeasy-name-override": "list",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/payment_methods/{id}/detach": {
            "post": {
                "tags": [
                    "payment_methods"
                ],
                "summary": "Detach",
                "operationId": "detach",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentMethod"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "payment_methods",
                "x-speakeasy-name-override": "detach",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/accounts/search": {
            "get": {
                "tags": [
                    "accounts"
                ],
                "summary": "Search",
                "operationId": "search",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_Account_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "accounts",
                "x-speakeasy-name-override": "search",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/accounts/{id}": {
            "get": {
                "tags": [
                    "accounts"
                ],
                "summary": "Get",
                "operationId": "get",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "accounts",
                "x-speakeasy-name-override": "get",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/accounts/{id}/onboarding_link": {
            "post": {
                "tags": [
                    "accounts"
                ],
                "summary": "Onboarding Link",
                "operationId": "onboarding_link",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Id"
                        }
                    },
                    {
                        "name": "return_path",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Return Path"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountLink"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "accounts",
                "x-speakeasy-name-override": "onboarding_link",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/accounts/{id}/dashboard_link": {
            "post": {
                "tags": [
                    "accounts"
                ],
                "summary": "Dashboard Link",
                "operationId": "dashboard_link",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountLink"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "accounts",
                "x-speakeasy-name-override": "dashboard_link",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/accounts": {
            "post": {
                "tags": [
                    "accounts"
                ],
                "summary": "Create",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "accounts",
                "x-speakeasy-name-override": "create",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/issues/": {
            "get": {
                "tags": [
                    "issues"
                ],
                "summary": "List Issues",
                "description": "List issues.",
                "operationId": "list",
                "security": [
                    {
                        "oidc": [
                            "issues:read",
                            "issues:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "platform",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/Platforms"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Platforms"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Platform Filter",
                            "description": "Filter by platform."
                        },
                        "description": "Filter by platform."
                    },
                    {
                        "name": "external_organization_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "ExternalOrganizationName Filter",
                            "description": "Filter by external organization name."
                        },
                        "description": "Filter by external organization name."
                    },
                    {
                        "name": "repository_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "RepositoryName Filter",
                            "description": "Filter by repository name."
                        },
                        "description": "Filter by repository name."
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "IssueNumber Filter",
                            "description": "Filter by issue number."
                        },
                        "description": "Filter by issue number."
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The organization ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/organizations",
                                        "resourceName": "Organization",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The organization ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/organizations",
                                            "resourceName": "Organization",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "OrganizationID Filter",
                            "description": "Filter by organization ID."
                        },
                        "description": "Filter by organization ID."
                    },
                    {
                        "name": "is_badged",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by badged status.",
                            "title": "Is Badged"
                        },
                        "description": "Filter by badged status."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IssueSortProperty"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.",
                            "default": [
                                "-modified_at"
                            ],
                            "title": "Sorting"
                        },
                        "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_Issue_"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "Organization",
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "issues",
                "x-speakeasy-name-override": "list",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/issues/lookup": {
            "get": {
                "tags": [
                    "issues"
                ],
                "summary": "Lookup",
                "operationId": "lookup",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "external_url",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "URL to issue on external source",
                            "examples": [
                                "https://github.com/polarsource/polar/issues/897"
                            ],
                            "title": "External Url"
                        },
                        "description": "URL to issue on external source"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Issue"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "User"
                ],
                "x-speakeasy-group": "issues",
                "x-speakeasy-name-override": "lookup",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/issues/{id}/body": {
            "get": {
                "tags": [
                    "issues"
                ],
                "summary": "Get Body",
                "operationId": "get_body",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "User"
                ],
                "x-speakeasy-group": "issues",
                "x-speakeasy-name-override": "get_body",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/issues/for_you": {
            "get": {
                "tags": [
                    "issues"
                ],
                "summary": "For You",
                "operationId": "for_you",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_Issue_"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "issues",
                "x-speakeasy-name-override": "for_you",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/issues/{id}": {
            "get": {
                "tags": [
                    "issues"
                ],
                "summary": "Get issue",
                "description": "Get issue",
                "operationId": "get",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Issue"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "User"
                ],
                "x-speakeasy-group": "issues",
                "x-speakeasy-name-override": "get",
                "x-speakeasy-ignore": true
            },
            "post": {
                "tags": [
                    "issues"
                ],
                "summary": "Update issue.",
                "description": "Update issue. Requires authentication.",
                "operationId": "update",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateIssue"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Issue"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "issues",
                "x-speakeasy-name-override": "update",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/issues/{id}/confirm_solved": {
            "post": {
                "tags": [
                    "issues"
                ],
                "summary": "Mark an issue as confirmed solved.",
                "description": "Mark an issue as confirmed solved, and configure issue reward splits. Enables payouts of pledges. Can only be done once per issue. Requires authentication.",
                "operationId": "confirm",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConfirmIssue"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Issue"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "issues",
                "x-speakeasy-name-override": "confirm",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/issues/{id}/add_badge": {
            "post": {
                "tags": [
                    "issues"
                ],
                "summary": "Add Polar Badge",
                "operationId": "add_polar_badge",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Issue"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "issues",
                "x-speakeasy-name-override": "add_polar_badge",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/issues/{id}/remove_badge": {
            "post": {
                "tags": [
                    "issues"
                ],
                "summary": "Remove Polar Badge",
                "operationId": "remove_polar_badge",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Issue"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "issues",
                "x-speakeasy-name-override": "remove_polar_badge",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/issues/{id}/comment": {
            "post": {
                "tags": [
                    "issues"
                ],
                "summary": "Add Issue Comment",
                "operationId": "add_issue_comment",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostIssueComment"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Issue"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "issues",
                "x-speakeasy-name-override": "add_issue_comment",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/issues/{id}/badge_with_message": {
            "post": {
                "tags": [
                    "issues"
                ],
                "summary": "Badge With Message",
                "operationId": "badge_with_message",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IssueUpdateBadgeMessage"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Issue"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "issues",
                "x-speakeasy-name-override": "badge_with_message",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/pledges/search": {
            "get": {
                "tags": [
                    "pledges"
                ],
                "summary": "Search pledges",
                "description": "Search pledges. Requires authentication. The user can only read pledges that they have made (personally or via an organization) or received (to organizations that they are a member of).",
                "operationId": "search",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The organization ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/organizations",
                                        "resourceName": "Organization",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Search pledges to this organization",
                            "title": "Organization Id"
                        },
                        "description": "Search pledges to this organization"
                    },
                    {
                        "name": "repository_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "minLength": 1
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Search pledges in the repository with this name. Can only be used if organization_name is set.",
                            "examples": [
                                "my-repo"
                            ],
                            "title": "Repository Name"
                        },
                        "description": "Search pledges in the repository with this name. Can only be used if organization_name is set."
                    },
                    {
                        "name": "issue_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Search pledges to this issue",
                            "title": "Issue Id"
                        },
                        "description": "Search pledges to this issue"
                    },
                    {
                        "name": "by_organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Search pledges made by this organization.",
                            "title": "By Organization Id"
                        },
                        "description": "Search pledges made by this organization."
                    },
                    {
                        "name": "by_user_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Search pledges made by this user.",
                            "title": "By User Id"
                        },
                        "description": "Search pledges made by this user."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_Pledge_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "pledges",
                "x-speakeasy-name-override": "search",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/pledges/summary": {
            "get": {
                "tags": [
                    "pledges"
                ],
                "summary": "Get pledges summary",
                "description": "Get summary of pledges for resource.",
                "operationId": "summary",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "issue_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Issue Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PledgePledgesSummary"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "User"
                ],
                "x-speakeasy-group": "pledges",
                "x-speakeasy-name-override": "summary",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/pledges/spending": {
            "get": {
                "tags": [
                    "pledges"
                ],
                "summary": "Get user spending",
                "description": "Get current user spending in the current period. Used together with spending limits.",
                "operationId": "spending",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Spending in this organization. Required.",
                            "title": "Organization Id"
                        },
                        "description": "Spending in this organization. Required."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PledgeSpending"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "pledges",
                "x-speakeasy-name-override": "spending",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/pledges/{id}": {
            "get": {
                "tags": [
                    "pledges"
                ],
                "summary": "Get pledge",
                "description": "Get a pledge. Requires authentication.",
                "operationId": "get",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pledge"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "pledges",
                "x-speakeasy-name-override": "get",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/pledges": {
            "post": {
                "tags": [
                    "pledges"
                ],
                "summary": "Create",
                "description": "Creates a pledge from a payment intent",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePledgeFromPaymentIntent"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pledge"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "User"
                ],
                "x-speakeasy-group": "pledges",
                "x-speakeasy-name-override": "create",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/pledges/pay_on_completion": {
            "post": {
                "tags": [
                    "pledges"
                ],
                "summary": "Create Pay On Completion",
                "description": "Creates a pay_on_completion type of pledge",
                "operationId": "create_pay_on_completion",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePledgePayLater"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pledge"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "pledges",
                "x-speakeasy-name-override": "create_pay_on_completion",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/pledges/{id}/create_invoice": {
            "post": {
                "tags": [
                    "pledges"
                ],
                "summary": "Create Invoice",
                "description": "Creates an invoice for pay_on_completion pledges",
                "operationId": "create_invoice",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pledge"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "pledges",
                "x-speakeasy-name-override": "create_invoice",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/pledges/payment_intent": {
            "post": {
                "tags": [
                    "pledges"
                ],
                "summary": "Create Payment Intent",
                "operationId": "create_payment_intent",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PledgeStripePaymentIntentCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PledgeStripePaymentIntentMutationResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "User"
                ],
                "x-speakeasy-group": "pledges",
                "x-speakeasy-name-override": "create_payment_intent",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/pledges/payment_intent/{id}": {
            "patch": {
                "tags": [
                    "pledges"
                ],
                "summary": "Update Payment Intent",
                "operationId": "update_payment_intent",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PledgeStripePaymentIntentUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PledgeStripePaymentIntentMutationResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "User"
                ],
                "x-speakeasy-group": "pledges",
                "x-speakeasy-name-override": "update_payment_intent",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/pledges/{pledge_id}/dispute": {
            "post": {
                "tags": [
                    "pledges"
                ],
                "summary": "Dispute Pledge",
                "operationId": "dispute_pledge",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "pledge_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Pledge Id"
                        }
                    },
                    {
                        "name": "reason",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Reason"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pledge"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "pledges",
                "x-speakeasy-name-override": "dispute_pledge",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/organizations/": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "List Organizations",
                "description": "List organizations.",
                "operationId": "list",
                "security": [
                    {
                        "oidc": [
                            "organizations:read",
                            "organizations:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "slug",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by slug.",
                            "title": "Slug"
                        },
                        "description": "Filter by slug."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrganizationSortProperty"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.",
                            "default": [
                                "created_at"
                            ],
                            "title": "Sorting"
                        },
                        "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_Organization_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "organizations",
                "x-speakeasy-name-override": "list"
            },
            "post": {
                "tags": [
                    "organizations"
                ],
                "summary": "Create Organization",
                "description": "Create an organization.",
                "operationId": "create",
                "security": [
                    {
                        "oidc": [
                            "organizations:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Organization created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "organizations",
                "x-speakeasy-name-override": "create"
            }
        },
        "/v1/organizations/{id}": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Organization",
                "description": "Get an organization by ID.",
                "operationId": "get",
                "security": [
                    {
                        "oidc": [
                            "organizations:read",
                            "organizations:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The organization ID.",
                            "x-polar-selector-widget": {
                                "resourceRoot": "/v1/organizations",
                                "resourceName": "Organization",
                                "displayProperty": "name"
                            },
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "organizations",
                "x-speakeasy-name-override": "get"
            },
            "patch": {
                "tags": [
                    "organizations"
                ],
                "summary": "Update Organization",
                "description": "Update an organization.",
                "operationId": "update",
                "security": [
                    {
                        "oidc": [
                            "organizations:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The organization ID.",
                            "x-polar-selector-widget": {
                                "resourceRoot": "/v1/organizations",
                                "resourceName": "Organization",
                                "displayProperty": "name"
                            },
                            "title": "Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Organization updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You don't have the permission to update this organization.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotPermitted"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "organizations",
                "x-speakeasy-name-override": "update"
            }
        },
        "/v1/organizations/{id}/account": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Organization Account",
                "description": "Get the account for an organization.",
                "operationId": "get_account",
                "security": [
                    {
                        "oidc": [
                            "organizations:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The organization ID.",
                            "x-polar-selector-widget": {
                                "resourceRoot": "/v1/organizations",
                                "resourceName": "Organization",
                                "displayProperty": "name"
                            },
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You don't have the permission to update this organization.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotPermitted"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found or account not set.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "organizations",
                "x-speakeasy-name-override": "get_account",
                "x-speakeasy-ignore": true
            },
            "patch": {
                "tags": [
                    "organizations"
                ],
                "summary": "Set Organization Account",
                "description": "Set the account for an organization.",
                "operationId": "set_account",
                "security": [
                    {
                        "oidc": [
                            "organizations:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The organization ID.",
                            "x-polar-selector-widget": {
                                "resourceRoot": "/v1/organizations",
                                "resourceName": "Organization",
                                "displayProperty": "name"
                            },
                            "title": "Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationSetAccount"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Organization account set.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You don't have the permission to update this organization.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotPermitted"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "organizations",
                "x-speakeasy-name-override": "set_account",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/organizations/{id}/members": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Members",
                "description": "List members in an organization.",
                "operationId": "members",
                "security": [
                    {
                        "oidc": [
                            "organizations:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_OrganizationMember_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "organizations",
                "x-speakeasy-name-override": "members",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/organizations/{id}/stripe_customer_portal": {
            "post": {
                "tags": [
                    "organizations"
                ],
                "summary": "Create Stripe Customer Portal",
                "description": "Create a new Stripe Customer session for a organization.",
                "operationId": "create_stripe_customer_portal",
                "security": [
                    {
                        "oidc": [
                            "organizations:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationStripePortalSession"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "organizations",
                "x-speakeasy-name-override": "create_stripe_customer_portal",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/organizations/{id}/badge_settings": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Badge Settings",
                "description": "Get badge settings for an organization.",
                "operationId": "get_badge_settings",
                "security": [
                    {
                        "oidc": [
                            "organizations:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationBadgeSettingsRead"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "organizations",
                "x-speakeasy-name-override": "get_badge_settings",
                "x-speakeasy-ignore": true
            },
            "post": {
                "tags": [
                    "organizations"
                ],
                "summary": "Update Badge Settings",
                "description": "Update badge settings for an organization.",
                "operationId": "update_badge_settings",
                "security": [
                    {
                        "oidc": [
                            "organizations:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationBadgeSettingsUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "organizations",
                "x-speakeasy-name-override": "update_badge_settings",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/subscriptions/": {
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "List Subscriptions",
                "description": "List subscriptions.",
                "operationId": "list",
                "security": [
                    {
                        "oidc": [
                            "subscriptions:read",
                            "subscriptions:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The organization ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/organizations",
                                        "resourceName": "Organization",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The organization ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/organizations",
                                            "resourceName": "Organization",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "OrganizationID Filter",
                            "description": "Filter by organization ID."
                        },
                        "description": "Filter by organization ID."
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The product ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/products",
                                        "resourceName": "Product",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The product ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/products",
                                            "resourceName": "Product",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "ProductID Filter",
                            "description": "Filter by product ID."
                        },
                        "description": "Filter by product ID."
                    },
                    {
                        "name": "customer_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "CustomerID Filter",
                            "description": "Filter by customer ID."
                        },
                        "description": "Filter by customer ID."
                    },
                    {
                        "name": "discount_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The product ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/products",
                                        "resourceName": "Product",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The product ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/products",
                                            "resourceName": "Product",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "DiscountID Filter",
                            "description": "Filter by discount ID."
                        },
                        "description": "Filter by discount ID."
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by active or inactive subscription.",
                            "title": "Active"
                        },
                        "description": "Filter by active or inactive subscription."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SubscriptionSortProperty"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.",
                            "default": [
                                "-started_at"
                            ],
                            "title": "Sorting"
                        },
                        "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_Subscription_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "subscriptions",
                "x-speakeasy-name-override": "list"
            }
        },
        "/v1/subscriptions/export": {
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "Export Subscriptions",
                "description": "Export subscriptions as a CSV file.",
                "operationId": "export",
                "security": [
                    {
                        "oidc": [
                            "subscriptions:read",
                            "subscriptions:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The organization ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/organizations",
                                        "resourceName": "Organization",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The organization ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/organizations",
                                            "resourceName": "Organization",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by organization ID.",
                            "title": "Organization Id"
                        },
                        "description": "Filter by organization ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "subscriptions",
                "x-speakeasy-name-override": "export"
            }
        },
        "/v1/transactions/search": {
            "get": {
                "tags": [
                    "transactions"
                ],
                "summary": "Search Transactions",
                "operationId": "search_transactions",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/TransactionType"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Type"
                        }
                    },
                    {
                        "name": "account_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Account Id"
                        }
                    },
                    {
                        "name": "payment_customer_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Payment Customer Id"
                        }
                    },
                    {
                        "name": "payment_organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Payment Organization Id"
                        }
                    },
                    {
                        "name": "payment_user_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Payment User Id"
                        }
                    },
                    {
                        "name": "exclude_platform_fees",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "title": "Exclude Platform Fees"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TransactionSortProperty"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.",
                            "default": [
                                "-created_at"
                            ],
                            "title": "Sorting"
                        },
                        "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_Transaction_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "transactions",
                "x-speakeasy-name-override": "search_transactions",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/transactions/lookup": {
            "get": {
                "tags": [
                    "transactions"
                ],
                "summary": "Lookup Transaction",
                "operationId": "lookup_transaction",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "transaction_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "Transaction Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionDetails"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "transactions",
                "x-speakeasy-name-override": "lookup_transaction",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/transactions/summary": {
            "get": {
                "tags": [
                    "transactions"
                ],
                "summary": "Get Summary",
                "operationId": "get_summary",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "Account Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionsSummary"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "transactions",
                "x-speakeasy-name-override": "get_summary",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/transactions/payouts": {
            "get": {
                "tags": [
                    "transactions"
                ],
                "summary": "Get Payout Estimate",
                "operationId": "get_payout_estimate",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "Account Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PayoutEstimate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "transactions",
                "x-speakeasy-name-override": "get_payout_estimate",
                "x-speakeasy-ignore": true
            },
            "post": {
                "tags": [
                    "transactions"
                ],
                "summary": "Create Payout",
                "operationId": "create_payout",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PayoutCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "transactions",
                "x-speakeasy-name-override": "create_payout",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/transactions/payouts/{id}/csv": {
            "get": {
                "tags": [
                    "transactions"
                ],
                "summary": "Get Payout Csv",
                "operationId": "get_payout_csv",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "transactions",
                "x-speakeasy-name-override": "get_payout_csv",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/advertisements/": {
            "get": {
                "tags": [
                    "advertisements"
                ],
                "summary": "List Campaigns",
                "description": "List active advertisement campaigns for a benefit.",
                "operationId": "list",
                "parameters": [
                    {
                        "name": "benefit_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The benefit ID.",
                            "x-polar-selector-widget": {
                                "resourceRoot": "/v1/benefits",
                                "resourceName": "Benefit",
                                "displayProperty": "description"
                            },
                            "title": "Benefit Id"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AdvertisementSortProperty"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.",
                            "default": [
                                "granted_at"
                            ],
                            "title": "Sorting"
                        },
                        "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdvertisementCampaignListResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "advertisements",
                "x-speakeasy-name-override": "list"
            }
        },
        "/v1/advertisements/{id}": {
            "get": {
                "tags": [
                    "advertisements"
                ],
                "summary": "Get Campaign",
                "description": "Get an advertisement campaign by ID.",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The advertisement campaign ID.",
                            "title": "Id"
                        },
                        "description": "The advertisement campaign ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdvertisementCampaign"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Advertisement campaign not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-speakeasy-group": "advertisements",
                "x-speakeasy-name-override": "get"
            }
        },
        "/v1/advertisements/{id}/view": {
            "post": {
                "tags": [
                    "advertisements"
                ],
                "summary": "Track View",
                "description": "Track a view on an advertisement campaign.",
                "operationId": "track_view",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The advertisement campaign ID.",
                            "title": "Id"
                        },
                        "description": "The advertisement campaign ID."
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The view was successfully tracked."
                    },
                    "404": {
                        "description": "Advertisement campaign not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-speakeasy-group": "advertisements",
                "x-speakeasy-name-override": "track_view"
            }
        },
        "/v1/auth/logout": {
            "get": {
                "tags": [
                    "auth"
                ],
                "summary": "Logout",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "x-speakeasy-group": "auth",
                "x-speakeasy-name-override": "logout",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/oauth2/": {
            "get": {
                "tags": [
                    "oauth2.clients"
                ],
                "summary": "List Clients",
                "description": "List OAuth2 clients.",
                "operationId": "list",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_OAuth2Client_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "oauth2.clients",
                "x-speakeasy-name-override": "list"
            }
        },
        "/v1/oauth2/register": {
            "post": {
                "tags": [
                    "oauth2.clients"
                ],
                "summary": "Create Client",
                "description": "Create an OAuth2 client.",
                "operationId": "create_client",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OAuth2ClientConfiguration"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "oauth2.clients",
                "x-speakeasy-name-override": "create"
            }
        },
        "/v1/oauth2/register/{client_id}": {
            "get": {
                "tags": [
                    "oauth2.clients"
                ],
                "summary": "Get Client",
                "description": "Get an OAuth2 client by Client ID.",
                "operationId": "get_client",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Client Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "User"
                ],
                "x-speakeasy-group": "oauth2.clients",
                "x-speakeasy-name-override": "get"
            },
            "put": {
                "tags": [
                    "oauth2.clients"
                ],
                "summary": "Update Client",
                "description": "Update an OAuth2 client.",
                "operationId": "update_client",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Client Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OAuth2ClientConfigurationUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "User"
                ],
                "x-speakeasy-group": "oauth2.clients",
                "x-speakeasy-name-override": "update"
            },
            "delete": {
                "tags": [
                    "oauth2.clients"
                ],
                "summary": "Delete Client",
                "description": "Delete an OAuth2 client.",
                "operationId": "delete_client",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Client Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "User"
                ],
                "x-speakeasy-group": "oauth2.clients",
                "x-speakeasy-name-override": "delete"
            }
        },
        "/v1/oauth2/authorize": {
            "get": {
                "tags": [
                    "oauth2"
                ],
                "summary": "Authorize",
                "operationId": "authorize",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/AuthorizeResponseUser"
                                        },
                                        {
                                            "$ref": "#/components/schemas/AuthorizeResponseOrganization"
                                        }
                                    ],
                                    "title": "Response Oauth2:Authorize",
                                    "discriminator": {
                                        "propertyName": "sub_type",
                                        "mapping": {
                                            "user": "#/components/schemas/AuthorizeResponseUser",
                                            "organization": "#/components/schemas/AuthorizeResponseOrganization"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "User"
                ],
                "x-speakeasy-group": "oauth2",
                "x-speakeasy-name-override": "authorize"
            }
        },
        "/v1/oauth2/consent": {
            "post": {
                "tags": [
                    "oauth2"
                ],
                "summary": "Consent",
                "operationId": "consent",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_oauth2_consent"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "User"
                ],
                "x-speakeasy-group": "oauth2",
                "x-speakeasy-name-override": "consent",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/oauth2/token": {
            "post": {
                "tags": [
                    "oauth2"
                ],
                "summary": "Request Token",
                "description": "Request an access token using a valid grant.",
                "operationId": "request_token",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "oneOf": [
                                    {
                                        "$ref": "#/paths/~1v1~1oauth2~1token/post/x-components/AuthorizationCodeTokenRequest"
                                    },
                                    {
                                        "$ref": "#/paths/~1v1~1oauth2~1token/post/x-components/RefreshTokenRequest"
                                    }
                                ],
                                "discriminator": {
                                    "propertyName": "grant_type",
                                    "mapping": {
                                        "authorization_code": "#/paths/~1v1~1oauth2~1token/post/x-components/AuthorizationCodeTokenRequest",
                                        "refresh_token": "#/paths/~1v1~1oauth2~1token/post/x-components/RefreshTokenRequest"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    }
                },
                "x-components": {
                    "AuthorizationCodeTokenRequest": {
                        "properties": {
                            "grant_type": {
                                "const": "authorization_code",
                                "enum": [
                                    "authorization_code"
                                ],
                                "title": "Grant Type",
                                "type": "string"
                            },
                            "client_id": {
                                "title": "Client Id",
                                "type": "string"
                            },
                            "client_secret": {
                                "title": "Client Secret",
                                "type": "string"
                            },
                            "code": {
                                "title": "Code",
                                "type": "string"
                            },
                            "redirect_uri": {
                                "format": "uri",
                                "maxLength": 2083,
                                "minLength": 1,
                                "title": "Redirect Uri",
                                "type": "string"
                            }
                        },
                        "required": [
                            "grant_type",
                            "client_id",
                            "client_secret",
                            "code",
                            "redirect_uri"
                        ],
                        "title": "AuthorizationCodeTokenRequest",
                        "type": "object"
                    },
                    "RefreshTokenRequest": {
                        "properties": {
                            "grant_type": {
                                "const": "refresh_token",
                                "enum": [
                                    "refresh_token"
                                ],
                                "title": "Grant Type",
                                "type": "string"
                            },
                            "client_id": {
                                "title": "Client Id",
                                "type": "string"
                            },
                            "client_secret": {
                                "title": "Client Secret",
                                "type": "string"
                            },
                            "refresh_token": {
                                "title": "Refresh Token",
                                "type": "string"
                            }
                        },
                        "required": [
                            "grant_type",
                            "client_id",
                            "client_secret",
                            "refresh_token"
                        ],
                        "title": "RefreshTokenRequest",
                        "type": "object"
                    }
                },
                "x-speakeasy-group": "oauth2",
                "x-speakeasy-name-override": "token"
            }
        },
        "/v1/oauth2/revoke": {
            "post": {
                "tags": [
                    "oauth2"
                ],
                "summary": "Revoke Token",
                "description": "Revoke an access token or a refresh token.",
                "operationId": "revoke_token",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "title": "Token"
                                    },
                                    "token_type_hint": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "enum": [
                                                    "access_token",
                                                    "refresh_token"
                                                ]
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Token Type Hint"
                                    },
                                    "client_id": {
                                        "type": "string",
                                        "title": "Client Id"
                                    },
                                    "client_secret": {
                                        "type": "string",
                                        "title": "Client Secret"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "token",
                                    "client_id",
                                    "client_secret"
                                ],
                                "title": "RevokeTokenRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RevokeTokenResponse"
                                }
                            }
                        }
                    }
                },
                "x-speakeasy-group": "oauth2",
                "x-speakeasy-name-override": "revoke"
            }
        },
        "/v1/oauth2/introspect": {
            "post": {
                "tags": [
                    "oauth2"
                ],
                "summary": "Introspect Token",
                "description": "Get information about an access token.",
                "operationId": "introspect_token",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "title": "Token"
                                    },
                                    "token_type_hint": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "enum": [
                                                    "access_token",
                                                    "refresh_token"
                                                ]
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Token Type Hint"
                                    },
                                    "client_id": {
                                        "type": "string",
                                        "title": "Client Id"
                                    },
                                    "client_secret": {
                                        "type": "string",
                                        "title": "Client Secret"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "token",
                                    "client_id",
                                    "client_secret"
                                ],
                                "title": "IntrospectTokenRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IntrospectTokenResponse"
                                }
                            }
                        }
                    }
                },
                "x-speakeasy-group": "oauth2",
                "x-speakeasy-name-override": "introspect"
            }
        },
        "/v1/oauth2/userinfo": {
            "get": {
                "tags": [
                    "oauth2"
                ],
                "summary": "Get User Info",
                "description": "Get information about the authenticated user.",
                "operationId": "userinfo",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/UserInfoUser"
                                        },
                                        {
                                            "$ref": "#/components/schemas/UserInfoOrganization"
                                        }
                                    ],
                                    "title": "Response Oauth2:Userinfo"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": []
                    }
                ],
                "x-speakeasy-name-override": "userinfo",
                "x-speakeasy-group": "oauth2"
            }
        },
        "/v1/benefits/": {
            "get": {
                "tags": [
                    "benefits"
                ],
                "summary": "List Benefits",
                "description": "List benefits.",
                "operationId": "list",
                "security": [
                    {
                        "oidc": [
                            "benefits:read",
                            "benefits:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The organization ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/organizations",
                                        "resourceName": "Organization",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The organization ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/organizations",
                                            "resourceName": "Organization",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "OrganizationID Filter",
                            "description": "Filter by organization ID."
                        },
                        "description": "Filter by organization ID."
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/BenefitType"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BenefitType"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "BenefitType Filter",
                            "description": "Filter by benefit type."
                        },
                        "description": "Filter by benefit type."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_Benefit_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "benefits",
                "x-speakeasy-name-override": "list"
            },
            "post": {
                "tags": [
                    "benefits"
                ],
                "summary": "Create Benefit",
                "description": "Create a benefit.",
                "operationId": "create",
                "security": [
                    {
                        "oidc": [
                            "benefits:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BenefitCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Benefit created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Benefit",
                                    "title": "Benefit"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "benefits",
                "x-speakeasy-name-override": "create"
            }
        },
        "/v1/benefits/{id}": {
            "get": {
                "tags": [
                    "benefits"
                ],
                "summary": "Get Benefit",
                "description": "Get a benefit by ID.",
                "operationId": "get",
                "security": [
                    {
                        "oidc": [
                            "benefits:read",
                            "benefits:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The benefit ID.",
                            "x-polar-selector-widget": {
                                "resourceRoot": "/v1/benefits",
                                "resourceName": "Benefit",
                                "displayProperty": "description"
                            },
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Benefit",
                                    "title": "Benefit"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Benefit not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "benefits",
                "x-speakeasy-name-override": "get"
            },
            "patch": {
                "tags": [
                    "benefits"
                ],
                "summary": "Update Benefit",
                "description": "Update a benefit.",
                "operationId": "update",
                "security": [
                    {
                        "oidc": [
                            "benefits:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The benefit ID.",
                            "x-polar-selector-widget": {
                                "resourceRoot": "/v1/benefits",
                                "resourceName": "Benefit",
                                "displayProperty": "description"
                            },
                            "title": "Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/BenefitAdsUpdate"
                                    },
                                    {
                                        "$ref": "#/components/schemas/BenefitCustomUpdate"
                                    },
                                    {
                                        "$ref": "#/components/schemas/BenefitDiscordUpdate"
                                    },
                                    {
                                        "$ref": "#/components/schemas/BenefitGitHubRepositoryUpdate"
                                    },
                                    {
                                        "$ref": "#/components/schemas/BenefitDownloadablesUpdate"
                                    },
                                    {
                                        "$ref": "#/components/schemas/BenefitLicenseKeysUpdate"
                                    }
                                ],
                                "title": "Benefit Update"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Benefit updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Benefit",
                                    "title": "Benefit"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You don't have the permission to update this benefit.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotPermitted"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Benefit not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "benefits",
                "x-speakeasy-name-override": "update"
            },
            "delete": {
                "tags": [
                    "benefits"
                ],
                "summary": "Delete Benefit",
                "description": "Delete a benefit.\n\n> [!WARNING]\n> Every grants associated with the benefit will be revoked.\n> Users will lose access to the benefit.",
                "operationId": "delete",
                "security": [
                    {
                        "oidc": [
                            "benefits:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The benefit ID.",
                            "x-polar-selector-widget": {
                                "resourceRoot": "/v1/benefits",
                                "resourceName": "Benefit",
                                "displayProperty": "description"
                            },
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Benefit deleted."
                    },
                    "403": {
                        "description": "You don't have the permission to update this benefit or it's not deletable.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotPermitted"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Benefit not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "benefits",
                "x-speakeasy-name-override": "delete"
            }
        },
        "/v1/benefits/{id}/grants": {
            "get": {
                "tags": [
                    "benefits"
                ],
                "summary": "List Benefit Grants",
                "description": "List the individual grants for a benefit.\n\nIt's especially useful to check if a user has been granted a benefit.",
                "operationId": "grants",
                "security": [
                    {
                        "oidc": [
                            "benefits:read",
                            "benefits:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The benefit ID.",
                            "x-polar-selector-widget": {
                                "resourceRoot": "/v1/benefits",
                                "resourceName": "Benefit",
                                "displayProperty": "description"
                            },
                            "title": "Id"
                        }
                    },
                    {
                        "name": "is_granted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by granted status. If `true`, only granted benefits will be returned. If `false`, only revoked benefits will be returned. ",
                            "title": "Is Granted"
                        },
                        "description": "Filter by granted status. If `true`, only granted benefits will be returned. If `false`, only revoked benefits will be returned. "
                    },
                    {
                        "name": "customer_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "CustomerID Filter",
                            "description": "Filter by customer."
                        },
                        "description": "Filter by customer."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_BenefitGrant_"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Benefit not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "benefits",
                "x-speakeasy-name-override": "grants"
            }
        },
        "/v1/webhooks/endpoints": {
            "get": {
                "tags": [
                    "webhooks"
                ],
                "summary": "List Webhook Endpoints",
                "description": "List webhook endpoints.",
                "operationId": "list_webhook_endpoints",
                "security": [
                    {
                        "oidc": [
                            "webhooks:read",
                            "webhooks:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The organization ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/organizations",
                                        "resourceName": "Organization",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by organization ID.",
                            "title": "Organization Id"
                        },
                        "description": "Filter by organization ID."
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by user ID.",
                            "title": "User Id"
                        },
                        "description": "Filter by user ID."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_WebhookEndpoint_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "webhooks",
                "x-speakeasy-name-override": "list_webhook_endpoints",
                "x-speakeasy-ignore": true
            },
            "post": {
                "tags": [
                    "webhooks"
                ],
                "summary": "Create Webhook Endpoint",
                "description": "Create a webhook endpoint.",
                "operationId": "create_webhook_endpoint",
                "security": [
                    {
                        "oidc": [
                            "webhooks:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookEndpointCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Webhook endpoint created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebhookEndpoint"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "webhooks",
                "x-speakeasy-name-override": "create_webhook_endpoint",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/webhooks/endpoints/{id}": {
            "get": {
                "tags": [
                    "webhooks"
                ],
                "summary": "Get Webhook Endpoint",
                "description": "Get a webhook endpoint by ID.",
                "operationId": "get_webhook_endpoint",
                "security": [
                    {
                        "oidc": [
                            "webhooks:read",
                            "webhooks:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The webhook endpoint ID.",
                            "title": "Id"
                        },
                        "description": "The webhook endpoint ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebhookEndpoint"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Webhook endpoint not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "webhooks",
                "x-speakeasy-name-override": "get_webhook_endpoint",
                "x-speakeasy-ignore": true
            },
            "patch": {
                "tags": [
                    "webhooks"
                ],
                "summary": "Update Webhook Endpoint",
                "description": "Update a webhook endpoint.",
                "operationId": "update_webhook_endpoint",
                "security": [
                    {
                        "oidc": [
                            "webhooks:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The webhook endpoint ID.",
                            "title": "Id"
                        },
                        "description": "The webhook endpoint ID."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookEndpointUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Webhook endpoint updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebhookEndpoint"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You don't have the permission to update this webhook endpoint.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotPermitted"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Webhook endpoint not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "webhooks",
                "x-speakeasy-name-override": "update_webhook_endpoint",
                "x-speakeasy-ignore": true
            },
            "delete": {
                "tags": [
                    "webhooks"
                ],
                "summary": "Delete Webhook Endpoint",
                "description": "Delete a webhook endpoint.",
                "operationId": "delete_webhook_endpoint",
                "security": [
                    {
                        "oidc": [
                            "webhooks:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The webhook endpoint ID.",
                            "title": "Id"
                        },
                        "description": "The webhook endpoint ID."
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Webhook endpoint deleted."
                    },
                    "403": {
                        "description": "You don't have the permission to delete this webhook endpoint.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotPermitted"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Webhook endpoint not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "webhooks",
                "x-speakeasy-name-override": "delete_webhook_endpoint",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/webhooks/deliveries": {
            "get": {
                "tags": [
                    "webhooks"
                ],
                "summary": "List Webhook Deliveries",
                "description": "List webhook deliveries.\n\nDeliveries are all the attempts to deliver a webhook event to an endpoint.",
                "operationId": "list_webhook_deliveries",
                "security": [
                    {
                        "oidc": [
                            "webhooks:read",
                            "webhooks:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "endpoint_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by webhook endpoint ID.",
                            "title": "Endpoint Id"
                        },
                        "description": "Filter by webhook endpoint ID."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_WebhookDelivery_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "webhooks",
                "x-speakeasy-name-override": "list_webhook_deliveries",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/webhooks/events/{id}/redeliver": {
            "post": {
                "tags": [
                    "webhooks"
                ],
                "summary": "Redeliver Webhook Event",
                "description": "Schedule the re-delivery of a webhook event.",
                "operationId": "redeliver_webhook_event",
                "security": [
                    {
                        "oidc": [
                            "webhooks:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The webhook event ID.",
                            "title": "Id"
                        },
                        "description": "The webhook event ID."
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Webhook event re-delivery scheduled.",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Webhook event not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "webhooks",
                "x-speakeasy-name-override": "redeliver_webhook_event",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/products/": {
            "get": {
                "tags": [
                    "products"
                ],
                "summary": "List Products",
                "description": "List products.",
                "operationId": "list",
                "security": [
                    {
                        "oidc": [
                            "products:read",
                            "products:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The organization ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/organizations",
                                        "resourceName": "Organization",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The organization ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/organizations",
                                            "resourceName": "Organization",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "OrganizationID Filter",
                            "description": "Filter by organization ID."
                        },
                        "description": "Filter by organization ID."
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by product name.",
                            "title": "Query"
                        },
                        "description": "Filter by product name."
                    },
                    {
                        "name": "is_archived",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter on archived products.",
                            "title": "Is Archived"
                        },
                        "description": "Filter on archived products."
                    },
                    {
                        "name": "is_recurring",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter on recurring products. If `true`, only subscriptions tiers are returned. If `false`, only one-time purchase products are returned. ",
                            "title": "Is Recurring"
                        },
                        "description": "Filter on recurring products. If `true`, only subscriptions tiers are returned. If `false`, only one-time purchase products are returned. "
                    },
                    {
                        "name": "benefit_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The benefit ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/benefits",
                                        "resourceName": "Benefit",
                                        "displayProperty": "description"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The benefit ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/benefits",
                                            "resourceName": "Benefit",
                                            "displayProperty": "description"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "BenefitID Filter",
                            "description": "Filter products granting specific benefit."
                        },
                        "description": "Filter products granting specific benefit."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductSortProperty"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.",
                            "default": [
                                "-created_at"
                            ],
                            "title": "Sorting"
                        },
                        "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_Product_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "products",
                "x-speakeasy-name-override": "list"
            },
            "post": {
                "tags": [
                    "products"
                ],
                "summary": "Create Product",
                "description": "Create a product.",
                "operationId": "create",
                "security": [
                    {
                        "oidc": [
                            "products:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductCreate",
                                "title": "ProductCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "products",
                "x-speakeasy-name-override": "create"
            }
        },
        "/v1/products/{id}": {
            "get": {
                "tags": [
                    "products"
                ],
                "summary": "Get Product",
                "description": "Get a product by ID.",
                "operationId": "get",
                "security": [
                    {
                        "oidc": [
                            "products:read",
                            "products:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The product ID.",
                            "x-polar-selector-widget": {
                                "resourceRoot": "/v1/products",
                                "resourceName": "Product",
                                "displayProperty": "name"
                            },
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "products",
                "x-speakeasy-name-override": "get"
            },
            "patch": {
                "tags": [
                    "products"
                ],
                "summary": "Update Product",
                "description": "Update a product.",
                "operationId": "update",
                "security": [
                    {
                        "oidc": [
                            "products:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The product ID.",
                            "x-polar-selector-widget": {
                                "resourceRoot": "/v1/products",
                                "resourceName": "Product",
                                "displayProperty": "name"
                            },
                            "title": "Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You don't have the permission to update this product.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotPermitted"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "products",
                "x-speakeasy-name-override": "update"
            }
        },
        "/v1/products/{id}/benefits": {
            "post": {
                "tags": [
                    "products"
                ],
                "summary": "Update Product Benefits",
                "description": "Update benefits granted by a product.",
                "operationId": "update_benefits",
                "security": [
                    {
                        "oidc": [
                            "products:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The product ID.",
                            "x-polar-selector-widget": {
                                "resourceRoot": "/v1/products",
                                "resourceName": "Product",
                                "displayProperty": "name"
                            },
                            "title": "Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductBenefitsUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product benefits updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You don't have the permission to update this product.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotPermitted"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "products",
                "x-speakeasy-name-override": "update_benefits"
            }
        },
        "/v1/orders/": {
            "get": {
                "tags": [
                    "orders"
                ],
                "summary": "List Orders",
                "description": "List orders.",
                "operationId": "list",
                "security": [
                    {
                        "oidc": [
                            "orders:read"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The organization ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/organizations",
                                        "resourceName": "Organization",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The organization ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/organizations",
                                            "resourceName": "Organization",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "OrganizationID Filter",
                            "description": "Filter by organization ID."
                        },
                        "description": "Filter by organization ID."
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The product ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/products",
                                        "resourceName": "Product",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The product ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/products",
                                            "resourceName": "Product",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "ProductID Filter",
                            "description": "Filter by product ID."
                        },
                        "description": "Filter by product ID."
                    },
                    {
                        "name": "product_price_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/ProductPriceType"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductPriceType"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "ProductPriceType Filter",
                            "description": "Filter by product price type. `recurring` will return orders corresponding to subscriptions creations or renewals. `one_time` will return orders corresponding to one-time purchases."
                        },
                        "description": "Filter by product price type. `recurring` will return orders corresponding to subscriptions creations or renewals. `one_time` will return orders corresponding to one-time purchases."
                    },
                    {
                        "name": "discount_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "DiscountID Filter",
                            "description": "Filter by discount ID."
                        },
                        "description": "Filter by discount ID."
                    },
                    {
                        "name": "customer_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "CustomerID Filter",
                            "description": "Filter by customer ID."
                        },
                        "description": "Filter by customer ID."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrderSortProperty"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.",
                            "default": [
                                "-created_at"
                            ],
                            "title": "Sorting"
                        },
                        "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_Order_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "orders",
                "x-speakeasy-name-override": "list"
            }
        },
        "/v1/orders/{id}": {
            "get": {
                "tags": [
                    "orders"
                ],
                "summary": "Get Order",
                "description": "Get an order by ID.",
                "operationId": "get",
                "security": [
                    {
                        "oidc": [
                            "orders:read"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The order ID.",
                            "title": "Id"
                        },
                        "description": "The order ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "orders",
                "x-speakeasy-name-override": "get"
            }
        },
        "/v1/orders/{id}/invoice": {
            "get": {
                "tags": [
                    "orders"
                ],
                "summary": "Get Order Invoice",
                "description": "Get an order's invoice data.",
                "operationId": "invoice",
                "security": [
                    {
                        "oidc": [
                            "orders:read"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The order ID.",
                            "title": "Id"
                        },
                        "description": "The order ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderInvoice"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "orders",
                "x-speakeasy-name-override": "invoice"
            }
        },
        "/v1/checkouts/custom/": {
            "get": {
                "tags": [
                    "checkouts.custom"
                ],
                "summary": "List Checkout Sessions",
                "description": "List checkout sessions.",
                "operationId": "list",
                "security": [
                    {
                        "oidc": [
                            "checkouts:read",
                            "checkouts:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The organization ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/organizations",
                                        "resourceName": "Organization",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The organization ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/organizations",
                                            "resourceName": "Organization",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "OrganizationID Filter",
                            "description": "Filter by organization ID."
                        },
                        "description": "Filter by organization ID."
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The product ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/products",
                                        "resourceName": "Product",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The product ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/products",
                                            "resourceName": "Product",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "ProductID Filter",
                            "description": "Filter by product ID."
                        },
                        "description": "Filter by product ID."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CheckoutSortProperty"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.",
                            "default": [
                                "-created_at"
                            ],
                            "title": "Sorting"
                        },
                        "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_Checkout_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "checkouts.custom",
                "x-speakeasy-name-override": "list"
            },
            "post": {
                "tags": [
                    "checkouts.custom"
                ],
                "summary": "Create Checkout Session",
                "description": "Create a checkout session.",
                "operationId": "create",
                "security": [
                    {
                        "oidc": [
                            "checkouts:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckoutCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Checkout session created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Checkout"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "checkouts.custom",
                "x-speakeasy-name-override": "create"
            }
        },
        "/v1/checkouts/custom/{id}": {
            "get": {
                "tags": [
                    "checkouts.custom"
                ],
                "summary": "Get Checkout Session",
                "description": "Get a checkout session by ID.",
                "operationId": "get",
                "security": [
                    {
                        "oidc": [
                            "checkouts:read",
                            "checkouts:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The checkout session ID.",
                            "title": "Id"
                        },
                        "description": "The checkout session ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Checkout"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Checkout session not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "checkouts.custom",
                "x-speakeasy-name-override": "get"
            },
            "patch": {
                "tags": [
                    "checkouts.custom"
                ],
                "summary": "Update Checkout Session",
                "description": "Update a checkout session.",
                "operationId": "update",
                "security": [
                    {
                        "oidc": [
                            "checkouts:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The checkout session ID.",
                            "title": "Id"
                        },
                        "description": "The checkout session ID."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckoutUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Checkout session updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Checkout"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Checkout session not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "checkouts.custom",
                "x-speakeasy-name-override": "update"
            }
        },
        "/v1/checkouts/custom/client/{client_secret}": {
            "get": {
                "tags": [
                    "checkouts.custom"
                ],
                "summary": "Get Checkout Session from Client",
                "description": "Get a checkout session by client secret.",
                "operationId": "client_get",
                "parameters": [
                    {
                        "name": "client_secret",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "The checkout session client secret.",
                            "title": "Client Secret"
                        },
                        "description": "The checkout session client secret."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckoutPublic"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Checkout session not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-speakeasy-group": "checkouts.custom",
                "x-speakeasy-name-override": "client_get"
            },
            "patch": {
                "tags": [
                    "checkouts.custom"
                ],
                "summary": "Update Checkout Session from Client",
                "description": "Update a checkout session by client secret.",
                "operationId": "client_update",
                "parameters": [
                    {
                        "name": "client_secret",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "The checkout session client secret.",
                            "title": "Client Secret"
                        },
                        "description": "The checkout session client secret."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckoutUpdatePublic"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Checkout session updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckoutPublic"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Checkout session not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-speakeasy-group": "checkouts.custom",
                "x-speakeasy-name-override": "client_update"
            }
        },
        "/v1/checkouts/custom/client/": {
            "post": {
                "tags": [
                    "checkouts.custom"
                ],
                "summary": "Create Checkout Session from Client",
                "description": "Create a checkout session from a client. Suitable to build checkout links.",
                "operationId": "client_create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckoutCreatePublic"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckoutPublic"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "User"
                ],
                "x-speakeasy-group": "checkouts.custom",
                "x-speakeasy-name-override": "client_create"
            }
        },
        "/v1/checkouts/custom/client/{client_secret}/confirm": {
            "post": {
                "tags": [
                    "checkouts.custom"
                ],
                "summary": "Confirm Checkout Session from Client",
                "description": "Confirm a checkout session by client secret.\n\nOrders and subscriptions will be processed.",
                "operationId": "client_confirm",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "client_secret",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "The checkout session client secret.",
                            "title": "Client Secret"
                        },
                        "description": "The checkout session client secret."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckoutConfirmStripe"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Checkout session confirmed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckoutPublicConfirmed"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Checkout session not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "User"
                ],
                "x-speakeasy-group": "checkouts.custom",
                "x-speakeasy-name-override": "client_confirm"
            }
        },
        "/v1/checkouts/": {
            "post": {
                "tags": [
                    "checkouts"
                ],
                "summary": "Create Checkout",
                "description": "Create a checkout session.",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckoutLegacyCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckoutLegacy"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "User"
                ],
                "x-speakeasy-deprecation-replacement": "checkouts:custom:create",
                "x-speakeasy-deprecation-message": "This API is deprecated. We recommend you to use the new custom checkout API, which is more flexible and powerful. Please refer to the documentation for more information.",
                "x-speakeasy-group": "checkouts",
                "x-speakeasy-name-override": "create"
            }
        },
        "/v1/checkouts/{id}": {
            "get": {
                "tags": [
                    "checkouts"
                ],
                "summary": "Get Checkout",
                "description": "Get an active checkout session by ID.",
                "operationId": "get",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckoutLegacy"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-speakeasy-deprecation-message": "This API is deprecated. We recommend you to use the new custom checkout API, which is more flexible and powerful. Please refer to the documentation for more information.",
                "x-speakeasy-group": "checkouts",
                "x-speakeasy-name-override": "get"
            }
        },
        "/v1/files/": {
            "get": {
                "tags": [
                    "files"
                ],
                "summary": "List Files",
                "description": "List files.",
                "operationId": "list",
                "security": [
                    {
                        "oidc": [
                            "files:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The organization ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/organizations",
                                        "resourceName": "Organization",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "List of file IDs to get. ",
                            "title": "Ids"
                        },
                        "description": "List of file IDs to get. "
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_FileRead_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "files",
                "x-speakeasy-name-override": "list"
            },
            "post": {
                "tags": [
                    "files"
                ],
                "summary": "Create File",
                "description": "Create a file.",
                "operationId": "create",
                "security": [
                    {
                        "oidc": [
                            "files:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FileCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "File created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileUpload"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "files",
                "x-speakeasy-name-override": "create"
            }
        },
        "/v1/files/{id}/uploaded": {
            "post": {
                "tags": [
                    "files"
                ],
                "summary": "Complete File Upload",
                "description": "Complete a file upload.",
                "operationId": "uploaded",
                "security": [
                    {
                        "oidc": [
                            "files:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The file ID.",
                            "title": "Id"
                        },
                        "description": "The file ID."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FileUploadCompleted"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "File upload completed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/DownloadableFileRead"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ProductMediaFileRead"
                                        },
                                        {
                                            "$ref": "#/components/schemas/OrganizationAvatarFileRead"
                                        }
                                    ],
                                    "discriminator": {
                                        "propertyName": "service",
                                        "mapping": {
                                            "downloadable": "#/components/schemas/DownloadableFileRead",
                                            "product_media": "#/components/schemas/ProductMediaFileRead",
                                            "organization_avatar": "#/components/schemas/OrganizationAvatarFileRead"
                                        }
                                    },
                                    "title": "Response Files:Uploaded"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You don't have the permission to update this file.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotPermitted"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "File not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "files",
                "x-speakeasy-name-override": "uploaded"
            }
        },
        "/v1/files/{id}": {
            "patch": {
                "tags": [
                    "files"
                ],
                "summary": "Update File",
                "description": "Update a file.",
                "operationId": "update",
                "security": [
                    {
                        "oidc": [
                            "files:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The file ID.",
                            "title": "Id"
                        },
                        "description": "The file ID."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FilePatch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "File updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/DownloadableFileRead"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ProductMediaFileRead"
                                        },
                                        {
                                            "$ref": "#/components/schemas/OrganizationAvatarFileRead"
                                        }
                                    ],
                                    "discriminator": {
                                        "propertyName": "service",
                                        "mapping": {
                                            "downloadable": "#/components/schemas/DownloadableFileRead",
                                            "product_media": "#/components/schemas/ProductMediaFileRead",
                                            "organization_avatar": "#/components/schemas/OrganizationAvatarFileRead"
                                        }
                                    },
                                    "title": "Response Files:Update"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You don't have the permission to update this file.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotPermitted"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "File not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "files",
                "x-speakeasy-name-override": "update"
            },
            "delete": {
                "tags": [
                    "files"
                ],
                "summary": "Delete File",
                "description": "Delete a file.",
                "operationId": "delete",
                "security": [
                    {
                        "oidc": [
                            "files:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "File deleted."
                    },
                    "403": {
                        "description": "You don't have the permission to delete this file.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotPermitted"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "File not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "files",
                "x-speakeasy-name-override": "delete"
            }
        },
        "/v1/metrics/": {
            "get": {
                "tags": [
                    "metrics"
                ],
                "summary": "Get Metrics",
                "description": "Get metrics about your orders and subscriptions.",
                "operationId": "get",
                "security": [
                    {
                        "oidc": [
                            "metrics:read"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "description": "Start date.",
                            "title": "Start Date"
                        },
                        "description": "Start date."
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "description": "End date.",
                            "title": "End Date"
                        },
                        "description": "End date."
                    },
                    {
                        "name": "interval",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Interval",
                            "description": "Interval between two timestamps."
                        },
                        "description": "Interval between two timestamps."
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The organization ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/organizations",
                                        "resourceName": "Organization",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The organization ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/organizations",
                                            "resourceName": "Organization",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "OrganizationID Filter",
                            "description": "Filter by organization ID."
                        },
                        "description": "Filter by organization ID."
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The product ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/products",
                                        "resourceName": "Product",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The product ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/products",
                                            "resourceName": "Product",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "ProductID Filter",
                            "description": "Filter by product ID."
                        },
                        "description": "Filter by product ID."
                    },
                    {
                        "name": "product_price_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/ProductPriceType"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductPriceType"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "ProductPriceType Filter",
                            "description": "Filter by product price type. `recurring` will filter data corresponding to subscriptions creations or renewals. `one_time` will filter data corresponding to one-time purchases."
                        },
                        "description": "Filter by product price type. `recurring` will filter data corresponding to subscriptions creations or renewals. `one_time` will filter data corresponding to one-time purchases."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "metrics",
                "x-speakeasy-name-override": "get"
            }
        },
        "/v1/metrics/limits": {
            "get": {
                "tags": [
                    "metrics"
                ],
                "summary": "Get Metrics Limits",
                "description": "Get the interval limits for the metrics endpoint.",
                "operationId": "limits",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricsLimits"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oidc": [
                            "metrics:read"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "metrics",
                "x-speakeasy-name-override": "limits"
            }
        },
        "/v1/integrations/google/authorize": {
            "get": {
                "tags": [
                    "integrations_google"
                ],
                "summary": "Integrations.Google.Authorize",
                "operationId": "integrations.google.authorize",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "return_to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Return To"
                        }
                    },
                    {
                        "name": "attribution",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Attribution"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "User"
                ],
                "x-speakeasy-group": "integrations_google",
                "x-speakeasy-name-override": "google_authorize",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/integrations/google/callback": {
            "get": {
                "tags": [
                    "integrations_google"
                ],
                "summary": "Integrations.Google.Callback",
                "operationId": "integrations.google.callback",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Code"
                        }
                    },
                    {
                        "name": "code_verifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Code Verifier"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "State"
                        }
                    },
                    {
                        "name": "error",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Error"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "User"
                ],
                "x-speakeasy-group": "integrations_google",
                "x-speakeasy-name-override": "google_callback",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/license-keys": {
            "get": {
                "tags": [
                    "license_keys"
                ],
                "summary": "List License Keys",
                "description": "Get license keys connected to the given organization & filters.",
                "operationId": "list",
                "security": [
                    {
                        "oidc": [
                            "license_keys:read",
                            "license_keys:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The organization ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/organizations",
                                        "resourceName": "Organization",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The organization ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/organizations",
                                            "resourceName": "Organization",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "OrganizationID Filter",
                            "description": "Filter by organization ID."
                        },
                        "description": "Filter by organization ID."
                    },
                    {
                        "name": "benefit_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The benefit ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/benefits",
                                        "resourceName": "Benefit",
                                        "displayProperty": "description"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The benefit ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/benefits",
                                            "resourceName": "Benefit",
                                            "displayProperty": "description"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "BenefitID Filter",
                            "description": "Filter by benefit ID."
                        },
                        "description": "Filter by benefit ID."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_LicenseKeyRead_"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized to manage license key.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "License key not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "license_keys",
                "x-speakeasy-name-override": "list"
            }
        },
        "/v1/license-keys/{id}": {
            "get": {
                "tags": [
                    "license_keys"
                ],
                "summary": "Get License Key",
                "description": "Get a license key.",
                "operationId": "get",
                "security": [
                    {
                        "oidc": [
                            "license_keys:read",
                            "license_keys:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LicenseKeyWithActivations"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized to manage license key.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "License key not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "license_keys",
                "x-speakeasy-name-override": "get"
            },
            "patch": {
                "tags": [
                    "license_keys"
                ],
                "summary": "Update License Key",
                "description": "Update a license key.",
                "operationId": "update",
                "security": [
                    {
                        "oidc": [
                            "license_keys:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LicenseKeyUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LicenseKeyRead"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized to manage license key.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "License key not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "license_keys",
                "x-speakeasy-name-override": "update"
            }
        },
        "/v1/license-keys/{id}/activations/{activation_id}": {
            "get": {
                "tags": [
                    "license_keys"
                ],
                "summary": "Get Activation",
                "description": "Get a license key activation.",
                "operationId": "get_activation",
                "security": [
                    {
                        "oidc": [
                            "license_keys:read",
                            "license_keys:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "Id"
                        }
                    },
                    {
                        "name": "activation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "Activation Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LicenseKeyActivationRead"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized to manage license key.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "License key not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "license_keys",
                "x-speakeasy-name-override": "get_activation"
            }
        },
        "/v1/checkout-links/": {
            "get": {
                "tags": [
                    "checkout-links"
                ],
                "summary": "List Checkout Links",
                "description": "List checkout links.",
                "operationId": "list",
                "security": [
                    {
                        "oidc": [
                            "checkout_links:read",
                            "checkout_links:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The organization ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/organizations",
                                        "resourceName": "Organization",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The organization ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/organizations",
                                            "resourceName": "Organization",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "OrganizationID Filter",
                            "description": "Filter by organization ID."
                        },
                        "description": "Filter by organization ID."
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The product ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/products",
                                        "resourceName": "Product",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The product ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/products",
                                            "resourceName": "Product",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "ProductID Filter",
                            "description": "Filter by product ID."
                        },
                        "description": "Filter by product ID."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CheckoutLinkSortProperty"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.",
                            "default": [
                                "created_at"
                            ],
                            "title": "Sorting"
                        },
                        "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_CheckoutLink_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "checkout-links",
                "x-speakeasy-name-override": "list"
            },
            "post": {
                "tags": [
                    "checkout-links"
                ],
                "summary": "Create Checkout Link",
                "description": "Create a checkout link.",
                "operationId": "create",
                "security": [
                    {
                        "oidc": [
                            "checkout_links:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckoutLinkCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Checkout link created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckoutLink"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "checkout-links",
                "x-speakeasy-name-override": "create"
            }
        },
        "/v1/checkout-links/{id}": {
            "get": {
                "tags": [
                    "checkout-links"
                ],
                "summary": "Get Checkout Link",
                "description": "Get a checkout link by ID.",
                "operationId": "get",
                "security": [
                    {
                        "oidc": [
                            "checkout_links:read",
                            "checkout_links:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The checkout link ID.",
                            "title": "Id"
                        },
                        "description": "The checkout link ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckoutLink"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Checkout link not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "checkout-links",
                "x-speakeasy-name-override": "get"
            },
            "patch": {
                "tags": [
                    "checkout-links"
                ],
                "summary": "Update Checkout Link",
                "description": "Update a checkout link.",
                "operationId": "update",
                "security": [
                    {
                        "oidc": [
                            "checkout_links:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The checkout link ID.",
                            "title": "Id"
                        },
                        "description": "The checkout link ID."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckoutLinkUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Checkout link updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckoutLink"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Checkout link not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "checkout-links",
                "x-speakeasy-name-override": "update"
            },
            "delete": {
                "tags": [
                    "checkout-links"
                ],
                "summary": "Delete Checkout Link",
                "description": "Delete a checkout link.",
                "operationId": "delete",
                "security": [
                    {
                        "oidc": [
                            "checkout_links:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The checkout link ID.",
                            "title": "Id"
                        },
                        "description": "The checkout link ID."
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Checkout link deleted."
                    },
                    "404": {
                        "description": "Checkout link not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "checkout-links",
                "x-speakeasy-name-override": "delete"
            }
        },
        "/v1/storefronts/{slug}": {
            "get": {
                "tags": [
                    "storefronts"
                ],
                "summary": "Get Organization Storefront",
                "description": "Get an organization storefront by slug.",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Slug"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Storefront"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-speakeasy-group": "storefronts",
                "x-speakeasy-name-override": "get",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/custom-fields/": {
            "get": {
                "tags": [
                    "custom-fields"
                ],
                "summary": "List Custom Fields",
                "description": "List custom fields.",
                "operationId": "list",
                "security": [
                    {
                        "oidc": [
                            "custom_fields:read",
                            "custom_fields:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The organization ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/organizations",
                                        "resourceName": "Organization",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The organization ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/organizations",
                                            "resourceName": "Organization",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "OrganizationID Filter",
                            "description": "Filter by organization ID."
                        },
                        "description": "Filter by organization ID."
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by custom field name or slug.",
                            "title": "Query"
                        },
                        "description": "Filter by custom field name or slug."
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/CustomFieldType"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomFieldType"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "CustomFieldType Filter",
                            "description": "Filter by custom field type."
                        },
                        "description": "Filter by custom field type."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomFieldSortProperty"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.",
                            "default": [
                                "slug"
                            ],
                            "title": "Sorting"
                        },
                        "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_CustomField_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "custom-fields",
                "x-speakeasy-name-override": "list"
            },
            "post": {
                "tags": [
                    "custom-fields"
                ],
                "summary": "Create Custom Field",
                "description": "Create a custom field.",
                "operationId": "create",
                "security": [
                    {
                        "oidc": [
                            "custom_fields:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomFieldCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Custom field created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomField",
                                    "title": "CustomField"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "custom-fields",
                "x-speakeasy-name-override": "create"
            }
        },
        "/v1/custom-fields/{id}": {
            "get": {
                "tags": [
                    "custom-fields"
                ],
                "summary": "Get Custom Field",
                "description": "Get a custom field by ID.",
                "operationId": "get",
                "security": [
                    {
                        "oidc": [
                            "custom_fields:read",
                            "custom_fields:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The custom field ID.",
                            "title": "Id"
                        },
                        "description": "The custom field ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomField",
                                    "title": "CustomField"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Custom field not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "custom-fields",
                "x-speakeasy-name-override": "get"
            },
            "patch": {
                "tags": [
                    "custom-fields"
                ],
                "summary": "Update Custom Field",
                "description": "Update a custom field.",
                "operationId": "update",
                "security": [
                    {
                        "oidc": [
                            "custom_fields:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The custom field ID.",
                            "title": "Id"
                        },
                        "description": "The custom field ID."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomFieldUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Custom field updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomField",
                                    "title": "CustomField"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Custom field not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "custom-fields",
                "x-speakeasy-name-override": "update"
            },
            "delete": {
                "tags": [
                    "custom-fields"
                ],
                "summary": "Delete Custom Field",
                "description": "Delete a custom field.",
                "operationId": "delete",
                "security": [
                    {
                        "oidc": [
                            "custom_fields:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The custom field ID.",
                            "title": "Id"
                        },
                        "description": "The custom field ID."
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Custom field deleted."
                    },
                    "404": {
                        "description": "Custom field not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "custom-fields",
                "x-speakeasy-name-override": "delete"
            }
        },
        "/v1/embed/product/{id}": {
            "get": {
                "tags": [
                    "embeds"
                ],
                "summary": "Product Embed",
                "description": "Get product card.",
                "operationId": "get_product",
                "security": [
                    {
                        "oidc": []
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The product ID.",
                            "x-polar-selector-widget": {
                                "resourceRoot": "/v1/products",
                                "resourceName": "Product",
                                "displayProperty": "name"
                            },
                            "title": "Id"
                        }
                    },
                    {
                        "name": "price_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Price Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductEmbed"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "embeds",
                "x-speakeasy-name-override": "get_product",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/discounts/": {
            "get": {
                "tags": [
                    "discounts"
                ],
                "summary": "List Discounts",
                "description": "List discounts.",
                "operationId": "list",
                "security": [
                    {
                        "oidc": [
                            "discounts:read",
                            "discounts:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The organization ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/organizations",
                                        "resourceName": "Organization",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The organization ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/organizations",
                                            "resourceName": "Organization",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "OrganizationID Filter",
                            "description": "Filter by organization ID."
                        },
                        "description": "Filter by organization ID."
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by name.",
                            "title": "Query"
                        },
                        "description": "Filter by name."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DiscountSortProperty"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.",
                            "default": [
                                "-created_at"
                            ],
                            "title": "Sorting"
                        },
                        "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_Discount_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "discounts",
                "x-speakeasy-name-override": "list"
            },
            "post": {
                "tags": [
                    "discounts"
                ],
                "summary": "Create Discount",
                "description": "Create a discount.",
                "operationId": "create",
                "security": [
                    {
                        "oidc": [
                            "discounts:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DiscountCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Discount created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Discount",
                                    "title": "Discount"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "discounts",
                "x-speakeasy-name-override": "create"
            }
        },
        "/v1/discounts/{id}": {
            "get": {
                "tags": [
                    "discounts"
                ],
                "summary": "Get Discount",
                "description": "Get a discount by ID.",
                "operationId": "get",
                "security": [
                    {
                        "oidc": [
                            "discounts:read",
                            "discounts:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The discount ID.",
                            "title": "Id"
                        },
                        "description": "The discount ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Discount",
                                    "title": "Discount"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Discount not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "discounts",
                "x-speakeasy-name-override": "get"
            },
            "patch": {
                "tags": [
                    "discounts"
                ],
                "summary": "Update Discount",
                "description": "Update a discount.",
                "operationId": "update",
                "security": [
                    {
                        "oidc": [
                            "discounts:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The discount ID.",
                            "title": "Id"
                        },
                        "description": "The discount ID."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DiscountUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Discount updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Discount",
                                    "title": "Discount"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Discount not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "discounts",
                "x-speakeasy-name-override": "update"
            },
            "delete": {
                "tags": [
                    "discounts"
                ],
                "summary": "Delete Discount",
                "description": "Delete a discount.",
                "operationId": "delete",
                "security": [
                    {
                        "oidc": [
                            "discounts:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The discount ID.",
                            "title": "Id"
                        },
                        "description": "The discount ID."
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Discount deleted."
                    },
                    "404": {
                        "description": "Discount not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "discounts",
                "x-speakeasy-name-override": "delete"
            }
        },
        "/v1/customers/": {
            "get": {
                "tags": [
                    "customers"
                ],
                "summary": "List Customers",
                "description": "List customers.",
                "operationId": "list",
                "security": [
                    {
                        "oidc": [
                            "customers:read",
                            "customers:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The organization ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/organizations",
                                        "resourceName": "Organization",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The organization ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/organizations",
                                            "resourceName": "Organization",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "OrganizationID Filter",
                            "description": "Filter by organization ID."
                        },
                        "description": "Filter by organization ID."
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by name or email.",
                            "title": "Query"
                        },
                        "description": "Filter by name or email."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomerSortProperty"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.",
                            "default": [
                                "-created_at"
                            ],
                            "title": "Sorting"
                        },
                        "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_Customer_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "customers",
                "x-speakeasy-name-override": "list"
            },
            "post": {
                "tags": [
                    "customers"
                ],
                "summary": "Create Customer",
                "description": "Create a customer.",
                "operationId": "create",
                "security": [
                    {
                        "oidc": [
                            "customers:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Customer created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "customers",
                "x-speakeasy-name-override": "create"
            }
        },
        "/v1/customers/{id}": {
            "get": {
                "tags": [
                    "customers"
                ],
                "summary": "Get Customer",
                "description": "Get a customer by ID.",
                "operationId": "get",
                "security": [
                    {
                        "oidc": [
                            "customers:read",
                            "customers:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The customer ID.",
                            "title": "Id"
                        },
                        "description": "The customer ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "customers",
                "x-speakeasy-name-override": "get"
            },
            "patch": {
                "tags": [
                    "customers"
                ],
                "summary": "Update Customer",
                "description": "Update a customer.",
                "operationId": "update",
                "security": [
                    {
                        "oidc": [
                            "customers:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The customer ID.",
                            "title": "Id"
                        },
                        "description": "The customer ID."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Customer updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "customers",
                "x-speakeasy-name-override": "update"
            },
            "delete": {
                "tags": [
                    "customers"
                ],
                "summary": "Delete Customer",
                "description": "Delete a customer.\n\nImmediately cancels any active subscriptions and revokes any active benefits.",
                "operationId": "delete",
                "security": [
                    {
                        "oidc": [
                            "customers:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The customer ID.",
                            "title": "Id"
                        },
                        "description": "The customer ID."
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Customer deleted."
                    },
                    "404": {
                        "description": "Customer not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Organization",
                    "User"
                ],
                "x-speakeasy-group": "customers",
                "x-speakeasy-name-override": "delete"
            }
        },
        "/v1/customer-portal/benefit-grants/": {
            "get": {
                "tags": [
                    "customer_portal.benefit-grants"
                ],
                "summary": "List Benefit Grants",
                "description": "List benefits grants of the authenticated customer or user.",
                "operationId": "list",
                "security": [
                    {
                        "oidc": [
                            "customer_portal:read",
                            "customer_portal:write"
                        ]
                    },
                    {
                        "pat": []
                    },
                    {
                        "customer_session": []
                    }
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/BenefitType"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BenefitType"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "BenefitType Filter",
                            "description": "Filter by benefit type."
                        },
                        "description": "Filter by benefit type."
                    },
                    {
                        "name": "benefit_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "BenefitID Filter",
                            "description": "Filter by benefit ID."
                        },
                        "description": "Filter by benefit ID."
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The organization ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/organizations",
                                        "resourceName": "Organization",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The organization ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/organizations",
                                            "resourceName": "Organization",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "OrganizationID Filter",
                            "description": "Filter by organization ID."
                        },
                        "description": "Filter by organization ID."
                    },
                    {
                        "name": "checkout_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "CheckoutID Filter",
                            "description": "Filter by checkout ID."
                        },
                        "description": "Filter by checkout ID."
                    },
                    {
                        "name": "order_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "OrderID Filter",
                            "description": "Filter by order ID."
                        },
                        "description": "Filter by order ID."
                    },
                    {
                        "name": "subscription_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "SubscriptionID Filter",
                            "description": "Filter by subscription ID."
                        },
                        "description": "Filter by subscription ID."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomerBenefitGrantSortProperty"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.",
                            "default": [
                                "-granted_at"
                            ],
                            "title": "Sorting"
                        },
                        "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_CustomerBenefitGrant_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Customer",
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "customer_portal.benefit-grants",
                "x-speakeasy-name-override": "list"
            }
        },
        "/v1/customer-portal/benefit-grants/{id}": {
            "get": {
                "tags": [
                    "customer_portal.benefit-grants"
                ],
                "summary": "Get Benefit Grant",
                "description": "Get a benefit grant by ID for the authenticated customer or user.",
                "operationId": "get",
                "security": [
                    {
                        "oidc": [
                            "customer_portal:read",
                            "customer_portal:write"
                        ]
                    },
                    {
                        "pat": []
                    },
                    {
                        "customer_session": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The benefit grant ID.",
                            "title": "Id"
                        },
                        "description": "The benefit grant ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerBenefitGrant",
                                    "title": "CustomerBenefitGrant"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Benefit grant not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Customer",
                    "User"
                ],
                "x-speakeasy-group": "customer_portal.benefit-grants",
                "x-speakeasy-name-override": "get"
            },
            "patch": {
                "tags": [
                    "customer_portal.benefit-grants"
                ],
                "summary": "Update Benefit Grant",
                "description": "Update a benefit grant for the authenticated customer or user.",
                "operationId": "update",
                "security": [
                    {
                        "oidc": [
                            "customer_portal:write"
                        ]
                    },
                    {
                        "pat": []
                    },
                    {
                        "customer_session": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The benefit grant ID.",
                            "title": "Id"
                        },
                        "description": "The benefit grant ID."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerBenefitGrantUpdate",
                                "title": "CustomerBenefitGrantUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Benefit grant updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerBenefitGrant",
                                    "title": "CustomerBenefitGrant"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The benefit grant is revoked and cannot be updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotPermitted"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Benefit grant not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Customer",
                    "User"
                ],
                "x-speakeasy-group": "customer_portal.benefit-grants",
                "x-speakeasy-name-override": "update"
            }
        },
        "/v1/customer-portal/customers/{id}": {
            "get": {
                "tags": [
                    "customer_portal.customers"
                ],
                "summary": "Get Customer",
                "description": "Get a customer by ID for the authenticated customer or user.",
                "operationId": "get",
                "security": [
                    {
                        "oidc": [
                            "customer_portal:read",
                            "customer_portal:write"
                        ]
                    },
                    {
                        "pat": []
                    },
                    {
                        "customer_session": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The customer ID.",
                            "title": "Id"
                        },
                        "description": "The customer ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerPortalCustomer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Customer",
                    "User"
                ],
                "x-speakeasy-group": "customer_portal.customers",
                "x-speakeasy-name-override": "get"
            }
        },
        "/v1/customer-portal/customer-session/request": {
            "post": {
                "tags": [
                    "customer_portal.customer-session"
                ],
                "summary": "Customer Portal.Customer Session.Request",
                "operationId": "customer_portal.customer_session.request",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerSessionCodeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-speakeasy-group": "customer_portal.customer-session",
                "x-speakeasy-name-override": "request",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/customer-portal/customer-session/authenticate": {
            "post": {
                "tags": [
                    "customer_portal.customer-session"
                ],
                "summary": "Customer Portal.Customer Session.Authenticate",
                "operationId": "customer_portal.customer_session.authenticate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerSessionCodeAuthenticateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerSessionCodeAuthenticateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-speakeasy-group": "customer_portal.customer-session",
                "x-speakeasy-name-override": "authenticate",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/customer-portal/downloadables/": {
            "get": {
                "tags": [
                    "customer_portal.downloadables"
                ],
                "summary": "List Downloadables",
                "operationId": "list",
                "security": [
                    {
                        "oidc": [
                            "customer_portal:read",
                            "customer_portal:write"
                        ]
                    },
                    {
                        "pat": []
                    },
                    {
                        "customer_session": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The organization ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/organizations",
                                        "resourceName": "Organization",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The organization ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/organizations",
                                            "resourceName": "Organization",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "OrganizationID Filter",
                            "description": "Filter by organization ID."
                        },
                        "description": "Filter by organization ID."
                    },
                    {
                        "name": "benefit_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The benefit ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/benefits",
                                        "resourceName": "Benefit",
                                        "displayProperty": "description"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The benefit ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/benefits",
                                            "resourceName": "Benefit",
                                            "displayProperty": "description"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "BenefitID Filter",
                            "description": "Filter by benefit ID."
                        },
                        "description": "Filter by benefit ID."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_DownloadableRead_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Customer",
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "customer_portal.downloadables",
                "x-speakeasy-name-override": "list"
            }
        },
        "/v1/customer-portal/downloadables/{token}": {
            "get": {
                "tags": [
                    "customer_portal.downloadables"
                ],
                "summary": "Get Downloadable",
                "operationId": "customer_portal.downloadables.get",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "302": {
                        "description": "Redirected to download"
                    },
                    "400": {
                        "description": "Invalid signature"
                    },
                    "404": {
                        "description": "Downloadable not found"
                    },
                    "410": {
                        "description": "Expired signature"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-speakeasy-group": "customer_portal.downloadables",
                "x-speakeasy-name-override": "get"
            }
        },
        "/v1/customer-portal/license-keys/": {
            "get": {
                "tags": [
                    "customer_portal.license_keys"
                ],
                "summary": "List License Keys",
                "operationId": "list",
                "security": [
                    {
                        "oidc": [
                            "customer_portal:read",
                            "customer_portal:write"
                        ]
                    },
                    {
                        "pat": []
                    },
                    {
                        "customer_session": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The organization ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/organizations",
                                        "resourceName": "Organization",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The organization ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/organizations",
                                            "resourceName": "Organization",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "OrganizationID Filter",
                            "description": "Filter by organization ID."
                        },
                        "description": "Filter by organization ID."
                    },
                    {
                        "name": "benefit_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The benefit ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/benefits",
                                        "resourceName": "Benefit",
                                        "displayProperty": "description"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by a specific benefit",
                            "title": "Benefit Id"
                        },
                        "description": "Filter by a specific benefit"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_LicenseKeyRead_"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized to manage license key.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "License key not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Customer",
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "customer_portal.license_keys",
                "x-speakeasy-name-override": "list"
            }
        },
        "/v1/customer-portal/license-keys/{id}": {
            "get": {
                "tags": [
                    "customer_portal.license_keys"
                ],
                "summary": "Get License Key",
                "description": "Get a license key.",
                "operationId": "get",
                "security": [
                    {
                        "oidc": [
                            "customer_portal:read",
                            "customer_portal:write"
                        ]
                    },
                    {
                        "pat": []
                    },
                    {
                        "customer_session": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LicenseKeyWithActivations"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "License key not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Customer",
                    "User"
                ],
                "x-speakeasy-group": "customer_portal.license_keys",
                "x-speakeasy-name-override": "get"
            }
        },
        "/v1/customer-portal/license-keys/validate": {
            "post": {
                "tags": [
                    "customer_portal.license_keys"
                ],
                "summary": "Validate License Key",
                "description": "Validate a license key.",
                "operationId": "validate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LicenseKeyValidate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidatedLicenseKey"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "License key not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-speakeasy-group": "customer_portal.license_keys",
                "x-speakeasy-name-override": "validate"
            }
        },
        "/v1/customer-portal/license-keys/activate": {
            "post": {
                "tags": [
                    "customer_portal.license_keys"
                ],
                "summary": "Activate License Key",
                "description": "Activate a license key instance.",
                "operationId": "activate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LicenseKeyActivate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LicenseKeyActivationRead"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "License key activation not required or permitted (limit reached).",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotPermitted"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "License key not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-speakeasy-group": "customer_portal.license_keys",
                "x-speakeasy-name-override": "activate"
            }
        },
        "/v1/customer-portal/license-keys/deactivate": {
            "post": {
                "tags": [
                    "customer_portal.license_keys"
                ],
                "summary": "Deactivate License Key",
                "description": "Deactivate a license key instance.",
                "operationId": "deactivate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LicenseKeyDeactivate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "License key activation deactivated."
                    },
                    "404": {
                        "description": "License key not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-speakeasy-group": "customer_portal.license_keys",
                "x-speakeasy-name-override": "deactivate"
            }
        },
        "/v1/customer-portal/oauth-accounts/authorize": {
            "get": {
                "tags": [
                    "customer_portal.oauth-accounts"
                ],
                "summary": "Customer Portal.Oauth Accounts.Authorize",
                "operationId": "customer_portal.oauth_accounts.authorize",
                "security": [
                    {
                        "oidc": [
                            "customer_portal:write"
                        ]
                    },
                    {
                        "pat": []
                    },
                    {
                        "customer_session": []
                    }
                ],
                "parameters": [
                    {
                        "name": "platform",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/CustomerOAuthPlatform"
                        }
                    },
                    {
                        "name": "customer_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Customer Id"
                        }
                    },
                    {
                        "name": "return_to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Return To"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizeResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Customer",
                    "User"
                ],
                "x-speakeasy-group": "customer_portal.oauth-accounts",
                "x-speakeasy-name-override": "authorize",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/customer-portal/oauth-accounts/callback": {
            "get": {
                "tags": [
                    "customer_portal.oauth-accounts"
                ],
                "summary": "Customer Portal.Oauth Accounts.Callback",
                "operationId": "customer_portal.oauth_accounts.callback",
                "security": [
                    {
                        "oidc": [
                            "customer_portal:write"
                        ]
                    },
                    {
                        "pat": []
                    }
                ],
                "parameters": [
                    {
                        "name": "state",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "State"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Code"
                        }
                    },
                    {
                        "name": "error",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Error"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Anonymous",
                    "User"
                ],
                "x-speakeasy-group": "customer_portal.oauth-accounts",
                "x-speakeasy-name-override": "callback",
                "x-speakeasy-ignore": true
            }
        },
        "/v1/customer-portal/orders/": {
            "get": {
                "tags": [
                    "customer_portal.orders"
                ],
                "summary": "List Orders",
                "description": "List orders of the authenticated customer or user.",
                "operationId": "list",
                "security": [
                    {
                        "oidc": [
                            "customer_portal:read",
                            "customer_portal:write"
                        ]
                    },
                    {
                        "pat": []
                    },
                    {
                        "customer_session": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The organization ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/organizations",
                                        "resourceName": "Organization",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The organization ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/organizations",
                                            "resourceName": "Organization",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "OrganizationID Filter",
                            "description": "Filter by organization ID."
                        },
                        "description": "Filter by organization ID."
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The product ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/products",
                                        "resourceName": "Product",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The product ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/products",
                                            "resourceName": "Product",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "ProductID Filter",
                            "description": "Filter by product ID."
                        },
                        "description": "Filter by product ID."
                    },
                    {
                        "name": "product_price_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/ProductPriceType"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductPriceType"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "ProductPriceType Filter",
                            "description": "Filter by product price type. `recurring` will return orders corresponding to subscriptions creations or renewals. `one_time` will return orders corresponding to one-time purchases."
                        },
                        "description": "Filter by product price type. `recurring` will return orders corresponding to subscriptions creations or renewals. `one_time` will return orders corresponding to one-time purchases."
                    },
                    {
                        "name": "subscription_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "SubscriptionID Filter",
                            "description": "Filter by subscription ID."
                        },
                        "description": "Filter by subscription ID."
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Search by product or organization name.",
                            "title": "Query"
                        },
                        "description": "Search by product or organization name."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomerOrderSortProperty"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.",
                            "default": [
                                "-created_at"
                            ],
                            "title": "Sorting"
                        },
                        "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_CustomerOrder_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Customer",
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "customer_portal.orders",
                "x-speakeasy-name-override": "list"
            }
        },
        "/v1/customer-portal/orders/{id}": {
            "get": {
                "tags": [
                    "customer_portal.orders"
                ],
                "summary": "Get Order",
                "description": "Get an order by ID for the authenticated customer or user.",
                "operationId": "get",
                "security": [
                    {
                        "oidc": [
                            "customer_portal:read",
                            "customer_portal:write"
                        ]
                    },
                    {
                        "pat": []
                    },
                    {
                        "customer_session": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The order ID.",
                            "title": "Id"
                        },
                        "description": "The order ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerOrder"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Customer",
                    "User"
                ],
                "x-speakeasy-group": "customer_portal.orders",
                "x-speakeasy-name-override": "get"
            }
        },
        "/v1/customer-portal/orders/{id}/invoice": {
            "get": {
                "tags": [
                    "customer_portal.orders"
                ],
                "summary": "Get Order Invoice",
                "description": "Get an order's invoice data.",
                "operationId": "invoice",
                "security": [
                    {
                        "oidc": [
                            "customer_portal:read",
                            "customer_portal:write"
                        ]
                    },
                    {
                        "pat": []
                    },
                    {
                        "customer_session": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The order ID.",
                            "title": "Id"
                        },
                        "description": "The order ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerOrderInvoice"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Customer",
                    "User"
                ],
                "x-speakeasy-group": "customer_portal.orders",
                "x-speakeasy-name-override": "invoice"
            }
        },
        "/v1/customer-portal/organizations/{slug}": {
            "get": {
                "tags": [
                    "customer_portal.organizations"
                ],
                "summary": "Get Organization",
                "description": "Get a customer portal's organization by slug.",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "The organization slug.",
                            "title": "Slug"
                        },
                        "description": "The organization slug."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-speakeasy-group": "customer_portal.organizations",
                "x-speakeasy-name-override": "get"
            }
        },
        "/v1/customer-portal/subscriptions/": {
            "get": {
                "tags": [
                    "customer_portal.subscriptions"
                ],
                "summary": "List Subscriptions",
                "description": "List subscriptions of the authenticated customer or user.",
                "operationId": "list",
                "security": [
                    {
                        "oidc": [
                            "customer_portal:read",
                            "customer_portal:write"
                        ]
                    },
                    {
                        "pat": []
                    },
                    {
                        "customer_session": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The organization ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/organizations",
                                        "resourceName": "Organization",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The organization ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/organizations",
                                            "resourceName": "Organization",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "OrganizationID Filter",
                            "description": "Filter by organization ID."
                        },
                        "description": "Filter by organization ID."
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid4",
                                    "description": "The product ID.",
                                    "x-polar-selector-widget": {
                                        "resourceRoot": "/v1/products",
                                        "resourceName": "Product",
                                        "displayProperty": "name"
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid4",
                                        "description": "The product ID.",
                                        "x-polar-selector-widget": {
                                            "resourceRoot": "/v1/products",
                                            "resourceName": "Product",
                                            "displayProperty": "name"
                                        }
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "ProductID Filter",
                            "description": "Filter by product ID."
                        },
                        "description": "Filter by product ID."
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by active or cancelled subscription.",
                            "title": "Active"
                        },
                        "description": "Filter by active or cancelled subscription."
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Search by product or organization name.",
                            "title": "Query"
                        },
                        "description": "Search by product or organization name."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Page number, defaults to 1.",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number, defaults to 1."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "Size of a page, defaults to 10. Maximum is 100.",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Size of a page, defaults to 10. Maximum is 100."
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomerSubscriptionSortProperty"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.",
                            "default": [
                                "-started_at"
                            ],
                            "title": "Sorting"
                        },
                        "description": "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResource_CustomerSubscription_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Customer",
                    "User"
                ],
                "x-speakeasy-pagination": {
                    "type": "offsetLimit",
                    "inputs": [
                        {
                            "name": "page",
                            "in": "parameters",
                            "type": "page"
                        },
                        {
                            "name": "limit",
                            "in": "parameters",
                            "type": "limit"
                        }
                    ],
                    "outputs": {
                        "results": "$.items",
                        "numPages": "$.pagination.max_page"
                    }
                },
                "x-speakeasy-group": "customer_portal.subscriptions",
                "x-speakeasy-name-override": "list"
            }
        },
        "/v1/customer-portal/subscriptions/{id}": {
            "get": {
                "tags": [
                    "customer_portal.subscriptions"
                ],
                "summary": "Get Subscription",
                "description": "Get a subscription for the authenticated customer or user.",
                "operationId": "get",
                "security": [
                    {
                        "oidc": [
                            "customer_portal:read",
                            "customer_portal:write"
                        ]
                    },
                    {
                        "pat": []
                    },
                    {
                        "customer_session": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The subscription ID.",
                            "title": "Id"
                        },
                        "description": "The subscription ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerSubscription"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subscription not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Customer",
                    "User"
                ],
                "x-speakeasy-group": "customer_portal.subscriptions",
                "x-speakeasy-name-override": "get"
            },
            "patch": {
                "tags": [
                    "customer_portal.subscriptions"
                ],
                "summary": "Update Subscription",
                "description": "Update a subscription of the authenticated customer or user.",
                "operationId": "update",
                "security": [
                    {
                        "oidc": [
                            "customer_portal:write"
                        ]
                    },
                    {
                        "pat": []
                    },
                    {
                        "customer_session": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The subscription ID.",
                            "title": "Id"
                        },
                        "description": "The subscription ID."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerSubscriptionUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Subscription updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerSubscription"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subscription not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Customer",
                    "User"
                ],
                "x-speakeasy-group": "customer_portal.subscriptions",
                "x-speakeasy-name-override": "update"
            },
            "delete": {
                "tags": [
                    "customer_portal.subscriptions"
                ],
                "summary": "Cancel Subscription",
                "description": "Cancel a subscription of the authenticated customer or user.",
                "operationId": "cancel",
                "security": [
                    {
                        "oidc": [
                            "customer_portal:write"
                        ]
                    },
                    {
                        "pat": []
                    },
                    {
                        "customer_session": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The subscription ID.",
                            "title": "Id"
                        },
                        "description": "The subscription ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscription canceled.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerSubscription"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "This subscription is already canceled or will be at the end of the period.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AlreadyCanceledSubscription"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subscription not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-polar-allowed-subjects": [
                    "Customer",
                    "User"
                ],
                "x-speakeasy-group": "customer_portal.subscriptions",
                "x-speakeasy-name-override": "cancel"
            }
        }
    },
    "components": {
        "schemas": {
            "Account": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "account_type": {
                        "$ref": "#/components/schemas/AccountType"
                    },
                    "status": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "stripe_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Stripe Id"
                    },
                    "open_collective_slug": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Open Collective Slug"
                    },
                    "is_details_submitted": {
                        "type": "boolean",
                        "title": "Is Details Submitted"
                    },
                    "is_charges_enabled": {
                        "type": "boolean",
                        "title": "Is Charges Enabled"
                    },
                    "is_payouts_enabled": {
                        "type": "boolean",
                        "title": "Is Payouts Enabled"
                    },
                    "country": {
                        "type": "string",
                        "maxLength": 2,
                        "minLength": 2,
                        "title": "Country"
                    },
                    "users": {
                        "items": {
                            "$ref": "#/components/schemas/UserBase"
                        },
                        "type": "array",
                        "title": "Users"
                    },
                    "organizations": {
                        "items": {
                            "$ref": "#/components/schemas/Organization"
                        },
                        "type": "array",
                        "title": "Organizations"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "account_type",
                    "status",
                    "stripe_id",
                    "open_collective_slug",
                    "is_details_submitted",
                    "is_charges_enabled",
                    "is_payouts_enabled",
                    "country",
                    "users",
                    "organizations"
                ],
                "title": "Account"
            },
            "AccountCreate": {
                "properties": {
                    "account_type": {
                        "$ref": "#/components/schemas/AccountType"
                    },
                    "open_collective_slug": {
                        "anyOf": [
                            {
                                "type": "string",
                                "minLength": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Open Collective Slug"
                    },
                    "country": {
                        "type": "string",
                        "maxLength": 2,
                        "minLength": 2,
                        "title": "Country",
                        "description": "Two letter uppercase country code"
                    }
                },
                "type": "object",
                "required": [
                    "account_type",
                    "country"
                ],
                "title": "AccountCreate"
            },
            "AccountLink": {
                "properties": {
                    "url": {
                        "type": "string",
                        "title": "Url"
                    }
                },
                "type": "object",
                "required": [
                    "url"
                ],
                "title": "AccountLink"
            },
            "AccountType": {
                "type": "string",
                "enum": [
                    "stripe",
                    "open_collective"
                ],
                "title": "AccountType"
            },
            "Address": {
                "properties": {
                    "line1": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Line1"
                    },
                    "line2": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Line2"
                    },
                    "postal_code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Postal Code"
                    },
                    "city": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "City"
                    },
                    "state": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "State"
                    },
                    "country": {
                        "type": "string",
                        "pattern": "^\\w{2}$",
                        "title": "Country"
                    }
                },
                "type": "object",
                "required": [
                    "country"
                ],
                "title": "Address"
            },
            "AdvertisementCampaign": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "image_url": {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri",
                        "title": "Image Url"
                    },
                    "image_url_dark": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2083,
                                "minLength": 1,
                                "format": "uri"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Image Url Dark"
                    },
                    "text": {
                        "type": "string",
                        "title": "Text"
                    },
                    "link_url": {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri",
                        "title": "Link Url"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "image_url",
                    "image_url_dark",
                    "text",
                    "link_url"
                ],
                "title": "AdvertisementCampaign"
            },
            "AdvertisementCampaignListResource": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/AdvertisementCampaign"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    },
                    "dimensions": {
                        "prefixItems": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "integer"
                            }
                        ],
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "maxItems": 2,
                        "minItems": 2,
                        "title": "Dimensions",
                        "description": "The dimensions (width, height) in pixels of the advertisement images."
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination",
                    "dimensions"
                ],
                "title": "AdvertisementCampaignListResource"
            },
            "AdvertisementSortProperty": {
                "type": "string",
                "enum": [
                    "created_at",
                    "-created_at",
                    "granted_at",
                    "-granted_at",
                    "views",
                    "-views",
                    "clicks",
                    "-clicks"
                ],
                "title": "AdvertisementSortProperty"
            },
            "AlreadyCanceledSubscription": {
                "properties": {
                    "error": {
                        "type": "string",
                        "enum": [
                            "AlreadyCanceledSubscription"
                        ],
                        "const": "AlreadyCanceledSubscription",
                        "title": "Error"
                    },
                    "detail": {
                        "type": "string",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "required": [
                    "error",
                    "detail"
                ],
                "title": "AlreadyCanceledSubscription"
            },
            "AppPermissionsType": {
                "properties": {
                    "actions": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Actions"
                    },
                    "administration": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Administration"
                    },
                    "checks": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Checks"
                    },
                    "codespaces": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Codespaces"
                    },
                    "contents": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Contents"
                    },
                    "dependabot_secrets": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Dependabot Secrets"
                    },
                    "deployments": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Deployments"
                    },
                    "environments": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Environments"
                    },
                    "issues": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Issues"
                    },
                    "metadata": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Metadata"
                    },
                    "packages": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Packages"
                    },
                    "pages": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Pages"
                    },
                    "pull_requests": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Pull Requests"
                    },
                    "repository_custom_properties": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Repository Custom Properties"
                    },
                    "repository_hooks": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Repository Hooks"
                    },
                    "repository_projects": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write",
                            "admin"
                        ],
                        "title": "Repository Projects"
                    },
                    "secret_scanning_alerts": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Secret Scanning Alerts"
                    },
                    "secrets": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Secrets"
                    },
                    "security_events": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Security Events"
                    },
                    "single_file": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Single File"
                    },
                    "statuses": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Statuses"
                    },
                    "vulnerability_alerts": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Vulnerability Alerts"
                    },
                    "workflows": {
                        "type": "string",
                        "enum": [
                            "write"
                        ],
                        "const": "write",
                        "title": "Workflows"
                    },
                    "members": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Members"
                    },
                    "organization_administration": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Organization Administration"
                    },
                    "organization_custom_roles": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Organization Custom Roles"
                    },
                    "organization_custom_org_roles": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Organization Custom Org Roles"
                    },
                    "organization_custom_properties": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write",
                            "admin"
                        ],
                        "title": "Organization Custom Properties"
                    },
                    "organization_copilot_seat_management": {
                        "type": "string",
                        "enum": [
                            "write"
                        ],
                        "const": "write",
                        "title": "Organization Copilot Seat Management"
                    },
                    "organization_announcement_banners": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Organization Announcement Banners"
                    },
                    "organization_events": {
                        "type": "string",
                        "enum": [
                            "read"
                        ],
                        "const": "read",
                        "title": "Organization Events"
                    },
                    "organization_hooks": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Organization Hooks"
                    },
                    "organization_personal_access_tokens": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Organization Personal Access Tokens"
                    },
                    "organization_personal_access_token_requests": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Organization Personal Access Token Requests"
                    },
                    "organization_plan": {
                        "type": "string",
                        "enum": [
                            "read"
                        ],
                        "const": "read",
                        "title": "Organization Plan"
                    },
                    "organization_projects": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write",
                            "admin"
                        ],
                        "title": "Organization Projects"
                    },
                    "organization_packages": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Organization Packages"
                    },
                    "organization_secrets": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Organization Secrets"
                    },
                    "organization_self_hosted_runners": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Organization Self Hosted Runners"
                    },
                    "organization_user_blocking": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Organization User Blocking"
                    },
                    "team_discussions": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Team Discussions"
                    },
                    "email_addresses": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Email Addresses"
                    },
                    "followers": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Followers"
                    },
                    "git_ssh_keys": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Git Ssh Keys"
                    },
                    "gpg_keys": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Gpg Keys"
                    },
                    "interaction_limits": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Interaction Limits"
                    },
                    "profile": {
                        "type": "string",
                        "enum": [
                            "write"
                        ],
                        "const": "write",
                        "title": "Profile"
                    },
                    "starring": {
                        "type": "string",
                        "enum": [
                            "read",
                            "write"
                        ],
                        "title": "Starring"
                    }
                },
                "type": "object",
                "title": "AppPermissionsType",
                "description": "App Permissions\n\nThe permissions granted to the user access token.\n\nExamples:\n    {'contents': 'read', 'issues': 'read', 'deployments': 'write', 'single_file':\n'read'}"
            },
            "Assignee": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "login": {
                        "type": "string",
                        "title": "Login"
                    },
                    "html_url": {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri",
                        "title": "Html Url"
                    },
                    "avatar_url": {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri",
                        "title": "Avatar Url"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "login",
                    "html_url",
                    "avatar_url"
                ],
                "title": "Assignee"
            },
            "AttachedCustomField": {
                "properties": {
                    "custom_field_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Custom Field Id",
                        "description": "ID of the custom field."
                    },
                    "custom_field": {
                        "$ref": "#/components/schemas/CustomField",
                        "title": "CustomField"
                    },
                    "order": {
                        "type": "integer",
                        "title": "Order",
                        "description": "Order of the custom field in the resource."
                    },
                    "required": {
                        "type": "boolean",
                        "title": "Required",
                        "description": "Whether the value is required for this custom field."
                    }
                },
                "type": "object",
                "required": [
                    "custom_field_id",
                    "custom_field",
                    "order",
                    "required"
                ],
                "title": "AttachedCustomField",
                "description": "Schema of a custom field attached to a resource."
            },
            "AttachedCustomFieldCreate": {
                "properties": {
                    "custom_field_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Custom Field Id",
                        "description": "ID of the custom field to attach."
                    },
                    "required": {
                        "type": "boolean",
                        "title": "Required",
                        "description": "Whether the value is required for this custom field."
                    }
                },
                "type": "object",
                "required": [
                    "custom_field_id",
                    "required"
                ],
                "title": "AttachedCustomFieldCreate",
                "description": "Schema to attach a custom field to a resource."
            },
            "Author": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "login": {
                        "type": "string",
                        "title": "Login"
                    },
                    "html_url": {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri",
                        "title": "Html Url"
                    },
                    "avatar_url": {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri",
                        "title": "Avatar Url"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "login",
                    "html_url",
                    "avatar_url"
                ],
                "title": "Author"
            },
            "AuthorizeOrganization": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "slug": {
                        "type": "string",
                        "title": "Slug"
                    },
                    "avatar_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Avatar Url"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "slug",
                    "avatar_url"
                ],
                "title": "AuthorizeOrganization"
            },
            "AuthorizeResponse": {
                "properties": {
                    "url": {
                        "type": "string",
                        "title": "Url"
                    }
                },
                "type": "object",
                "required": [
                    "url"
                ],
                "title": "AuthorizeResponse"
            },
            "AuthorizeResponseOrganization": {
                "properties": {
                    "client": {
                        "$ref": "#/components/schemas/OAuth2ClientPublic"
                    },
                    "sub_type": {
                        "type": "string",
                        "enum": [
                            "organization"
                        ],
                        "const": "organization",
                        "title": "Sub Type"
                    },
                    "sub": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/AuthorizeOrganization"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "scopes": {
                        "items": {
                            "$ref": "#/components/schemas/Scope"
                        },
                        "type": "array",
                        "title": "Scopes"
                    },
                    "organizations": {
                        "items": {
                            "$ref": "#/components/schemas/AuthorizeOrganization"
                        },
                        "type": "array",
                        "title": "Organizations"
                    }
                },
                "type": "object",
                "required": [
                    "client",
                    "sub_type",
                    "sub",
                    "scopes",
                    "organizations"
                ],
                "title": "AuthorizeResponseOrganization"
            },
            "AuthorizeResponseUser": {
                "properties": {
                    "client": {
                        "$ref": "#/components/schemas/OAuth2ClientPublic"
                    },
                    "sub_type": {
                        "type": "string",
                        "enum": [
                            "user"
                        ],
                        "const": "user",
                        "title": "Sub Type"
                    },
                    "sub": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/AuthorizeUser"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "scopes": {
                        "items": {
                            "$ref": "#/components/schemas/Scope"
                        },
                        "type": "array",
                        "title": "Scopes"
                    }
                },
                "type": "object",
                "required": [
                    "client",
                    "sub_type",
                    "sub",
                    "scopes"
                ],
                "title": "AuthorizeResponseUser"
            },
            "AuthorizeUser": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "avatar_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Avatar Url"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "email",
                    "avatar_url"
                ],
                "title": "AuthorizeUser"
            },
            "AvailableScope": {
                "type": "string",
                "enum": [
                    "openid",
                    "profile",
                    "email",
                    "user:read",
                    "organizations:read",
                    "organizations:write",
                    "custom_fields:read",
                    "custom_fields:write",
                    "discounts:read",
                    "discounts:write",
                    "checkout_links:read",
                    "checkout_links:write",
                    "checkouts:read",
                    "checkouts:write",
                    "products:read",
                    "products:write",
                    "benefits:read",
                    "benefits:write",
                    "files:read",
                    "files:write",
                    "subscriptions:read",
                    "subscriptions:write",
                    "customers:read",
                    "customers:write",
                    "orders:read",
                    "metrics:read",
                    "webhooks:read",
                    "webhooks:write",
                    "external_organizations:read",
                    "license_keys:read",
                    "license_keys:write",
                    "repositories:read",
                    "repositories:write",
                    "issues:read",
                    "issues:write",
                    "customer_portal:read",
                    "customer_portal:write"
                ],
                "title": "AvailableScope"
            },
            "BackofficeBadge": {
                "properties": {
                    "org_slug": {
                        "type": "string",
                        "title": "Org Slug"
                    },
                    "repo_slug": {
                        "type": "string",
                        "title": "Repo Slug"
                    },
                    "issue_number": {
                        "type": "integer",
                        "title": "Issue Number"
                    },
                    "action": {
                        "type": "string",
                        "enum": [
                            "embed",
                            "remove"
                        ],
                        "title": "Action"
                    }
                },
                "type": "object",
                "required": [
                    "org_slug",
                    "repo_slug",
                    "issue_number",
                    "action"
                ],
                "title": "BackofficeBadge"
            },
            "BackofficeBadgeResponse": {
                "properties": {
                    "org_slug": {
                        "type": "string",
                        "title": "Org Slug"
                    },
                    "repo_slug": {
                        "type": "string",
                        "title": "Repo Slug"
                    },
                    "issue_number": {
                        "type": "integer",
                        "title": "Issue Number"
                    },
                    "action": {
                        "type": "string",
                        "enum": [
                            "embed",
                            "remove"
                        ],
                        "title": "Action"
                    },
                    "success": {
                        "type": "boolean",
                        "title": "Success"
                    }
                },
                "type": "object",
                "required": [
                    "org_slug",
                    "repo_slug",
                    "issue_number",
                    "action",
                    "success"
                ],
                "title": "BackofficeBadgeResponse"
            },
            "BackofficePledge": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "amount": {
                        "type": "integer",
                        "title": "Amount",
                        "description": "Amount pledged towards the issue"
                    },
                    "currency": {
                        "type": "string",
                        "title": "Currency"
                    },
                    "state": {
                        "$ref": "#/components/schemas/PledgeState",
                        "description": "Current state of the pledge"
                    },
                    "type": {
                        "$ref": "#/components/schemas/PledgeType",
                        "description": "Type of pledge"
                    },
                    "refunded_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Refunded At",
                        "description": "If and when the pledge was refunded to the pledger"
                    },
                    "scheduled_payout_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Scheduled Payout At",
                        "description": "When the payout is scheduled to be made to the maintainers behind the issue. Disputes must be made before this date."
                    },
                    "issue": {
                        "$ref": "#/components/schemas/Issue",
                        "description": "The issue that the pledge was made towards"
                    },
                    "pledger": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Pledger"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "The user or organization that made this pledge"
                    },
                    "hosted_invoice_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Hosted Invoice Url",
                        "description": "URL of invoice for this pledge"
                    },
                    "authed_can_admin_sender": {
                        "type": "boolean",
                        "title": "Authed Can Admin Sender",
                        "description": "If the currently authenticated subject can perform admin actions on behalf of the maker of the peldge",
                        "default": false
                    },
                    "authed_can_admin_received": {
                        "type": "boolean",
                        "title": "Authed Can Admin Received",
                        "description": "If the currently authenticated subject can perform admin actions on behalf of the receiver of the peldge",
                        "default": false
                    },
                    "created_by": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Pledger"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "For pledges made by an organization, or on behalf of an organization. This is the user that made the pledge. Only visible for members of said organization."
                    },
                    "payment_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Payment Id"
                    },
                    "dispute_reason": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Dispute Reason"
                    },
                    "disputed_by_user_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Disputed By User Id"
                    },
                    "disputed_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Disputed At"
                    },
                    "pledger_email": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pledger Email"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "amount",
                    "currency",
                    "state",
                    "type",
                    "issue",
                    "payment_id",
                    "dispute_reason",
                    "disputed_by_user_id",
                    "disputed_at",
                    "pledger_email"
                ],
                "title": "BackofficePledge"
            },
            "BackofficeReward": {
                "properties": {
                    "pledge": {
                        "$ref": "#/components/schemas/Pledge",
                        "description": "The pledge that the reward was split from"
                    },
                    "user": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/User"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "The user that received the reward (if any)"
                    },
                    "organization": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Organization"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "The organization that received the reward (if any)"
                    },
                    "amount": {
                        "$ref": "#/components/schemas/CurrencyAmount"
                    },
                    "state": {
                        "$ref": "#/components/schemas/RewardState"
                    },
                    "paid_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Paid At",
                        "description": "If and when the reward was paid out."
                    },
                    "transfer_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Transfer Id"
                    },
                    "issue_reward_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Issue Reward Id"
                    },
                    "pledge_payment_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pledge Payment Id"
                    },
                    "pledger_email": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pledger Email"
                    }
                },
                "type": "object",
                "required": [
                    "pledge",
                    "amount",
                    "state",
                    "transfer_id",
                    "issue_reward_id",
                    "pledge_payment_id",
                    "pledger_email"
                ],
                "title": "BackofficeReward"
            },
            "Benefit": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/BenefitAds"
                    },
                    {
                        "$ref": "#/components/schemas/BenefitCustom"
                    },
                    {
                        "$ref": "#/components/schemas/BenefitDiscord"
                    },
                    {
                        "$ref": "#/components/schemas/BenefitGitHubRepository"
                    },
                    {
                        "$ref": "#/components/schemas/BenefitDownloadables"
                    },
                    {
                        "$ref": "#/components/schemas/BenefitLicenseKeys"
                    }
                ]
            },
            "BenefitAds": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the benefit."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "ads"
                        ],
                        "const": "ads",
                        "title": "Type"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "The description of the benefit."
                    },
                    "selectable": {
                        "type": "boolean",
                        "title": "Selectable",
                        "description": "Whether the benefit is selectable when creating a product."
                    },
                    "deletable": {
                        "type": "boolean",
                        "title": "Deletable",
                        "description": "Whether the benefit is deletable."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the benefit."
                    },
                    "properties": {
                        "$ref": "#/components/schemas/BenefitAdsProperties"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "type",
                    "description",
                    "selectable",
                    "deletable",
                    "organization_id",
                    "properties"
                ],
                "title": "BenefitAds",
                "description": "A benefit of type `ads`.\n\nUse it so your backers can display ads on your README, website, etc."
            },
            "BenefitAdsCreate": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "ads"
                        ],
                        "const": "ads",
                        "title": "Type"
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 42,
                        "minLength": 3,
                        "title": "Description",
                        "description": "The description of the benefit. Will be displayed on products having this benefit."
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4",
                                "description": "The organization ID.",
                                "x-polar-selector-widget": {
                                    "displayProperty": "name",
                                    "resourceName": "Organization",
                                    "resourceRoot": "/v1/organizations"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the benefit. **Required unless you use an organization token.**"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/BenefitAdsProperties"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "description",
                    "properties"
                ],
                "title": "BenefitAdsCreate"
            },
            "BenefitAdsProperties": {
                "properties": {
                    "image_height": {
                        "type": "integer",
                        "title": "Image Height",
                        "description": "The height of the displayed ad.",
                        "default": 400
                    },
                    "image_width": {
                        "type": "integer",
                        "title": "Image Width",
                        "description": "The width of the displayed ad.",
                        "default": 400
                    }
                },
                "type": "object",
                "title": "BenefitAdsProperties",
                "description": "Properties for a benefit of type `ads`."
            },
            "BenefitAdsSubscriber": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the benefit."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "ads"
                        ],
                        "const": "ads",
                        "title": "Type"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "The description of the benefit."
                    },
                    "selectable": {
                        "type": "boolean",
                        "title": "Selectable",
                        "description": "Whether the benefit is selectable when creating a product."
                    },
                    "deletable": {
                        "type": "boolean",
                        "title": "Deletable",
                        "description": "Whether the benefit is deletable."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the benefit."
                    },
                    "organization": {
                        "$ref": "#/components/schemas/Organization"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/BenefitAdsProperties"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "type",
                    "description",
                    "selectable",
                    "deletable",
                    "organization_id",
                    "organization",
                    "properties"
                ],
                "title": "BenefitAdsSubscriber"
            },
            "BenefitAdsUpdate": {
                "properties": {
                    "description": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 42,
                                "minLength": 3
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "The description of the benefit. Will be displayed on products having this benefit."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "ads"
                        ],
                        "const": "ads",
                        "title": "Type"
                    },
                    "properties": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BenefitAdsProperties"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ],
                "title": "BenefitAdsUpdate"
            },
            "BenefitBase": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the benefit."
                    },
                    "type": {
                        "$ref": "#/components/schemas/BenefitType",
                        "description": "The type of the benefit."
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "The description of the benefit."
                    },
                    "selectable": {
                        "type": "boolean",
                        "title": "Selectable",
                        "description": "Whether the benefit is selectable when creating a product."
                    },
                    "deletable": {
                        "type": "boolean",
                        "title": "Deletable",
                        "description": "Whether the benefit is deletable."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the benefit."
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "type",
                    "description",
                    "selectable",
                    "deletable",
                    "organization_id"
                ],
                "title": "BenefitBase"
            },
            "BenefitCreate": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/BenefitCustomCreate"
                    },
                    {
                        "$ref": "#/components/schemas/BenefitAdsCreate"
                    },
                    {
                        "$ref": "#/components/schemas/BenefitDiscordCreate"
                    },
                    {
                        "$ref": "#/components/schemas/BenefitGitHubRepositoryCreate"
                    },
                    {
                        "$ref": "#/components/schemas/BenefitDownloadablesCreate"
                    },
                    {
                        "$ref": "#/components/schemas/BenefitLicenseKeysCreate"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "ads": "#/components/schemas/BenefitAdsCreate",
                        "custom": "#/components/schemas/BenefitCustomCreate",
                        "discord": "#/components/schemas/BenefitDiscordCreate",
                        "downloadables": "#/components/schemas/BenefitDownloadablesCreate",
                        "github_repository": "#/components/schemas/BenefitGitHubRepositoryCreate",
                        "license_keys": "#/components/schemas/BenefitLicenseKeysCreate"
                    }
                }
            },
            "BenefitCustom": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the benefit."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "custom"
                        ],
                        "const": "custom",
                        "title": "Type"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "The description of the benefit."
                    },
                    "selectable": {
                        "type": "boolean",
                        "title": "Selectable",
                        "description": "Whether the benefit is selectable when creating a product."
                    },
                    "deletable": {
                        "type": "boolean",
                        "title": "Deletable",
                        "description": "Whether the benefit is deletable."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the benefit."
                    },
                    "properties": {
                        "$ref": "#/components/schemas/BenefitCustomProperties"
                    },
                    "is_tax_applicable": {
                        "type": "boolean",
                        "title": "Is Tax Applicable",
                        "description": "Whether the benefit is taxable."
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "type",
                    "description",
                    "selectable",
                    "deletable",
                    "organization_id",
                    "properties",
                    "is_tax_applicable"
                ],
                "title": "BenefitCustom",
                "description": "A benefit of type `custom`.\n\nUse it to grant any kind of benefit that doesn't fit in the other types."
            },
            "BenefitCustomCreate": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "custom"
                        ],
                        "const": "custom",
                        "title": "Type"
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 42,
                        "minLength": 3,
                        "title": "Description",
                        "description": "The description of the benefit. Will be displayed on products having this benefit."
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4",
                                "description": "The organization ID.",
                                "x-polar-selector-widget": {
                                    "displayProperty": "name",
                                    "resourceName": "Organization",
                                    "resourceRoot": "/v1/organizations"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the benefit. **Required unless you use an organization token.**"
                    },
                    "is_tax_applicable": {
                        "type": "boolean",
                        "title": "Is Tax Applicable",
                        "description": "Whether the benefit is taxable."
                    },
                    "properties": {
                        "$ref": "#/components/schemas/BenefitCustomCreateProperties"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "description",
                    "is_tax_applicable",
                    "properties"
                ],
                "title": "BenefitCustomCreate",
                "description": "Schema to create a benefit of type `custom`."
            },
            "BenefitCustomCreateProperties": {
                "properties": {
                    "note": {
                        "anyOf": [
                            {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "description": "Private note to be shared with customers who have this benefit granted."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Note"
                    }
                },
                "type": "object",
                "title": "BenefitCustomCreateProperties",
                "description": "Properties for creating a benefit of type `custom`."
            },
            "BenefitCustomProperties": {
                "properties": {
                    "note": {
                        "anyOf": [
                            {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "description": "Private note to be shared with customers who have this benefit granted."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Note"
                    }
                },
                "type": "object",
                "required": [
                    "note"
                ],
                "title": "BenefitCustomProperties",
                "description": "Properties for a benefit of type `custom`."
            },
            "BenefitCustomSubscriber": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the benefit."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "custom"
                        ],
                        "const": "custom",
                        "title": "Type"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "The description of the benefit."
                    },
                    "selectable": {
                        "type": "boolean",
                        "title": "Selectable",
                        "description": "Whether the benefit is selectable when creating a product."
                    },
                    "deletable": {
                        "type": "boolean",
                        "title": "Deletable",
                        "description": "Whether the benefit is deletable."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the benefit."
                    },
                    "organization": {
                        "$ref": "#/components/schemas/Organization"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/BenefitCustomSubscriberProperties"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "type",
                    "description",
                    "selectable",
                    "deletable",
                    "organization_id",
                    "organization",
                    "properties"
                ],
                "title": "BenefitCustomSubscriber"
            },
            "BenefitCustomSubscriberProperties": {
                "properties": {
                    "note": {
                        "anyOf": [
                            {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "description": "Private note to be shared with customers who have this benefit granted."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Note"
                    }
                },
                "type": "object",
                "required": [
                    "note"
                ],
                "title": "BenefitCustomSubscriberProperties",
                "description": "Properties available to subscribers for a benefit of type `custom`."
            },
            "BenefitCustomUpdate": {
                "properties": {
                    "description": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 42,
                                "minLength": 3
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "The description of the benefit. Will be displayed on products having this benefit."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "custom"
                        ],
                        "const": "custom",
                        "title": "Type"
                    },
                    "properties": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BenefitCustomProperties"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ],
                "title": "BenefitCustomUpdate"
            },
            "BenefitDiscord": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the benefit."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "discord"
                        ],
                        "const": "discord",
                        "title": "Type"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "The description of the benefit."
                    },
                    "selectable": {
                        "type": "boolean",
                        "title": "Selectable",
                        "description": "Whether the benefit is selectable when creating a product."
                    },
                    "deletable": {
                        "type": "boolean",
                        "title": "Deletable",
                        "description": "Whether the benefit is deletable."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the benefit."
                    },
                    "properties": {
                        "$ref": "#/components/schemas/BenefitDiscordProperties"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "type",
                    "description",
                    "selectable",
                    "deletable",
                    "organization_id",
                    "properties"
                ],
                "title": "BenefitDiscord",
                "description": "A benefit of type `discord`.\n\nUse it to automatically invite your backers to a Discord server."
            },
            "BenefitDiscordCreate": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "discord"
                        ],
                        "const": "discord",
                        "title": "Type"
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 42,
                        "minLength": 3,
                        "title": "Description",
                        "description": "The description of the benefit. Will be displayed on products having this benefit."
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4",
                                "description": "The organization ID.",
                                "x-polar-selector-widget": {
                                    "displayProperty": "name",
                                    "resourceName": "Organization",
                                    "resourceRoot": "/v1/organizations"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the benefit. **Required unless you use an organization token.**"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/BenefitDiscordCreateProperties"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "description",
                    "properties"
                ],
                "title": "BenefitDiscordCreate"
            },
            "BenefitDiscordCreateProperties": {
                "properties": {
                    "guild_token": {
                        "type": "string",
                        "title": "Guild Token"
                    },
                    "role_id": {
                        "type": "string",
                        "title": "Role Id",
                        "description": "The ID of the Discord role to grant."
                    }
                },
                "type": "object",
                "required": [
                    "guild_token",
                    "role_id"
                ],
                "title": "BenefitDiscordCreateProperties",
                "description": "Properties to create a benefit of type `discord`."
            },
            "BenefitDiscordProperties": {
                "properties": {
                    "guild_id": {
                        "type": "string",
                        "title": "Guild Id",
                        "description": "The ID of the Discord server."
                    },
                    "role_id": {
                        "type": "string",
                        "title": "Role Id",
                        "description": "The ID of the Discord role to grant."
                    },
                    "guild_token": {
                        "type": "string",
                        "title": "Guild Token",
                        "readOnly": true
                    }
                },
                "type": "object",
                "required": [
                    "guild_id",
                    "role_id",
                    "guild_token"
                ],
                "title": "BenefitDiscordProperties",
                "description": "Properties for a benefit of type `discord`."
            },
            "BenefitDiscordSubscriber": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the benefit."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "discord"
                        ],
                        "const": "discord",
                        "title": "Type"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "The description of the benefit."
                    },
                    "selectable": {
                        "type": "boolean",
                        "title": "Selectable",
                        "description": "Whether the benefit is selectable when creating a product."
                    },
                    "deletable": {
                        "type": "boolean",
                        "title": "Deletable",
                        "description": "Whether the benefit is deletable."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the benefit."
                    },
                    "organization": {
                        "$ref": "#/components/schemas/Organization"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/BenefitDiscordSubscriberProperties"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "type",
                    "description",
                    "selectable",
                    "deletable",
                    "organization_id",
                    "organization",
                    "properties"
                ],
                "title": "BenefitDiscordSubscriber"
            },
            "BenefitDiscordSubscriberProperties": {
                "properties": {
                    "guild_id": {
                        "type": "string",
                        "title": "Guild Id",
                        "description": "The ID of the Discord server."
                    }
                },
                "type": "object",
                "required": [
                    "guild_id"
                ],
                "title": "BenefitDiscordSubscriberProperties",
                "description": "Properties available to subscribers for a benefit of type `discord`."
            },
            "BenefitDiscordUpdate": {
                "properties": {
                    "description": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 42,
                                "minLength": 3
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "The description of the benefit. Will be displayed on products having this benefit."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "discord"
                        ],
                        "const": "discord",
                        "title": "Type"
                    },
                    "properties": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BenefitDiscordCreateProperties"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ],
                "title": "BenefitDiscordUpdate"
            },
            "BenefitDownloadables": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the benefit."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "downloadables"
                        ],
                        "const": "downloadables",
                        "title": "Type"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "The description of the benefit."
                    },
                    "selectable": {
                        "type": "boolean",
                        "title": "Selectable",
                        "description": "Whether the benefit is selectable when creating a product."
                    },
                    "deletable": {
                        "type": "boolean",
                        "title": "Deletable",
                        "description": "Whether the benefit is deletable."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the benefit."
                    },
                    "properties": {
                        "$ref": "#/components/schemas/BenefitDownloadablesProperties"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "type",
                    "description",
                    "selectable",
                    "deletable",
                    "organization_id",
                    "properties"
                ],
                "title": "BenefitDownloadables"
            },
            "BenefitDownloadablesCreate": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "downloadables"
                        ],
                        "const": "downloadables",
                        "title": "Type"
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 42,
                        "minLength": 3,
                        "title": "Description",
                        "description": "The description of the benefit. Will be displayed on products having this benefit."
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4",
                                "description": "The organization ID.",
                                "x-polar-selector-widget": {
                                    "displayProperty": "name",
                                    "resourceName": "Organization",
                                    "resourceRoot": "/v1/organizations"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the benefit. **Required unless you use an organization token.**"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/BenefitDownloadablesCreateProperties"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "description",
                    "properties"
                ],
                "title": "BenefitDownloadablesCreate"
            },
            "BenefitDownloadablesCreateProperties": {
                "properties": {
                    "archived": {
                        "additionalProperties": {
                            "type": "boolean"
                        },
                        "type": "object",
                        "title": "Archived",
                        "default": {}
                    },
                    "files": {
                        "items": {
                            "type": "string",
                            "format": "uuid4"
                        },
                        "type": "array",
                        "minItems": 1,
                        "title": "Files"
                    }
                },
                "type": "object",
                "required": [
                    "files"
                ],
                "title": "BenefitDownloadablesCreateProperties"
            },
            "BenefitDownloadablesProperties": {
                "properties": {
                    "archived": {
                        "additionalProperties": {
                            "type": "boolean"
                        },
                        "type": "object",
                        "title": "Archived"
                    },
                    "files": {
                        "items": {
                            "type": "string",
                            "format": "uuid4"
                        },
                        "type": "array",
                        "title": "Files"
                    }
                },
                "type": "object",
                "required": [
                    "archived",
                    "files"
                ],
                "title": "BenefitDownloadablesProperties"
            },
            "BenefitDownloadablesSubscriber": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the benefit."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "downloadables"
                        ],
                        "const": "downloadables",
                        "title": "Type"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "The description of the benefit."
                    },
                    "selectable": {
                        "type": "boolean",
                        "title": "Selectable",
                        "description": "Whether the benefit is selectable when creating a product."
                    },
                    "deletable": {
                        "type": "boolean",
                        "title": "Deletable",
                        "description": "Whether the benefit is deletable."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the benefit."
                    },
                    "organization": {
                        "$ref": "#/components/schemas/Organization"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/BenefitDownloadablesSubscriberProperties"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "type",
                    "description",
                    "selectable",
                    "deletable",
                    "organization_id",
                    "organization",
                    "properties"
                ],
                "title": "BenefitDownloadablesSubscriber"
            },
            "BenefitDownloadablesSubscriberProperties": {
                "properties": {
                    "active_files": {
                        "items": {
                            "type": "string",
                            "format": "uuid4"
                        },
                        "type": "array",
                        "title": "Active Files"
                    }
                },
                "type": "object",
                "required": [
                    "active_files"
                ],
                "title": "BenefitDownloadablesSubscriberProperties"
            },
            "BenefitDownloadablesUpdate": {
                "properties": {
                    "description": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 42,
                                "minLength": 3
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "The description of the benefit. Will be displayed on products having this benefit."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "downloadables"
                        ],
                        "const": "downloadables",
                        "title": "Type"
                    },
                    "properties": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BenefitDownloadablesCreateProperties"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ],
                "title": "BenefitDownloadablesUpdate"
            },
            "BenefitGitHubRepository": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the benefit."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "github_repository"
                        ],
                        "const": "github_repository",
                        "title": "Type"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "The description of the benefit."
                    },
                    "selectable": {
                        "type": "boolean",
                        "title": "Selectable",
                        "description": "Whether the benefit is selectable when creating a product."
                    },
                    "deletable": {
                        "type": "boolean",
                        "title": "Deletable",
                        "description": "Whether the benefit is deletable."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the benefit."
                    },
                    "properties": {
                        "$ref": "#/components/schemas/BenefitGitHubRepositoryProperties"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "type",
                    "description",
                    "selectable",
                    "deletable",
                    "organization_id",
                    "properties"
                ],
                "title": "BenefitGitHubRepository",
                "description": "A benefit of type `github_repository`.\n\nUse it to automatically invite your backers to a private GitHub repository."
            },
            "BenefitGitHubRepositoryCreate": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "github_repository"
                        ],
                        "const": "github_repository",
                        "title": "Type"
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 42,
                        "minLength": 3,
                        "title": "Description",
                        "description": "The description of the benefit. Will be displayed on products having this benefit."
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4",
                                "description": "The organization ID.",
                                "x-polar-selector-widget": {
                                    "displayProperty": "name",
                                    "resourceName": "Organization",
                                    "resourceRoot": "/v1/organizations"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the benefit. **Required unless you use an organization token.**"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/BenefitGitHubRepositoryCreateProperties"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "description",
                    "properties"
                ],
                "title": "BenefitGitHubRepositoryCreate"
            },
            "BenefitGitHubRepositoryCreateProperties": {
                "properties": {
                    "repository_owner": {
                        "type": "string",
                        "title": "Repository Owner",
                        "description": "The owner of the repository.",
                        "examples": [
                            "polarsource"
                        ]
                    },
                    "repository_name": {
                        "type": "string",
                        "title": "Repository Name",
                        "description": "The name of the repository.",
                        "examples": [
                            "private_repo"
                        ]
                    },
                    "permission": {
                        "type": "string",
                        "enum": [
                            "pull",
                            "triage",
                            "push",
                            "maintain",
                            "admin"
                        ],
                        "title": "Permission",
                        "description": "The permission level to grant. Read more about roles and their permissions on [GitHub documentation](https://docs.github.com/en/organizations/managing-user-access-to-your-organizations-repositories/managing-repository-roles/repository-roles-for-an-organization#permissions-for-each-role)."
                    }
                },
                "type": "object",
                "required": [
                    "repository_owner",
                    "repository_name",
                    "permission"
                ],
                "title": "BenefitGitHubRepositoryCreateProperties",
                "description": "Properties to create a benefit of type `github_repository`."
            },
            "BenefitGitHubRepositoryProperties": {
                "properties": {
                    "repository_owner": {
                        "type": "string",
                        "title": "Repository Owner",
                        "description": "The owner of the repository.",
                        "examples": [
                            "polarsource"
                        ]
                    },
                    "repository_name": {
                        "type": "string",
                        "title": "Repository Name",
                        "description": "The name of the repository.",
                        "examples": [
                            "private_repo"
                        ]
                    },
                    "permission": {
                        "type": "string",
                        "enum": [
                            "pull",
                            "triage",
                            "push",
                            "maintain",
                            "admin"
                        ],
                        "title": "Permission",
                        "description": "The permission level to grant. Read more about roles and their permissions on [GitHub documentation](https://docs.github.com/en/organizations/managing-user-access-to-your-organizations-repositories/managing-repository-roles/repository-roles-for-an-organization#permissions-for-each-role)."
                    }
                },
                "type": "object",
                "required": [
                    "repository_owner",
                    "repository_name",
                    "permission"
                ],
                "title": "BenefitGitHubRepositoryProperties",
                "description": "Properties for a benefit of type `github_repository`."
            },
            "BenefitGitHubRepositorySubscriber": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the benefit."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "github_repository"
                        ],
                        "const": "github_repository",
                        "title": "Type"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "The description of the benefit."
                    },
                    "selectable": {
                        "type": "boolean",
                        "title": "Selectable",
                        "description": "Whether the benefit is selectable when creating a product."
                    },
                    "deletable": {
                        "type": "boolean",
                        "title": "Deletable",
                        "description": "Whether the benefit is deletable."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the benefit."
                    },
                    "organization": {
                        "$ref": "#/components/schemas/Organization"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/BenefitGitHubRepositorySubscriberProperties"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "type",
                    "description",
                    "selectable",
                    "deletable",
                    "organization_id",
                    "organization",
                    "properties"
                ],
                "title": "BenefitGitHubRepositorySubscriber"
            },
            "BenefitGitHubRepositorySubscriberProperties": {
                "properties": {
                    "repository_owner": {
                        "type": "string",
                        "title": "Repository Owner",
                        "description": "The owner of the repository.",
                        "examples": [
                            "polarsource"
                        ]
                    },
                    "repository_name": {
                        "type": "string",
                        "title": "Repository Name",
                        "description": "The name of the repository.",
                        "examples": [
                            "private_repo"
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "repository_owner",
                    "repository_name"
                ],
                "title": "BenefitGitHubRepositorySubscriberProperties",
                "description": "Properties available to subscribers for a benefit of type `github_repository`."
            },
            "BenefitGitHubRepositoryUpdate": {
                "properties": {
                    "description": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 42,
                                "minLength": 3
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "The description of the benefit. Will be displayed on products having this benefit."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "github_repository"
                        ],
                        "const": "github_repository",
                        "title": "Type"
                    },
                    "properties": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BenefitGitHubRepositoryCreateProperties"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ],
                "title": "BenefitGitHubRepositoryUpdate"
            },
            "BenefitGrant": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the grant."
                    },
                    "granted_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Granted At",
                        "description": "The timestamp when the benefit was granted. If `None`, the benefit is not granted."
                    },
                    "is_granted": {
                        "type": "boolean",
                        "title": "Is Granted",
                        "description": "Whether the benefit is granted."
                    },
                    "revoked_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Revoked At",
                        "description": "The timestamp when the benefit was revoked. If `None`, the benefit is not revoked."
                    },
                    "is_revoked": {
                        "type": "boolean",
                        "title": "Is Revoked",
                        "description": "Whether the benefit is revoked."
                    },
                    "subscription_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subscription Id",
                        "description": "The ID of the subscription that granted this benefit."
                    },
                    "order_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Order Id",
                        "description": "The ID of the order that granted this benefit."
                    },
                    "customer_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Customer Id",
                        "description": "The ID of the customer concerned by this grant."
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "User Id",
                        "deprecated": true
                    },
                    "benefit_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Benefit Id",
                        "description": "The ID of the benefit concerned by this grant."
                    },
                    "properties": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BenefitGrantDiscordProperties"
                            },
                            {
                                "$ref": "#/components/schemas/BenefitGrantGitHubRepositoryProperties"
                            },
                            {
                                "$ref": "#/components/schemas/BenefitGrantDownloadablesProperties"
                            },
                            {
                                "$ref": "#/components/schemas/BenefitGrantLicenseKeysProperties"
                            },
                            {
                                "$ref": "#/components/schemas/BenefitGrantAdsProperties"
                            },
                            {
                                "$ref": "#/components/schemas/BenefitGrantCustomProperties"
                            }
                        ],
                        "title": "Properties"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "is_granted",
                    "is_revoked",
                    "subscription_id",
                    "order_id",
                    "customer_id",
                    "user_id",
                    "benefit_id",
                    "properties"
                ],
                "title": "BenefitGrant"
            },
            "BenefitGrantAdsProperties": {
                "properties": {
                    "advertisement_campaign_id": {
                        "type": "string",
                        "title": "Advertisement Campaign Id"
                    }
                },
                "type": "object",
                "required": [
                    "advertisement_campaign_id"
                ],
                "title": "BenefitGrantAdsProperties"
            },
            "BenefitGrantCustomProperties": {
                "properties": {},
                "type": "object",
                "title": "BenefitGrantCustomProperties"
            },
            "BenefitGrantDiscordProperties": {
                "properties": {
                    "account_id": {
                        "type": "string",
                        "title": "Account Id"
                    },
                    "guild_id": {
                        "type": "string",
                        "title": "Guild Id"
                    },
                    "role_id": {
                        "type": "string",
                        "title": "Role Id"
                    }
                },
                "type": "object",
                "title": "BenefitGrantDiscordProperties"
            },
            "BenefitGrantDownloadablesProperties": {
                "properties": {
                    "files": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Files"
                    }
                },
                "type": "object",
                "title": "BenefitGrantDownloadablesProperties"
            },
            "BenefitGrantGitHubRepositoryProperties": {
                "properties": {
                    "account_id": {
                        "type": "string",
                        "title": "Account Id"
                    },
                    "repository_owner": {
                        "type": "string",
                        "title": "Repository Owner"
                    },
                    "repository_name": {
                        "type": "string",
                        "title": "Repository Name"
                    },
                    "permission": {
                        "type": "string",
                        "enum": [
                            "pull",
                            "triage",
                            "push",
                            "maintain",
                            "admin"
                        ],
                        "title": "Permission"
                    }
                },
                "type": "object",
                "title": "BenefitGrantGitHubRepositoryProperties"
            },
            "BenefitGrantLicenseKeysProperties": {
                "properties": {
                    "license_key_id": {
                        "type": "string",
                        "title": "License Key Id"
                    },
                    "display_key": {
                        "type": "string",
                        "title": "Display Key"
                    }
                },
                "type": "object",
                "title": "BenefitGrantLicenseKeysProperties"
            },
            "BenefitGrantWebhook": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the grant."
                    },
                    "granted_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Granted At",
                        "description": "The timestamp when the benefit was granted. If `None`, the benefit is not granted."
                    },
                    "is_granted": {
                        "type": "boolean",
                        "title": "Is Granted",
                        "description": "Whether the benefit is granted."
                    },
                    "revoked_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Revoked At",
                        "description": "The timestamp when the benefit was revoked. If `None`, the benefit is not revoked."
                    },
                    "is_revoked": {
                        "type": "boolean",
                        "title": "Is Revoked",
                        "description": "Whether the benefit is revoked."
                    },
                    "subscription_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subscription Id",
                        "description": "The ID of the subscription that granted this benefit."
                    },
                    "order_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Order Id",
                        "description": "The ID of the order that granted this benefit."
                    },
                    "customer_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Customer Id",
                        "description": "The ID of the customer concerned by this grant."
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "User Id",
                        "deprecated": true
                    },
                    "benefit_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Benefit Id",
                        "description": "The ID of the benefit concerned by this grant."
                    },
                    "properties": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BenefitGrantDiscordProperties"
                            },
                            {
                                "$ref": "#/components/schemas/BenefitGrantGitHubRepositoryProperties"
                            },
                            {
                                "$ref": "#/components/schemas/BenefitGrantDownloadablesProperties"
                            },
                            {
                                "$ref": "#/components/schemas/BenefitGrantLicenseKeysProperties"
                            },
                            {
                                "$ref": "#/components/schemas/BenefitGrantAdsProperties"
                            },
                            {
                                "$ref": "#/components/schemas/BenefitGrantCustomProperties"
                            }
                        ],
                        "title": "Properties"
                    },
                    "benefit": {
                        "$ref": "#/components/schemas/Benefit",
                        "title": "Benefit"
                    },
                    "previous_properties": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BenefitGrantDiscordProperties"
                            },
                            {
                                "$ref": "#/components/schemas/BenefitGrantGitHubRepositoryProperties"
                            },
                            {
                                "$ref": "#/components/schemas/BenefitGrantDownloadablesProperties"
                            },
                            {
                                "$ref": "#/components/schemas/BenefitGrantLicenseKeysProperties"
                            },
                            {
                                "$ref": "#/components/schemas/BenefitGrantAdsProperties"
                            },
                            {
                                "$ref": "#/components/schemas/BenefitGrantCustomProperties"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Previous Properties"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "is_granted",
                    "is_revoked",
                    "subscription_id",
                    "order_id",
                    "customer_id",
                    "user_id",
                    "benefit_id",
                    "properties",
                    "benefit"
                ],
                "title": "BenefitGrantWebhook"
            },
            "BenefitLicenseKeyActivationProperties": {
                "properties": {
                    "limit": {
                        "type": "integer",
                        "maximum": 50,
                        "exclusiveMinimum": 0,
                        "title": "Limit"
                    },
                    "enable_customer_admin": {
                        "type": "boolean",
                        "title": "Enable Customer Admin"
                    }
                },
                "type": "object",
                "required": [
                    "limit",
                    "enable_customer_admin"
                ],
                "title": "BenefitLicenseKeyActivationProperties"
            },
            "BenefitLicenseKeyExpirationProperties": {
                "properties": {
                    "ttl": {
                        "type": "integer",
                        "exclusiveMinimum": 0,
                        "title": "Ttl"
                    },
                    "timeframe": {
                        "type": "string",
                        "enum": [
                            "year",
                            "month",
                            "day"
                        ],
                        "title": "Timeframe"
                    }
                },
                "type": "object",
                "required": [
                    "ttl",
                    "timeframe"
                ],
                "title": "BenefitLicenseKeyExpirationProperties"
            },
            "BenefitLicenseKeys": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the benefit."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "license_keys"
                        ],
                        "const": "license_keys",
                        "title": "Type"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "The description of the benefit."
                    },
                    "selectable": {
                        "type": "boolean",
                        "title": "Selectable",
                        "description": "Whether the benefit is selectable when creating a product."
                    },
                    "deletable": {
                        "type": "boolean",
                        "title": "Deletable",
                        "description": "Whether the benefit is deletable."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the benefit."
                    },
                    "properties": {
                        "$ref": "#/components/schemas/BenefitLicenseKeysProperties"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "type",
                    "description",
                    "selectable",
                    "deletable",
                    "organization_id",
                    "properties"
                ],
                "title": "BenefitLicenseKeys"
            },
            "BenefitLicenseKeysCreate": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "license_keys"
                        ],
                        "const": "license_keys",
                        "title": "Type"
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 42,
                        "minLength": 3,
                        "title": "Description",
                        "description": "The description of the benefit. Will be displayed on products having this benefit."
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4",
                                "description": "The organization ID.",
                                "x-polar-selector-widget": {
                                    "displayProperty": "name",
                                    "resourceName": "Organization",
                                    "resourceRoot": "/v1/organizations"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the benefit. **Required unless you use an organization token.**"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/BenefitLicenseKeysCreateProperties"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "description",
                    "properties"
                ],
                "title": "BenefitLicenseKeysCreate"
            },
            "BenefitLicenseKeysCreateProperties": {
                "properties": {
                    "prefix": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Prefix"
                    },
                    "expires": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BenefitLicenseKeyExpirationProperties"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "activations": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BenefitLicenseKeyActivationProperties"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "limit_usage": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "exclusiveMinimum": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Limit Usage"
                    }
                },
                "type": "object",
                "title": "BenefitLicenseKeysCreateProperties"
            },
            "BenefitLicenseKeysProperties": {
                "properties": {
                    "prefix": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Prefix"
                    },
                    "expires": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BenefitLicenseKeyExpirationProperties"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "activations": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BenefitLicenseKeyActivationProperties"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "limit_usage": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Limit Usage"
                    }
                },
                "type": "object",
                "required": [
                    "prefix",
                    "expires",
                    "activations",
                    "limit_usage"
                ],
                "title": "BenefitLicenseKeysProperties"
            },
            "BenefitLicenseKeysSubscriber": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the benefit."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "license_keys"
                        ],
                        "const": "license_keys",
                        "title": "Type"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "The description of the benefit."
                    },
                    "selectable": {
                        "type": "boolean",
                        "title": "Selectable",
                        "description": "Whether the benefit is selectable when creating a product."
                    },
                    "deletable": {
                        "type": "boolean",
                        "title": "Deletable",
                        "description": "Whether the benefit is deletable."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the benefit."
                    },
                    "organization": {
                        "$ref": "#/components/schemas/Organization"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/BenefitLicenseKeysSubscriberProperties"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "type",
                    "description",
                    "selectable",
                    "deletable",
                    "organization_id",
                    "organization",
                    "properties"
                ],
                "title": "BenefitLicenseKeysSubscriber"
            },
            "BenefitLicenseKeysSubscriberProperties": {
                "properties": {
                    "prefix": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Prefix"
                    },
                    "expires": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BenefitLicenseKeyExpirationProperties"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "activations": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BenefitLicenseKeyActivationProperties"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "limit_usage": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Limit Usage"
                    }
                },
                "type": "object",
                "required": [
                    "prefix",
                    "expires",
                    "activations",
                    "limit_usage"
                ],
                "title": "BenefitLicenseKeysSubscriberProperties"
            },
            "BenefitLicenseKeysUpdate": {
                "properties": {
                    "description": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 42,
                                "minLength": 3
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "The description of the benefit. Will be displayed on products having this benefit."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "license_keys"
                        ],
                        "const": "license_keys",
                        "title": "Type"
                    },
                    "properties": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BenefitLicenseKeysCreateProperties"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ],
                "title": "BenefitLicenseKeysUpdate"
            },
            "BenefitType": {
                "type": "string",
                "enum": [
                    "custom",
                    "ads",
                    "discord",
                    "github_repository",
                    "downloadables",
                    "license_keys"
                ],
                "title": "BenefitType"
            },
            "Body_oauth2_consent": {
                "properties": {
                    "action": {
                        "type": "string",
                        "enum": [
                            "allow",
                            "deny"
                        ],
                        "title": "Action"
                    }
                },
                "type": "object",
                "required": [
                    "action"
                ],
                "title": "Body_oauth2:consent"
            },
            "Checkout": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "custom_field_data": {
                        "type": "object",
                        "title": "Custom Field Data",
                        "description": "Key-value object storing custom field values."
                    },
                    "payment_processor": {
                        "$ref": "#/components/schemas/polar__enums__PaymentProcessor",
                        "description": "Payment processor used."
                    },
                    "status": {
                        "$ref": "#/components/schemas/CheckoutStatus",
                        "description": "Status of the checkout session."
                    },
                    "client_secret": {
                        "type": "string",
                        "title": "Client Secret",
                        "description": "Client secret used to update and complete the checkout session from the client."
                    },
                    "url": {
                        "type": "string",
                        "title": "Url",
                        "description": "URL where the customer can access the checkout session."
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Expires At",
                        "description": "Expiration date and time of the checkout session."
                    },
                    "success_url": {
                        "type": "string",
                        "title": "Success Url",
                        "description": "URL where the customer will be redirected after a successful payment."
                    },
                    "embed_origin": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Embed Origin",
                        "description": "When checkout is embedded, represents the Origin of the page embedding the checkout. Used as a security measure to send messages only to the embedding page."
                    },
                    "amount": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "description": "Amount to pay in cents. Only useful for custom prices, it'll be ignored for fixed and free prices."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Amount"
                    },
                    "tax_amount": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tax Amount",
                        "description": "Computed tax amount to pay in cents."
                    },
                    "currency": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Currency",
                        "description": "Currency code of the checkout session."
                    },
                    "subtotal_amount": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subtotal Amount",
                        "description": "Subtotal amount in cents, including discounts and before tax."
                    },
                    "total_amount": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Total Amount",
                        "description": "Total amount to pay in cents, including discounts and after tax."
                    },
                    "product_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Id",
                        "description": "ID of the product to checkout."
                    },
                    "product_price_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Price Id",
                        "description": "ID of the product price to checkout."
                    },
                    "discount_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Discount Id",
                        "description": "ID of the discount applied to the checkout."
                    },
                    "allow_discount_codes": {
                        "type": "boolean",
                        "title": "Allow Discount Codes",
                        "description": "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it."
                    },
                    "is_discount_applicable": {
                        "type": "boolean",
                        "title": "Is Discount Applicable",
                        "description": "Whether the discount is applicable to the checkout. Typically, free and custom prices are not discountable."
                    },
                    "is_free_product_price": {
                        "type": "boolean",
                        "title": "Is Free Product Price",
                        "description": "Whether the product price is free, regardless of discounts."
                    },
                    "is_payment_required": {
                        "type": "boolean",
                        "title": "Is Payment Required",
                        "description": "Whether the checkout requires payment, e.g. in case of free products or discounts that cover the total amount."
                    },
                    "is_payment_setup_required": {
                        "type": "boolean",
                        "title": "Is Payment Setup Required",
                        "description": "Whether the checkout requires setting up a payment method, regardless of the amount, e.g. subscriptions that have first free cycles."
                    },
                    "is_payment_form_required": {
                        "type": "boolean",
                        "title": "Is Payment Form Required",
                        "description": "Whether the checkout requires a payment form, whether because of a payment or payment method setup."
                    },
                    "customer_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Id"
                    },
                    "customer_name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "description": "Name of the customer."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Name"
                    },
                    "customer_email": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "email",
                                "description": "Email address of the customer."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Email"
                    },
                    "customer_ip_address": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "ipvanyaddress",
                                "description": "IP address of the customer. Used to detect tax location."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Ip Address"
                    },
                    "customer_billing_address": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Address",
                                "description": "Billing address of the customer."
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "customer_tax_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Tax Id"
                    },
                    "payment_processor_metadata": {
                        "type": "object",
                        "title": "Payment Processor Metadata"
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "product": {
                        "$ref": "#/components/schemas/CheckoutProduct"
                    },
                    "product_price": {
                        "$ref": "#/components/schemas/ProductPrice"
                    },
                    "discount": {
                        "anyOf": [
                            {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/CheckoutDiscountFixedOnceForeverDuration"
                                    },
                                    {
                                        "$ref": "#/components/schemas/CheckoutDiscountFixedRepeatDuration"
                                    },
                                    {
                                        "$ref": "#/components/schemas/CheckoutDiscountPercentageOnceForeverDuration"
                                    },
                                    {
                                        "$ref": "#/components/schemas/CheckoutDiscountPercentageRepeatDuration"
                                    }
                                ]
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Discount"
                    },
                    "subscription_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subscription Id"
                    },
                    "attached_custom_fields": {
                        "items": {
                            "$ref": "#/components/schemas/AttachedCustomField"
                        },
                        "type": "array",
                        "title": "Attached Custom Fields"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "payment_processor",
                    "status",
                    "client_secret",
                    "url",
                    "expires_at",
                    "success_url",
                    "embed_origin",
                    "amount",
                    "tax_amount",
                    "currency",
                    "subtotal_amount",
                    "total_amount",
                    "product_id",
                    "product_price_id",
                    "discount_id",
                    "allow_discount_codes",
                    "is_discount_applicable",
                    "is_free_product_price",
                    "is_payment_required",
                    "is_payment_setup_required",
                    "is_payment_form_required",
                    "customer_id",
                    "customer_name",
                    "customer_email",
                    "customer_ip_address",
                    "customer_billing_address",
                    "customer_tax_id",
                    "payment_processor_metadata",
                    "metadata",
                    "product",
                    "product_price",
                    "discount",
                    "subscription_id",
                    "attached_custom_fields"
                ],
                "title": "Checkout",
                "description": "Checkout session data retrieved using an access token."
            },
            "CheckoutConfirmStripe": {
                "properties": {
                    "custom_field_data": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Field Data",
                        "description": "Key-value object storing custom field values."
                    },
                    "product_price_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Product Price Id",
                        "description": "ID of the product price to checkout. Must correspond to a price linked to the same product."
                    },
                    "amount": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "description": "Amount to pay in cents. Only useful for custom prices, it'll be ignored for fixed and free prices."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Amount"
                    },
                    "customer_name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "description": "Name of the customer."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Name"
                    },
                    "customer_email": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "email",
                                "description": "Email address of the customer."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Email"
                    },
                    "customer_billing_address": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Address",
                                "description": "Billing address of the customer."
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "customer_tax_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Tax Id"
                    },
                    "discount_code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Discount Code",
                        "description": "Discount code to apply to the checkout."
                    },
                    "confirmation_token_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Confirmation Token Id",
                        "description": "ID of the Stripe confirmation token. Required for fixed prices and custom prices."
                    }
                },
                "type": "object",
                "title": "CheckoutConfirmStripe",
                "description": "Confirm a checkout session using a Stripe confirmation token."
            },
            "CheckoutCreate": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/CheckoutProductCreate"
                    },
                    {
                        "$ref": "#/components/schemas/CheckoutPriceCreate"
                    }
                ]
            },
            "CheckoutCreatePublic": {
                "properties": {
                    "product_price_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Price Id",
                        "description": "ID of the product price to checkout."
                    },
                    "customer_email": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "email",
                                "description": "Email address of the customer."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Email"
                    },
                    "from_legacy_checkout_link": {
                        "type": "boolean",
                        "title": "From Legacy Checkout Link",
                        "default": false
                    },
                    "subscription_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subscription Id",
                        "description": "ID of a subscription to upgrade. It must be on a free pricing. If checkout is successful, metadata set on this checkout will be copied to the subscription, and existing keys will be overwritten."
                    }
                },
                "type": "object",
                "required": [
                    "product_price_id"
                ],
                "title": "CheckoutCreatePublic",
                "description": "Create a new checkout session from a client."
            },
            "CheckoutDiscountFixedOnceForeverDuration": {
                "properties": {
                    "duration": {
                        "$ref": "#/components/schemas/DiscountDuration"
                    },
                    "type": {
                        "$ref": "#/components/schemas/DiscountType"
                    },
                    "amount": {
                        "type": "integer",
                        "title": "Amount"
                    },
                    "currency": {
                        "type": "string",
                        "title": "Currency"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Code"
                    }
                },
                "type": "object",
                "required": [
                    "duration",
                    "type",
                    "amount",
                    "currency",
                    "id",
                    "name",
                    "code"
                ],
                "title": "CheckoutDiscountFixedOnceForeverDuration",
                "description": "Schema for a fixed amount discount that is applied once or forever."
            },
            "CheckoutDiscountFixedRepeatDuration": {
                "properties": {
                    "duration": {
                        "$ref": "#/components/schemas/DiscountDuration"
                    },
                    "duration_in_months": {
                        "type": "integer",
                        "title": "Duration In Months"
                    },
                    "type": {
                        "$ref": "#/components/schemas/DiscountType"
                    },
                    "amount": {
                        "type": "integer",
                        "title": "Amount"
                    },
                    "currency": {
                        "type": "string",
                        "title": "Currency"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Code"
                    }
                },
                "type": "object",
                "required": [
                    "duration",
                    "duration_in_months",
                    "type",
                    "amount",
                    "currency",
                    "id",
                    "name",
                    "code"
                ],
                "title": "CheckoutDiscountFixedRepeatDuration",
                "description": "Schema for a fixed amount discount that is applied on every invoice\nfor a certain number of months."
            },
            "CheckoutDiscountPercentageOnceForeverDuration": {
                "properties": {
                    "duration": {
                        "$ref": "#/components/schemas/DiscountDuration"
                    },
                    "type": {
                        "$ref": "#/components/schemas/DiscountType"
                    },
                    "basis_points": {
                        "type": "integer",
                        "title": "Basis Points"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Code"
                    }
                },
                "type": "object",
                "required": [
                    "duration",
                    "type",
                    "basis_points",
                    "id",
                    "name",
                    "code"
                ],
                "title": "CheckoutDiscountPercentageOnceForeverDuration",
                "description": "Schema for a percentage discount that is applied once or forever."
            },
            "CheckoutDiscountPercentageRepeatDuration": {
                "properties": {
                    "duration": {
                        "$ref": "#/components/schemas/DiscountDuration"
                    },
                    "duration_in_months": {
                        "type": "integer",
                        "title": "Duration In Months"
                    },
                    "type": {
                        "$ref": "#/components/schemas/DiscountType"
                    },
                    "basis_points": {
                        "type": "integer",
                        "title": "Basis Points"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Code"
                    }
                },
                "type": "object",
                "required": [
                    "duration",
                    "duration_in_months",
                    "type",
                    "basis_points",
                    "id",
                    "name",
                    "code"
                ],
                "title": "CheckoutDiscountPercentageRepeatDuration",
                "description": "Schema for a percentage discount that is applied on every invoice\nfor a certain number of months."
            },
            "CheckoutLegacy": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "The ID of the checkout."
                    },
                    "url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Url",
                        "description": "URL the customer should be redirected to complete the purchase."
                    },
                    "customer_email": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Email"
                    },
                    "customer_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Name"
                    },
                    "product": {
                        "$ref": "#/components/schemas/CheckoutProduct"
                    },
                    "product_price": {
                        "$ref": "#/components/schemas/ProductPrice"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "customer_email",
                    "customer_name",
                    "product",
                    "product_price"
                ],
                "title": "CheckoutLegacy",
                "description": "A checkout session."
            },
            "CheckoutLegacyCreate": {
                "properties": {
                    "product_price_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Price Id",
                        "description": "ID of the product price to subscribe to."
                    },
                    "success_url": {
                        "type": "string",
                        "minLength": 1,
                        "format": "uri",
                        "title": "Success Url",
                        "description": "URL where the customer will be redirected after a successful subscription. You can add the `session_id={CHECKOUT_SESSION_ID}` query parameter to retrieve the checkout session id."
                    },
                    "customer_email": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "email"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Email",
                        "description": "If you already know the email of your customer, you can set it. It'll be pre-filled on the checkout page."
                    },
                    "subscription_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subscription Id",
                        "description": "ID of the subscription to update. If not provided, a new subscription will be created."
                    }
                },
                "type": "object",
                "required": [
                    "product_price_id",
                    "success_url"
                ],
                "title": "CheckoutLegacyCreate"
            },
            "CheckoutLink": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "payment_processor": {
                        "$ref": "#/components/schemas/polar__enums__PaymentProcessor",
                        "description": "Payment processor used."
                    },
                    "client_secret": {
                        "type": "string",
                        "title": "Client Secret",
                        "description": "Client secret used to access the checkout link."
                    },
                    "success_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Success Url",
                        "description": "URL where the customer will be redirected after a successful payment."
                    },
                    "label": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Label",
                        "description": "Optional label to distinguish links internally"
                    },
                    "allow_discount_codes": {
                        "type": "boolean",
                        "title": "Allow Discount Codes",
                        "description": "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it."
                    },
                    "product_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Id",
                        "description": "ID of the product to checkout."
                    },
                    "product_price_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Product Price Id",
                        "description": "ID of the product price to checkout. First available price will be selected unless an explicit price ID is set."
                    },
                    "discount_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Discount Id",
                        "description": "ID of the discount to apply to the checkout. If the discount is not applicable anymore when opening the checkout link, it'll be ignored."
                    },
                    "product": {
                        "$ref": "#/components/schemas/CheckoutLinkProduct"
                    },
                    "product_price": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ProductPrice"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "discount": {
                        "anyOf": [
                            {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/DiscountFixedOnceForeverDurationBase"
                                    },
                                    {
                                        "$ref": "#/components/schemas/DiscountFixedRepeatDurationBase"
                                    },
                                    {
                                        "$ref": "#/components/schemas/DiscountPercentageOnceForeverDurationBase"
                                    },
                                    {
                                        "$ref": "#/components/schemas/DiscountPercentageRepeatDurationBase"
                                    }
                                ],
                                "title": "CheckoutLinkDiscount"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Discount"
                    },
                    "url": {
                        "type": "string",
                        "title": "Url",
                        "readOnly": true
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "metadata",
                    "payment_processor",
                    "client_secret",
                    "success_url",
                    "label",
                    "allow_discount_codes",
                    "product_id",
                    "product_price_id",
                    "discount_id",
                    "product",
                    "product_price",
                    "discount",
                    "url"
                ],
                "title": "CheckoutLink",
                "description": "Checkout link data."
            },
            "CheckoutLinkCreate": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/CheckoutLinkProductCreate"
                    },
                    {
                        "$ref": "#/components/schemas/CheckoutLinkPriceCreate"
                    }
                ]
            },
            "CheckoutLinkPriceCreate": {
                "properties": {
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "maxLength": 500,
                                    "minLength": 1
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "maxProperties": 50,
                        "title": "Metadata",
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    "payment_processor": {
                        "type": "string",
                        "enum": [
                            "stripe"
                        ],
                        "const": "stripe",
                        "title": "Payment Processor",
                        "description": "Payment processor to use. Currently only Stripe is supported."
                    },
                    "label": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Label",
                        "description": "Optional label to distinguish links internally"
                    },
                    "allow_discount_codes": {
                        "type": "boolean",
                        "title": "Allow Discount Codes",
                        "description": "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it.",
                        "default": true
                    },
                    "discount_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Discount Id",
                        "description": "ID of the discount to apply to the checkout. If the discount is not applicable anymore when opening the checkout link, it'll be ignored."
                    },
                    "success_url": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2083,
                                "minLength": 1,
                                "format": "uri"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Success Url",
                        "description": "URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id."
                    },
                    "product_price_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Price Id",
                        "description": "ID of the product price to checkout."
                    }
                },
                "type": "object",
                "required": [
                    "payment_processor",
                    "product_price_id"
                ],
                "title": "CheckoutLinkPriceCreate"
            },
            "CheckoutLinkProduct": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the product."
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "The name of the product."
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "The description of the product."
                    },
                    "is_recurring": {
                        "type": "boolean",
                        "title": "Is Recurring",
                        "description": "Whether the product is a subscription tier."
                    },
                    "is_archived": {
                        "type": "boolean",
                        "title": "Is Archived",
                        "description": "Whether the product is archived and no longer available."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the product."
                    },
                    "prices": {
                        "items": {
                            "$ref": "#/components/schemas/ProductPrice"
                        },
                        "type": "array",
                        "title": "Prices",
                        "description": "List of prices for this product."
                    },
                    "benefits": {
                        "items": {
                            "$ref": "#/components/schemas/BenefitBase"
                        },
                        "type": "array",
                        "title": "BenefitPublic",
                        "description": "List of benefits granted by the product."
                    },
                    "medias": {
                        "items": {
                            "$ref": "#/components/schemas/ProductMediaFileRead"
                        },
                        "type": "array",
                        "title": "Medias",
                        "description": "List of medias associated to the product."
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "name",
                    "description",
                    "is_recurring",
                    "is_archived",
                    "organization_id",
                    "prices",
                    "benefits",
                    "medias"
                ],
                "title": "CheckoutLinkProduct",
                "description": "Product data for a checkout link."
            },
            "CheckoutLinkProductCreate": {
                "properties": {
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "maxLength": 500,
                                    "minLength": 1
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "maxProperties": 50,
                        "title": "Metadata",
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    "payment_processor": {
                        "type": "string",
                        "enum": [
                            "stripe"
                        ],
                        "const": "stripe",
                        "title": "Payment Processor",
                        "description": "Payment processor to use. Currently only Stripe is supported."
                    },
                    "label": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Label",
                        "description": "Optional label to distinguish links internally"
                    },
                    "allow_discount_codes": {
                        "type": "boolean",
                        "title": "Allow Discount Codes",
                        "description": "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it.",
                        "default": true
                    },
                    "discount_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Discount Id",
                        "description": "ID of the discount to apply to the checkout. If the discount is not applicable anymore when opening the checkout link, it'll be ignored."
                    },
                    "success_url": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2083,
                                "minLength": 1,
                                "format": "uri"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Success Url",
                        "description": "URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id."
                    },
                    "product_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Id",
                        "description": "ID of the product to checkout. First available price will be selected."
                    }
                },
                "type": "object",
                "required": [
                    "payment_processor",
                    "product_id"
                ],
                "title": "CheckoutLinkProductCreate"
            },
            "CheckoutLinkSortProperty": {
                "type": "string",
                "enum": [
                    "created_at",
                    "-created_at"
                ],
                "title": "CheckoutLinkSortProperty"
            },
            "CheckoutLinkUpdate": {
                "properties": {
                    "metadata": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "maxLength": 500,
                                            "minLength": 1
                                        },
                                        {
                                            "type": "integer"
                                        },
                                        {
                                            "type": "boolean"
                                        }
                                    ]
                                },
                                "type": "object",
                                "maxProperties": 50
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata",
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    "label": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Label"
                    },
                    "allow_discount_codes": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Allow Discount Codes",
                        "description": "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it."
                    },
                    "product_price_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Product Price Id"
                    },
                    "discount_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Discount Id",
                        "description": "ID of the discount to apply to the checkout. If the discount is not applicable anymore when opening the checkout link, it'll be ignored."
                    },
                    "success_url": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2083,
                                "minLength": 1,
                                "format": "uri"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Success Url",
                        "description": "URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id."
                    }
                },
                "type": "object",
                "title": "CheckoutLinkUpdate",
                "description": "Schema to update an existing checkout link."
            },
            "CheckoutPriceCreate": {
                "properties": {
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "maxLength": 500,
                                    "minLength": 1
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "maxProperties": 50,
                        "title": "Metadata",
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    "custom_field_data": {
                        "type": "object",
                        "title": "Custom Field Data",
                        "description": "Key-value object storing custom field values."
                    },
                    "payment_processor": {
                        "type": "string",
                        "enum": [
                            "stripe"
                        ],
                        "const": "stripe",
                        "title": "Payment Processor",
                        "description": "Payment processor to use. Currently only Stripe is supported."
                    },
                    "discount_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Discount Id",
                        "description": "ID of the discount to apply to the checkout."
                    },
                    "allow_discount_codes": {
                        "type": "boolean",
                        "title": "Allow Discount Codes",
                        "description": "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it.",
                        "default": true
                    },
                    "amount": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "description": "Amount to pay in cents. Only useful for custom prices, it'll be ignored for fixed and free prices."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Amount"
                    },
                    "customer_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Id",
                        "description": "ID of an existing customer in the organization. The customer data will be pre-filled in the checkout form. The resulting order will be linked to this customer."
                    },
                    "customer_name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "description": "Name of the customer."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Name"
                    },
                    "customer_email": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "email",
                                "description": "Email address of the customer."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Email"
                    },
                    "customer_ip_address": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "ipvanyaddress",
                                "description": "IP address of the customer. Used to detect tax location."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Ip Address"
                    },
                    "customer_billing_address": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Address",
                                "description": "Billing address of the customer."
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "customer_tax_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Tax Id"
                    },
                    "subscription_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subscription Id",
                        "description": "ID of a subscription to upgrade. It must be on a free pricing. If checkout is successful, metadata set on this checkout will be copied to the subscription, and existing keys will be overwritten."
                    },
                    "success_url": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2083,
                                "minLength": 1,
                                "format": "uri"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Success Url",
                        "description": "URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id."
                    },
                    "embed_origin": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Embed Origin",
                        "description": "If you plan to embed the checkout session, set this to the Origin of the embedding page. It'll allow the Polar iframe to communicate with the parent page."
                    },
                    "product_price_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Price Id",
                        "description": "ID of the product price to checkout."
                    }
                },
                "type": "object",
                "required": [
                    "payment_processor",
                    "product_price_id"
                ],
                "title": "CheckoutPriceCreate",
                "description": "Create a new checkout session from a product price.\n\nMetadata set on the checkout will be copied\nto the resulting order and/or subscription."
            },
            "CheckoutProduct": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the product."
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "The name of the product."
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "The description of the product."
                    },
                    "is_recurring": {
                        "type": "boolean",
                        "title": "Is Recurring",
                        "description": "Whether the product is a subscription tier."
                    },
                    "is_archived": {
                        "type": "boolean",
                        "title": "Is Archived",
                        "description": "Whether the product is archived and no longer available."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the product."
                    },
                    "prices": {
                        "items": {
                            "$ref": "#/components/schemas/ProductPrice"
                        },
                        "type": "array",
                        "title": "Prices",
                        "description": "List of prices for this product."
                    },
                    "benefits": {
                        "items": {
                            "$ref": "#/components/schemas/BenefitBase"
                        },
                        "type": "array",
                        "title": "BenefitPublic",
                        "description": "List of benefits granted by the product."
                    },
                    "medias": {
                        "items": {
                            "$ref": "#/components/schemas/ProductMediaFileRead"
                        },
                        "type": "array",
                        "title": "Medias",
                        "description": "List of medias associated to the product."
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "name",
                    "description",
                    "is_recurring",
                    "is_archived",
                    "organization_id",
                    "prices",
                    "benefits",
                    "medias"
                ],
                "title": "CheckoutProduct",
                "description": "Product data for a checkout session."
            },
            "CheckoutProductCreate": {
                "properties": {
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "maxLength": 500,
                                    "minLength": 1
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "maxProperties": 50,
                        "title": "Metadata",
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    "custom_field_data": {
                        "type": "object",
                        "title": "Custom Field Data",
                        "description": "Key-value object storing custom field values."
                    },
                    "payment_processor": {
                        "type": "string",
                        "enum": [
                            "stripe"
                        ],
                        "const": "stripe",
                        "title": "Payment Processor",
                        "description": "Payment processor to use. Currently only Stripe is supported."
                    },
                    "discount_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Discount Id",
                        "description": "ID of the discount to apply to the checkout."
                    },
                    "allow_discount_codes": {
                        "type": "boolean",
                        "title": "Allow Discount Codes",
                        "description": "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it.",
                        "default": true
                    },
                    "amount": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "description": "Amount to pay in cents. Only useful for custom prices, it'll be ignored for fixed and free prices."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Amount"
                    },
                    "customer_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Id",
                        "description": "ID of an existing customer in the organization. The customer data will be pre-filled in the checkout form. The resulting order will be linked to this customer."
                    },
                    "customer_name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "description": "Name of the customer."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Name"
                    },
                    "customer_email": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "email",
                                "description": "Email address of the customer."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Email"
                    },
                    "customer_ip_address": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "ipvanyaddress",
                                "description": "IP address of the customer. Used to detect tax location."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Ip Address"
                    },
                    "customer_billing_address": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Address",
                                "description": "Billing address of the customer."
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "customer_tax_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Tax Id"
                    },
                    "subscription_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subscription Id",
                        "description": "ID of a subscription to upgrade. It must be on a free pricing. If checkout is successful, metadata set on this checkout will be copied to the subscription, and existing keys will be overwritten."
                    },
                    "success_url": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2083,
                                "minLength": 1,
                                "format": "uri"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Success Url",
                        "description": "URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id."
                    },
                    "embed_origin": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Embed Origin",
                        "description": "If you plan to embed the checkout session, set this to the Origin of the embedding page. It'll allow the Polar iframe to communicate with the parent page."
                    },
                    "product_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Id",
                        "description": "ID of the product to checkout. First available price will be selected."
                    }
                },
                "type": "object",
                "required": [
                    "payment_processor",
                    "product_id"
                ],
                "title": "CheckoutProductCreate",
                "description": "Create a new checkout session from a product.\n\nMetadata set on the checkout will be copied\nto the resulting order and/or subscription."
            },
            "CheckoutPublic": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "custom_field_data": {
                        "type": "object",
                        "title": "Custom Field Data",
                        "description": "Key-value object storing custom field values."
                    },
                    "payment_processor": {
                        "$ref": "#/components/schemas/polar__enums__PaymentProcessor",
                        "description": "Payment processor used."
                    },
                    "status": {
                        "$ref": "#/components/schemas/CheckoutStatus",
                        "description": "Status of the checkout session."
                    },
                    "client_secret": {
                        "type": "string",
                        "title": "Client Secret",
                        "description": "Client secret used to update and complete the checkout session from the client."
                    },
                    "url": {
                        "type": "string",
                        "title": "Url",
                        "description": "URL where the customer can access the checkout session."
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Expires At",
                        "description": "Expiration date and time of the checkout session."
                    },
                    "success_url": {
                        "type": "string",
                        "title": "Success Url",
                        "description": "URL where the customer will be redirected after a successful payment."
                    },
                    "embed_origin": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Embed Origin",
                        "description": "When checkout is embedded, represents the Origin of the page embedding the checkout. Used as a security measure to send messages only to the embedding page."
                    },
                    "amount": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "description": "Amount to pay in cents. Only useful for custom prices, it'll be ignored for fixed and free prices."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Amount"
                    },
                    "tax_amount": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tax Amount",
                        "description": "Computed tax amount to pay in cents."
                    },
                    "currency": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Currency",
                        "description": "Currency code of the checkout session."
                    },
                    "subtotal_amount": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subtotal Amount",
                        "description": "Subtotal amount in cents, including discounts and before tax."
                    },
                    "total_amount": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Total Amount",
                        "description": "Total amount to pay in cents, including discounts and after tax."
                    },
                    "product_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Id",
                        "description": "ID of the product to checkout."
                    },
                    "product_price_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Price Id",
                        "description": "ID of the product price to checkout."
                    },
                    "discount_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Discount Id",
                        "description": "ID of the discount applied to the checkout."
                    },
                    "allow_discount_codes": {
                        "type": "boolean",
                        "title": "Allow Discount Codes",
                        "description": "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it."
                    },
                    "is_discount_applicable": {
                        "type": "boolean",
                        "title": "Is Discount Applicable",
                        "description": "Whether the discount is applicable to the checkout. Typically, free and custom prices are not discountable."
                    },
                    "is_free_product_price": {
                        "type": "boolean",
                        "title": "Is Free Product Price",
                        "description": "Whether the product price is free, regardless of discounts."
                    },
                    "is_payment_required": {
                        "type": "boolean",
                        "title": "Is Payment Required",
                        "description": "Whether the checkout requires payment, e.g. in case of free products or discounts that cover the total amount."
                    },
                    "is_payment_setup_required": {
                        "type": "boolean",
                        "title": "Is Payment Setup Required",
                        "description": "Whether the checkout requires setting up a payment method, regardless of the amount, e.g. subscriptions that have first free cycles."
                    },
                    "is_payment_form_required": {
                        "type": "boolean",
                        "title": "Is Payment Form Required",
                        "description": "Whether the checkout requires a payment form, whether because of a payment or payment method setup."
                    },
                    "customer_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Id"
                    },
                    "customer_name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "description": "Name of the customer."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Name"
                    },
                    "customer_email": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "email",
                                "description": "Email address of the customer."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Email"
                    },
                    "customer_ip_address": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "ipvanyaddress",
                                "description": "IP address of the customer. Used to detect tax location."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Ip Address"
                    },
                    "customer_billing_address": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Address",
                                "description": "Billing address of the customer."
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "customer_tax_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Tax Id"
                    },
                    "payment_processor_metadata": {
                        "type": "object",
                        "title": "Payment Processor Metadata"
                    },
                    "product": {
                        "$ref": "#/components/schemas/CheckoutProduct"
                    },
                    "product_price": {
                        "$ref": "#/components/schemas/ProductPrice"
                    },
                    "discount": {
                        "anyOf": [
                            {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/CheckoutDiscountFixedOnceForeverDuration"
                                    },
                                    {
                                        "$ref": "#/components/schemas/CheckoutDiscountFixedRepeatDuration"
                                    },
                                    {
                                        "$ref": "#/components/schemas/CheckoutDiscountPercentageOnceForeverDuration"
                                    },
                                    {
                                        "$ref": "#/components/schemas/CheckoutDiscountPercentageRepeatDuration"
                                    }
                                ]
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Discount"
                    },
                    "organization": {
                        "$ref": "#/components/schemas/Organization"
                    },
                    "attached_custom_fields": {
                        "items": {
                            "$ref": "#/components/schemas/AttachedCustomField"
                        },
                        "type": "array",
                        "title": "Attached Custom Fields"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "payment_processor",
                    "status",
                    "client_secret",
                    "url",
                    "expires_at",
                    "success_url",
                    "embed_origin",
                    "amount",
                    "tax_amount",
                    "currency",
                    "subtotal_amount",
                    "total_amount",
                    "product_id",
                    "product_price_id",
                    "discount_id",
                    "allow_discount_codes",
                    "is_discount_applicable",
                    "is_free_product_price",
                    "is_payment_required",
                    "is_payment_setup_required",
                    "is_payment_form_required",
                    "customer_id",
                    "customer_name",
                    "customer_email",
                    "customer_ip_address",
                    "customer_billing_address",
                    "customer_tax_id",
                    "payment_processor_metadata",
                    "product",
                    "product_price",
                    "discount",
                    "organization",
                    "attached_custom_fields"
                ],
                "title": "CheckoutPublic",
                "description": "Checkout session data retrieved using the client secret."
            },
            "CheckoutPublicConfirmed": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "custom_field_data": {
                        "type": "object",
                        "title": "Custom Field Data",
                        "description": "Key-value object storing custom field values."
                    },
                    "payment_processor": {
                        "$ref": "#/components/schemas/polar__enums__PaymentProcessor",
                        "description": "Payment processor used."
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "confirmed"
                        ],
                        "const": "confirmed",
                        "title": "Status"
                    },
                    "client_secret": {
                        "type": "string",
                        "title": "Client Secret",
                        "description": "Client secret used to update and complete the checkout session from the client."
                    },
                    "url": {
                        "type": "string",
                        "title": "Url",
                        "description": "URL where the customer can access the checkout session."
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Expires At",
                        "description": "Expiration date and time of the checkout session."
                    },
                    "success_url": {
                        "type": "string",
                        "title": "Success Url",
                        "description": "URL where the customer will be redirected after a successful payment."
                    },
                    "embed_origin": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Embed Origin",
                        "description": "When checkout is embedded, represents the Origin of the page embedding the checkout. Used as a security measure to send messages only to the embedding page."
                    },
                    "amount": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "description": "Amount to pay in cents. Only useful for custom prices, it'll be ignored for fixed and free prices."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Amount"
                    },
                    "tax_amount": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tax Amount",
                        "description": "Computed tax amount to pay in cents."
                    },
                    "currency": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Currency",
                        "description": "Currency code of the checkout session."
                    },
                    "subtotal_amount": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subtotal Amount",
                        "description": "Subtotal amount in cents, including discounts and before tax."
                    },
                    "total_amount": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Total Amount",
                        "description": "Total amount to pay in cents, including discounts and after tax."
                    },
                    "product_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Id",
                        "description": "ID of the product to checkout."
                    },
                    "product_price_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Price Id",
                        "description": "ID of the product price to checkout."
                    },
                    "discount_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Discount Id",
                        "description": "ID of the discount applied to the checkout."
                    },
                    "allow_discount_codes": {
                        "type": "boolean",
                        "title": "Allow Discount Codes",
                        "description": "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it."
                    },
                    "is_discount_applicable": {
                        "type": "boolean",
                        "title": "Is Discount Applicable",
                        "description": "Whether the discount is applicable to the checkout. Typically, free and custom prices are not discountable."
                    },
                    "is_free_product_price": {
                        "type": "boolean",
                        "title": "Is Free Product Price",
                        "description": "Whether the product price is free, regardless of discounts."
                    },
                    "is_payment_required": {
                        "type": "boolean",
                        "title": "Is Payment Required",
                        "description": "Whether the checkout requires payment, e.g. in case of free products or discounts that cover the total amount."
                    },
                    "is_payment_setup_required": {
                        "type": "boolean",
                        "title": "Is Payment Setup Required",
                        "description": "Whether the checkout requires setting up a payment method, regardless of the amount, e.g. subscriptions that have first free cycles."
                    },
                    "is_payment_form_required": {
                        "type": "boolean",
                        "title": "Is Payment Form Required",
                        "description": "Whether the checkout requires a payment form, whether because of a payment or payment method setup."
                    },
                    "customer_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Id"
                    },
                    "customer_name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "description": "Name of the customer."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Name"
                    },
                    "customer_email": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "email",
                                "description": "Email address of the customer."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Email"
                    },
                    "customer_ip_address": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "ipvanyaddress",
                                "description": "IP address of the customer. Used to detect tax location."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Ip Address"
                    },
                    "customer_billing_address": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Address",
                                "description": "Billing address of the customer."
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "customer_tax_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Tax Id"
                    },
                    "payment_processor_metadata": {
                        "type": "object",
                        "title": "Payment Processor Metadata"
                    },
                    "product": {
                        "$ref": "#/components/schemas/CheckoutProduct"
                    },
                    "product_price": {
                        "$ref": "#/components/schemas/ProductPrice"
                    },
                    "discount": {
                        "anyOf": [
                            {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/CheckoutDiscountFixedOnceForeverDuration"
                                    },
                                    {
                                        "$ref": "#/components/schemas/CheckoutDiscountFixedRepeatDuration"
                                    },
                                    {
                                        "$ref": "#/components/schemas/CheckoutDiscountPercentageOnceForeverDuration"
                                    },
                                    {
                                        "$ref": "#/components/schemas/CheckoutDiscountPercentageRepeatDuration"
                                    }
                                ]
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Discount"
                    },
                    "organization": {
                        "$ref": "#/components/schemas/Organization"
                    },
                    "attached_custom_fields": {
                        "items": {
                            "$ref": "#/components/schemas/AttachedCustomField"
                        },
                        "type": "array",
                        "title": "Attached Custom Fields"
                    },
                    "customer_session_token": {
                        "type": "string",
                        "title": "Customer Session Token"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "payment_processor",
                    "status",
                    "client_secret",
                    "url",
                    "expires_at",
                    "success_url",
                    "embed_origin",
                    "amount",
                    "tax_amount",
                    "currency",
                    "subtotal_amount",
                    "total_amount",
                    "product_id",
                    "product_price_id",
                    "discount_id",
                    "allow_discount_codes",
                    "is_discount_applicable",
                    "is_free_product_price",
                    "is_payment_required",
                    "is_payment_setup_required",
                    "is_payment_form_required",
                    "customer_id",
                    "customer_name",
                    "customer_email",
                    "customer_ip_address",
                    "customer_billing_address",
                    "customer_tax_id",
                    "payment_processor_metadata",
                    "product",
                    "product_price",
                    "discount",
                    "organization",
                    "attached_custom_fields",
                    "customer_session_token"
                ],
                "title": "CheckoutPublicConfirmed",
                "description": "Checkout session data retrieved using the client secret after confirmation.\n\nIt contains a customer session token to retrieve order information\nright after the checkout."
            },
            "CheckoutSortProperty": {
                "type": "string",
                "enum": [
                    "created_at",
                    "-created_at",
                    "expires_at",
                    "-expires_at"
                ],
                "title": "CheckoutSortProperty"
            },
            "CheckoutStatus": {
                "type": "string",
                "enum": [
                    "open",
                    "expired",
                    "confirmed",
                    "succeeded",
                    "failed"
                ],
                "title": "CheckoutStatus"
            },
            "CheckoutUpdate": {
                "properties": {
                    "custom_field_data": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Field Data",
                        "description": "Key-value object storing custom field values."
                    },
                    "product_price_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Product Price Id",
                        "description": "ID of the product price to checkout. Must correspond to a price linked to the same product."
                    },
                    "amount": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "description": "Amount to pay in cents. Only useful for custom prices, it'll be ignored for fixed and free prices."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Amount"
                    },
                    "customer_name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "description": "Name of the customer."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Name"
                    },
                    "customer_email": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "email",
                                "description": "Email address of the customer."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Email"
                    },
                    "customer_billing_address": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Address",
                                "description": "Billing address of the customer."
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "customer_tax_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Tax Id"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "maxLength": 500,
                                            "minLength": 1
                                        },
                                        {
                                            "type": "integer"
                                        },
                                        {
                                            "type": "boolean"
                                        }
                                    ]
                                },
                                "type": "object",
                                "maxProperties": 50
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata",
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    "discount_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Discount Id",
                        "description": "ID of the discount to apply to the checkout."
                    },
                    "allow_discount_codes": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Allow Discount Codes",
                        "description": "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it."
                    },
                    "customer_ip_address": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "ipvanyaddress",
                                "description": "IP address of the customer. Used to detect tax location."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Ip Address"
                    },
                    "success_url": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2083,
                                "minLength": 1,
                                "format": "uri"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Success Url",
                        "description": "URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id."
                    },
                    "embed_origin": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Embed Origin",
                        "description": "If you plan to embed the checkout session, set this to the Origin of the embedding page. It'll allow the Polar iframe to communicate with the parent page."
                    }
                },
                "type": "object",
                "title": "CheckoutUpdate",
                "description": "Update an existing checkout session using an access token."
            },
            "CheckoutUpdatePublic": {
                "properties": {
                    "custom_field_data": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Field Data",
                        "description": "Key-value object storing custom field values."
                    },
                    "product_price_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Product Price Id",
                        "description": "ID of the product price to checkout. Must correspond to a price linked to the same product."
                    },
                    "amount": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "description": "Amount to pay in cents. Only useful for custom prices, it'll be ignored for fixed and free prices."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Amount"
                    },
                    "customer_name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "description": "Name of the customer."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Name"
                    },
                    "customer_email": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "email",
                                "description": "Email address of the customer."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Email"
                    },
                    "customer_billing_address": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Address",
                                "description": "Billing address of the customer."
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "customer_tax_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Tax Id"
                    },
                    "discount_code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Discount Code",
                        "description": "Discount code to apply to the checkout."
                    }
                },
                "type": "object",
                "title": "CheckoutUpdatePublic",
                "description": "Update an existing checkout session using the client secret."
            },
            "ConfirmIssue": {
                "properties": {
                    "splits": {
                        "items": {
                            "$ref": "#/components/schemas/ConfirmIssueSplit"
                        },
                        "type": "array",
                        "title": "Splits"
                    }
                },
                "type": "object",
                "required": [
                    "splits"
                ],
                "title": "ConfirmIssue"
            },
            "ConfirmIssueSplit": {
                "properties": {
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id"
                    },
                    "github_username": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Github Username"
                    },
                    "share_thousands": {
                        "type": "integer",
                        "title": "Share Thousands"
                    }
                },
                "type": "object",
                "required": [
                    "share_thousands"
                ],
                "title": "ConfirmIssueSplit"
            },
            "CreatePledgeFromPaymentIntent": {
                "properties": {
                    "payment_intent_id": {
                        "type": "string",
                        "title": "Payment Intent Id"
                    }
                },
                "type": "object",
                "required": [
                    "payment_intent_id"
                ],
                "title": "CreatePledgeFromPaymentIntent"
            },
            "CreatePledgePayLater": {
                "properties": {
                    "issue_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Issue Id"
                    },
                    "amount": {
                        "type": "integer",
                        "maximum": 99999999,
                        "exclusiveMinimum": 0,
                        "title": "Amount"
                    },
                    "currency": {
                        "type": "string",
                        "pattern": "usd",
                        "title": "Currency",
                        "description": "The currency. Currently, only `usd` is supported.",
                        "default": "usd"
                    },
                    "on_behalf_of_organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "On Behalf Of Organization Id",
                        "description": "The organization to give credit to. The pledge will be paid by the authenticated user."
                    },
                    "by_organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "By Organization Id",
                        "description": "The organization to create the pledge as. The pledge will be paid by this organization."
                    }
                },
                "type": "object",
                "required": [
                    "issue_id",
                    "amount"
                ],
                "title": "CreatePledgePayLater"
            },
            "CurrencyAmount": {
                "properties": {
                    "currency": {
                        "type": "string",
                        "title": "Currency",
                        "description": "Three letter currency code (eg: USD)"
                    },
                    "amount": {
                        "type": "integer",
                        "title": "Amount",
                        "description": "Amount in the currencies smallest unit (cents if currency is USD)"
                    }
                },
                "type": "object",
                "required": [
                    "currency",
                    "amount"
                ],
                "title": "CurrencyAmount"
            },
            "CustomField": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/CustomFieldText"
                    },
                    {
                        "$ref": "#/components/schemas/CustomFieldNumber"
                    },
                    {
                        "$ref": "#/components/schemas/CustomFieldDate"
                    },
                    {
                        "$ref": "#/components/schemas/CustomFieldCheckbox"
                    },
                    {
                        "$ref": "#/components/schemas/CustomFieldSelect"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "checkbox": "#/components/schemas/CustomFieldCheckbox",
                        "date": "#/components/schemas/CustomFieldDate",
                        "number": "#/components/schemas/CustomFieldNumber",
                        "select": "#/components/schemas/CustomFieldSelect",
                        "text": "#/components/schemas/CustomFieldText"
                    }
                }
            },
            "CustomFieldCheckbox": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "checkbox"
                        ],
                        "const": "checkbox",
                        "title": "Type"
                    },
                    "slug": {
                        "type": "string",
                        "title": "Slug",
                        "description": "Identifier of the custom field. It'll be used as key when storing the value."
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the custom field."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the custom field.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    "properties": {
                        "$ref": "#/components/schemas/CustomFieldCheckboxProperties"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "metadata",
                    "type",
                    "slug",
                    "name",
                    "organization_id",
                    "properties"
                ],
                "title": "CustomFieldCheckbox",
                "description": "Schema for a custom field of type checkbox."
            },
            "CustomFieldCheckboxProperties": {
                "properties": {
                    "form_label": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Form Label"
                    },
                    "form_help_text": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Form Help Text"
                    },
                    "form_placeholder": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Form Placeholder"
                    }
                },
                "type": "object",
                "title": "CustomFieldCheckboxProperties"
            },
            "CustomFieldCreate": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/CustomFieldCreateText"
                    },
                    {
                        "$ref": "#/components/schemas/CustomFieldCreateNumber"
                    },
                    {
                        "$ref": "#/components/schemas/CustomFieldCreateDate"
                    },
                    {
                        "$ref": "#/components/schemas/CustomFieldCreateCheckbox"
                    },
                    {
                        "$ref": "#/components/schemas/CustomFieldCreateSelect"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "checkbox": "#/components/schemas/CustomFieldCreateCheckbox",
                        "date": "#/components/schemas/CustomFieldCreateDate",
                        "number": "#/components/schemas/CustomFieldCreateNumber",
                        "select": "#/components/schemas/CustomFieldCreateSelect",
                        "text": "#/components/schemas/CustomFieldCreateText"
                    }
                }
            },
            "CustomFieldCreateCheckbox": {
                "properties": {
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "maxLength": 500,
                                    "minLength": 1
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "maxProperties": 50,
                        "title": "Metadata",
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "checkbox"
                        ],
                        "const": "checkbox",
                        "title": "Type"
                    },
                    "slug": {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^[a-z0-9-_]+$",
                        "title": "Slug",
                        "description": "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "Name of the custom field."
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4",
                                "description": "The organization ID.",
                                "x-polar-selector-widget": {
                                    "displayProperty": "name",
                                    "resourceName": "Organization",
                                    "resourceRoot": "/v1/organizations"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the custom field. **Required unless you use an organization token.**"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/CustomFieldCheckboxProperties"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "slug",
                    "name",
                    "properties"
                ],
                "title": "CustomFieldCreateCheckbox",
                "description": "Schema to create a custom field of type checkbox."
            },
            "CustomFieldCreateDate": {
                "properties": {
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "maxLength": 500,
                                    "minLength": 1
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "maxProperties": 50,
                        "title": "Metadata",
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "date"
                        ],
                        "const": "date",
                        "title": "Type"
                    },
                    "slug": {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^[a-z0-9-_]+$",
                        "title": "Slug",
                        "description": "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "Name of the custom field."
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4",
                                "description": "The organization ID.",
                                "x-polar-selector-widget": {
                                    "displayProperty": "name",
                                    "resourceName": "Organization",
                                    "resourceRoot": "/v1/organizations"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the custom field. **Required unless you use an organization token.**"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/CustomFieldDateProperties"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "slug",
                    "name",
                    "properties"
                ],
                "title": "CustomFieldCreateDate",
                "description": "Schema to create a custom field of type date."
            },
            "CustomFieldCreateNumber": {
                "properties": {
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "maxLength": 500,
                                    "minLength": 1
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "maxProperties": 50,
                        "title": "Metadata",
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "number"
                        ],
                        "const": "number",
                        "title": "Type"
                    },
                    "slug": {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^[a-z0-9-_]+$",
                        "title": "Slug",
                        "description": "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "Name of the custom field."
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4",
                                "description": "The organization ID.",
                                "x-polar-selector-widget": {
                                    "displayProperty": "name",
                                    "resourceName": "Organization",
                                    "resourceRoot": "/v1/organizations"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the custom field. **Required unless you use an organization token.**"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/CustomFieldNumberProperties"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "slug",
                    "name",
                    "properties"
                ],
                "title": "CustomFieldCreateNumber",
                "description": "Schema to create a custom field of type number."
            },
            "CustomFieldCreateSelect": {
                "properties": {
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "maxLength": 500,
                                    "minLength": 1
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "maxProperties": 50,
                        "title": "Metadata",
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "select"
                        ],
                        "const": "select",
                        "title": "Type"
                    },
                    "slug": {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^[a-z0-9-_]+$",
                        "title": "Slug",
                        "description": "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "Name of the custom field."
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4",
                                "description": "The organization ID.",
                                "x-polar-selector-widget": {
                                    "displayProperty": "name",
                                    "resourceName": "Organization",
                                    "resourceRoot": "/v1/organizations"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the custom field. **Required unless you use an organization token.**"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/CustomFieldSelectProperties"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "slug",
                    "name",
                    "properties"
                ],
                "title": "CustomFieldCreateSelect",
                "description": "Schema to create a custom field of type select."
            },
            "CustomFieldCreateText": {
                "properties": {
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "maxLength": 500,
                                    "minLength": 1
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "maxProperties": 50,
                        "title": "Metadata",
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "text"
                        ],
                        "const": "text",
                        "title": "Type"
                    },
                    "slug": {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^[a-z0-9-_]+$",
                        "title": "Slug",
                        "description": "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "Name of the custom field."
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4",
                                "description": "The organization ID.",
                                "x-polar-selector-widget": {
                                    "displayProperty": "name",
                                    "resourceName": "Organization",
                                    "resourceRoot": "/v1/organizations"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the custom field. **Required unless you use an organization token.**"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/CustomFieldTextProperties"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "slug",
                    "name",
                    "properties"
                ],
                "title": "CustomFieldCreateText",
                "description": "Schema to create a custom field of type text."
            },
            "CustomFieldDate": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "date"
                        ],
                        "const": "date",
                        "title": "Type"
                    },
                    "slug": {
                        "type": "string",
                        "title": "Slug",
                        "description": "Identifier of the custom field. It'll be used as key when storing the value."
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the custom field."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the custom field.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    "properties": {
                        "$ref": "#/components/schemas/CustomFieldDateProperties"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "metadata",
                    "type",
                    "slug",
                    "name",
                    "organization_id",
                    "properties"
                ],
                "title": "CustomFieldDate",
                "description": "Schema for a custom field of type date."
            },
            "CustomFieldDateProperties": {
                "properties": {
                    "form_label": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Form Label"
                    },
                    "form_help_text": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Form Help Text"
                    },
                    "form_placeholder": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Form Placeholder"
                    },
                    "ge": {
                        "type": "integer",
                        "title": "Ge"
                    },
                    "le": {
                        "type": "integer",
                        "title": "Le"
                    }
                },
                "type": "object",
                "title": "CustomFieldDateProperties"
            },
            "CustomFieldNumber": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "number"
                        ],
                        "const": "number",
                        "title": "Type"
                    },
                    "slug": {
                        "type": "string",
                        "title": "Slug",
                        "description": "Identifier of the custom field. It'll be used as key when storing the value."
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the custom field."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the custom field.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    "properties": {
                        "$ref": "#/components/schemas/CustomFieldNumberProperties"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "metadata",
                    "type",
                    "slug",
                    "name",
                    "organization_id",
                    "properties"
                ],
                "title": "CustomFieldNumber",
                "description": "Schema for a custom field of type number."
            },
            "CustomFieldNumberProperties": {
                "properties": {
                    "form_label": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Form Label"
                    },
                    "form_help_text": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Form Help Text"
                    },
                    "form_placeholder": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Form Placeholder"
                    },
                    "ge": {
                        "type": "integer",
                        "title": "Ge"
                    },
                    "le": {
                        "type": "integer",
                        "title": "Le"
                    }
                },
                "type": "object",
                "title": "CustomFieldNumberProperties"
            },
            "CustomFieldSelect": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "select"
                        ],
                        "const": "select",
                        "title": "Type"
                    },
                    "slug": {
                        "type": "string",
                        "title": "Slug",
                        "description": "Identifier of the custom field. It'll be used as key when storing the value."
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the custom field."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the custom field.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    "properties": {
                        "$ref": "#/components/schemas/CustomFieldSelectProperties"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "metadata",
                    "type",
                    "slug",
                    "name",
                    "organization_id",
                    "properties"
                ],
                "title": "CustomFieldSelect",
                "description": "Schema for a custom field of type select."
            },
            "CustomFieldSelectOption": {
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Value"
                    },
                    "label": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Label"
                    }
                },
                "type": "object",
                "required": [
                    "value",
                    "label"
                ],
                "title": "CustomFieldSelectOption"
            },
            "CustomFieldSelectProperties": {
                "properties": {
                    "form_label": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Form Label"
                    },
                    "form_help_text": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Form Help Text"
                    },
                    "form_placeholder": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Form Placeholder"
                    },
                    "options": {
                        "items": {
                            "$ref": "#/components/schemas/CustomFieldSelectOption"
                        },
                        "type": "array",
                        "title": "Options"
                    }
                },
                "type": "object",
                "required": [
                    "options"
                ],
                "title": "CustomFieldSelectProperties"
            },
            "CustomFieldSortProperty": {
                "type": "string",
                "enum": [
                    "created_at",
                    "-created_at",
                    "slug",
                    "-slug",
                    "name",
                    "-name",
                    "type",
                    "-type"
                ],
                "title": "CustomFieldSortProperty"
            },
            "CustomFieldText": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "text"
                        ],
                        "const": "text",
                        "title": "Type"
                    },
                    "slug": {
                        "type": "string",
                        "title": "Slug",
                        "description": "Identifier of the custom field. It'll be used as key when storing the value."
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the custom field."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the custom field.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    "properties": {
                        "$ref": "#/components/schemas/CustomFieldTextProperties"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "metadata",
                    "type",
                    "slug",
                    "name",
                    "organization_id",
                    "properties"
                ],
                "title": "CustomFieldText",
                "description": "Schema for a custom field of type text."
            },
            "CustomFieldTextProperties": {
                "properties": {
                    "form_label": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Form Label"
                    },
                    "form_help_text": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Form Help Text"
                    },
                    "form_placeholder": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Form Placeholder"
                    },
                    "textarea": {
                        "type": "boolean",
                        "title": "Textarea"
                    },
                    "min_length": {
                        "type": "integer",
                        "minimum": 0,
                        "title": "Min Length"
                    },
                    "max_length": {
                        "type": "integer",
                        "minimum": 0,
                        "title": "Max Length"
                    }
                },
                "type": "object",
                "title": "CustomFieldTextProperties"
            },
            "CustomFieldType": {
                "type": "string",
                "enum": [
                    "text",
                    "number",
                    "date",
                    "checkbox",
                    "select"
                ],
                "title": "CustomFieldType"
            },
            "CustomFieldUpdate": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/CustomFieldUpdateText"
                    },
                    {
                        "$ref": "#/components/schemas/CustomFieldUpdateNumber"
                    },
                    {
                        "$ref": "#/components/schemas/CustomFieldUpdateDate"
                    },
                    {
                        "$ref": "#/components/schemas/CustomFieldUpdateCheckbox"
                    },
                    {
                        "$ref": "#/components/schemas/CustomFieldUpdateSelect"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "checkbox": "#/components/schemas/CustomFieldUpdateCheckbox",
                        "date": "#/components/schemas/CustomFieldUpdateDate",
                        "number": "#/components/schemas/CustomFieldUpdateNumber",
                        "select": "#/components/schemas/CustomFieldUpdateSelect",
                        "text": "#/components/schemas/CustomFieldUpdateText"
                    }
                }
            },
            "CustomFieldUpdateCheckbox": {
                "properties": {
                    "metadata": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "maxLength": 500,
                                            "minLength": 1
                                        },
                                        {
                                            "type": "integer"
                                        },
                                        {
                                            "type": "boolean"
                                        }
                                    ]
                                },
                                "type": "object",
                                "maxProperties": 50
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata",
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "minLength": 1,
                                "description": "Name of the custom field."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "slug": {
                        "anyOf": [
                            {
                                "type": "string",
                                "minLength": 1,
                                "pattern": "^[a-z0-9-_]+$",
                                "description": "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Slug"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "checkbox"
                        ],
                        "const": "checkbox",
                        "title": "Type"
                    },
                    "properties": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CustomFieldCheckboxProperties"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ],
                "title": "CustomFieldUpdateCheckbox",
                "description": "Schema to update a custom field of type checkbox."
            },
            "CustomFieldUpdateDate": {
                "properties": {
                    "metadata": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "maxLength": 500,
                                            "minLength": 1
                                        },
                                        {
                                            "type": "integer"
                                        },
                                        {
                                            "type": "boolean"
                                        }
                                    ]
                                },
                                "type": "object",
                                "maxProperties": 50
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata",
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "minLength": 1,
                                "description": "Name of the custom field."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "slug": {
                        "anyOf": [
                            {
                                "type": "string",
                                "minLength": 1,
                                "pattern": "^[a-z0-9-_]+$",
                                "description": "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Slug"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "date"
                        ],
                        "const": "date",
                        "title": "Type"
                    },
                    "properties": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CustomFieldDateProperties"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ],
                "title": "CustomFieldUpdateDate",
                "description": "Schema to update a custom field of type date."
            },
            "CustomFieldUpdateNumber": {
                "properties": {
                    "metadata": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "maxLength": 500,
                                            "minLength": 1
                                        },
                                        {
                                            "type": "integer"
                                        },
                                        {
                                            "type": "boolean"
                                        }
                                    ]
                                },
                                "type": "object",
                                "maxProperties": 50
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata",
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "minLength": 1,
                                "description": "Name of the custom field."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "slug": {
                        "anyOf": [
                            {
                                "type": "string",
                                "minLength": 1,
                                "pattern": "^[a-z0-9-_]+$",
                                "description": "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Slug"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "number"
                        ],
                        "const": "number",
                        "title": "Type"
                    },
                    "properties": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CustomFieldNumberProperties"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ],
                "title": "CustomFieldUpdateNumber",
                "description": "Schema to update a custom field of type number."
            },
            "CustomFieldUpdateSelect": {
                "properties": {
                    "metadata": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "maxLength": 500,
                                            "minLength": 1
                                        },
                                        {
                                            "type": "integer"
                                        },
                                        {
                                            "type": "boolean"
                                        }
                                    ]
                                },
                                "type": "object",
                                "maxProperties": 50
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata",
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "minLength": 1,
                                "description": "Name of the custom field."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "slug": {
                        "anyOf": [
                            {
                                "type": "string",
                                "minLength": 1,
                                "pattern": "^[a-z0-9-_]+$",
                                "description": "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Slug"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "select"
                        ],
                        "const": "select",
                        "title": "Type"
                    },
                    "properties": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CustomFieldSelectProperties"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ],
                "title": "CustomFieldUpdateSelect",
                "description": "Schema to update a custom field of type select."
            },
            "CustomFieldUpdateText": {
                "properties": {
                    "metadata": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "maxLength": 500,
                                            "minLength": 1
                                        },
                                        {
                                            "type": "integer"
                                        },
                                        {
                                            "type": "boolean"
                                        }
                                    ]
                                },
                                "type": "object",
                                "maxProperties": 50
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata",
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "minLength": 1,
                                "description": "Name of the custom field."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "slug": {
                        "anyOf": [
                            {
                                "type": "string",
                                "minLength": 1,
                                "pattern": "^[a-z0-9-_]+$",
                                "description": "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Slug"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "text"
                        ],
                        "const": "text",
                        "title": "Type"
                    },
                    "properties": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CustomFieldTextProperties"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ],
                "title": "CustomFieldUpdateText",
                "description": "Schema to update a custom field of type text."
            },
            "Customer": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "email_verified": {
                        "type": "boolean",
                        "title": "Email Verified"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "billing_address": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Address"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "tax_id": {
                        "anyOf": [
                            {
                                "prefixItems": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "$ref": "#/components/schemas/TaxIDFormat"
                                    }
                                ],
                                "type": "array",
                                "maxItems": 2,
                                "minItems": 2
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tax Id"
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id"
                    },
                    "avatar_url": {
                        "type": "string",
                        "title": "Avatar Url",
                        "readOnly": true
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "metadata",
                    "email",
                    "email_verified",
                    "name",
                    "billing_address",
                    "tax_id",
                    "organization_id",
                    "avatar_url"
                ],
                "title": "Customer",
                "description": "A customer in an organization."
            },
            "CustomerBenefitGrant": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/CustomerBenefitGrantDiscord"
                    },
                    {
                        "$ref": "#/components/schemas/CustomerBenefitGrantGitHubRepository"
                    },
                    {
                        "$ref": "#/components/schemas/CustomerBenefitGrantDownloadables"
                    },
                    {
                        "$ref": "#/components/schemas/CustomerBenefitGrantLicenseKeys"
                    },
                    {
                        "$ref": "#/components/schemas/CustomerBenefitGrantAds"
                    },
                    {
                        "$ref": "#/components/schemas/CustomerBenefitGrantCustom"
                    }
                ]
            },
            "CustomerBenefitGrantAds": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "granted_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Granted At"
                    },
                    "revoked_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Revoked At"
                    },
                    "customer_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Customer Id"
                    },
                    "benefit_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Benefit Id"
                    },
                    "subscription_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subscription Id"
                    },
                    "order_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Order Id"
                    },
                    "is_granted": {
                        "type": "boolean",
                        "title": "Is Granted"
                    },
                    "is_revoked": {
                        "type": "boolean",
                        "title": "Is Revoked"
                    },
                    "benefit": {
                        "$ref": "#/components/schemas/BenefitAdsSubscriber"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/BenefitGrantAdsProperties"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "granted_at",
                    "revoked_at",
                    "customer_id",
                    "benefit_id",
                    "subscription_id",
                    "order_id",
                    "is_granted",
                    "is_revoked",
                    "benefit",
                    "properties"
                ],
                "title": "CustomerBenefitGrantAds"
            },
            "CustomerBenefitGrantAdsUpdate": {
                "properties": {
                    "benefit_type": {
                        "type": "string",
                        "enum": [
                            "ads"
                        ],
                        "const": "ads",
                        "title": "Benefit Type"
                    }
                },
                "type": "object",
                "required": [
                    "benefit_type"
                ],
                "title": "CustomerBenefitGrantAdsUpdate"
            },
            "CustomerBenefitGrantCustom": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "granted_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Granted At"
                    },
                    "revoked_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Revoked At"
                    },
                    "customer_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Customer Id"
                    },
                    "benefit_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Benefit Id"
                    },
                    "subscription_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subscription Id"
                    },
                    "order_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Order Id"
                    },
                    "is_granted": {
                        "type": "boolean",
                        "title": "Is Granted"
                    },
                    "is_revoked": {
                        "type": "boolean",
                        "title": "Is Revoked"
                    },
                    "benefit": {
                        "$ref": "#/components/schemas/BenefitCustomSubscriber"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/BenefitGrantCustomProperties"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "granted_at",
                    "revoked_at",
                    "customer_id",
                    "benefit_id",
                    "subscription_id",
                    "order_id",
                    "is_granted",
                    "is_revoked",
                    "benefit",
                    "properties"
                ],
                "title": "CustomerBenefitGrantCustom"
            },
            "CustomerBenefitGrantCustomUpdate": {
                "properties": {
                    "benefit_type": {
                        "type": "string",
                        "enum": [
                            "custom"
                        ],
                        "const": "custom",
                        "title": "Benefit Type"
                    }
                },
                "type": "object",
                "required": [
                    "benefit_type"
                ],
                "title": "CustomerBenefitGrantCustomUpdate"
            },
            "CustomerBenefitGrantDiscord": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "granted_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Granted At"
                    },
                    "revoked_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Revoked At"
                    },
                    "customer_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Customer Id"
                    },
                    "benefit_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Benefit Id"
                    },
                    "subscription_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subscription Id"
                    },
                    "order_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Order Id"
                    },
                    "is_granted": {
                        "type": "boolean",
                        "title": "Is Granted"
                    },
                    "is_revoked": {
                        "type": "boolean",
                        "title": "Is Revoked"
                    },
                    "benefit": {
                        "$ref": "#/components/schemas/BenefitDiscordSubscriber"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/BenefitGrantDiscordProperties"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "granted_at",
                    "revoked_at",
                    "customer_id",
                    "benefit_id",
                    "subscription_id",
                    "order_id",
                    "is_granted",
                    "is_revoked",
                    "benefit",
                    "properties"
                ],
                "title": "CustomerBenefitGrantDiscord"
            },
            "CustomerBenefitGrantDiscordPropertiesUpdate": {
                "properties": {
                    "account_id": {
                        "type": "string",
                        "title": "Account Id"
                    }
                },
                "type": "object",
                "required": [
                    "account_id"
                ],
                "title": "CustomerBenefitGrantDiscordPropertiesUpdate"
            },
            "CustomerBenefitGrantDiscordUpdate": {
                "properties": {
                    "benefit_type": {
                        "type": "string",
                        "enum": [
                            "discord"
                        ],
                        "const": "discord",
                        "title": "Benefit Type"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/CustomerBenefitGrantDiscordPropertiesUpdate"
                    }
                },
                "type": "object",
                "required": [
                    "benefit_type",
                    "properties"
                ],
                "title": "CustomerBenefitGrantDiscordUpdate"
            },
            "CustomerBenefitGrantDownloadables": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "granted_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Granted At"
                    },
                    "revoked_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Revoked At"
                    },
                    "customer_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Customer Id"
                    },
                    "benefit_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Benefit Id"
                    },
                    "subscription_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subscription Id"
                    },
                    "order_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Order Id"
                    },
                    "is_granted": {
                        "type": "boolean",
                        "title": "Is Granted"
                    },
                    "is_revoked": {
                        "type": "boolean",
                        "title": "Is Revoked"
                    },
                    "benefit": {
                        "$ref": "#/components/schemas/BenefitDownloadablesSubscriber"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/BenefitGrantDownloadablesProperties"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "granted_at",
                    "revoked_at",
                    "customer_id",
                    "benefit_id",
                    "subscription_id",
                    "order_id",
                    "is_granted",
                    "is_revoked",
                    "benefit",
                    "properties"
                ],
                "title": "CustomerBenefitGrantDownloadables"
            },
            "CustomerBenefitGrantDownloadablesUpdate": {
                "properties": {
                    "benefit_type": {
                        "type": "string",
                        "enum": [
                            "downloadables"
                        ],
                        "const": "downloadables",
                        "title": "Benefit Type"
                    }
                },
                "type": "object",
                "required": [
                    "benefit_type"
                ],
                "title": "CustomerBenefitGrantDownloadablesUpdate"
            },
            "CustomerBenefitGrantGitHubRepository": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "granted_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Granted At"
                    },
                    "revoked_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Revoked At"
                    },
                    "customer_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Customer Id"
                    },
                    "benefit_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Benefit Id"
                    },
                    "subscription_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subscription Id"
                    },
                    "order_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Order Id"
                    },
                    "is_granted": {
                        "type": "boolean",
                        "title": "Is Granted"
                    },
                    "is_revoked": {
                        "type": "boolean",
                        "title": "Is Revoked"
                    },
                    "benefit": {
                        "$ref": "#/components/schemas/BenefitGitHubRepositorySubscriber"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/BenefitGrantGitHubRepositoryProperties"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "granted_at",
                    "revoked_at",
                    "customer_id",
                    "benefit_id",
                    "subscription_id",
                    "order_id",
                    "is_granted",
                    "is_revoked",
                    "benefit",
                    "properties"
                ],
                "title": "CustomerBenefitGrantGitHubRepository"
            },
            "CustomerBenefitGrantGitHubRepositoryPropertiesUpdate": {
                "properties": {
                    "account_id": {
                        "type": "string",
                        "title": "Account Id"
                    }
                },
                "type": "object",
                "required": [
                    "account_id"
                ],
                "title": "CustomerBenefitGrantGitHubRepositoryPropertiesUpdate"
            },
            "CustomerBenefitGrantGitHubRepositoryUpdate": {
                "properties": {
                    "benefit_type": {
                        "type": "string",
                        "enum": [
                            "github_repository"
                        ],
                        "const": "github_repository",
                        "title": "Benefit Type"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/CustomerBenefitGrantGitHubRepositoryPropertiesUpdate"
                    }
                },
                "type": "object",
                "required": [
                    "benefit_type",
                    "properties"
                ],
                "title": "CustomerBenefitGrantGitHubRepositoryUpdate"
            },
            "CustomerBenefitGrantLicenseKeys": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "granted_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Granted At"
                    },
                    "revoked_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Revoked At"
                    },
                    "customer_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Customer Id"
                    },
                    "benefit_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Benefit Id"
                    },
                    "subscription_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subscription Id"
                    },
                    "order_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Order Id"
                    },
                    "is_granted": {
                        "type": "boolean",
                        "title": "Is Granted"
                    },
                    "is_revoked": {
                        "type": "boolean",
                        "title": "Is Revoked"
                    },
                    "benefit": {
                        "$ref": "#/components/schemas/BenefitLicenseKeysSubscriber"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/BenefitGrantLicenseKeysProperties"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "granted_at",
                    "revoked_at",
                    "customer_id",
                    "benefit_id",
                    "subscription_id",
                    "order_id",
                    "is_granted",
                    "is_revoked",
                    "benefit",
                    "properties"
                ],
                "title": "CustomerBenefitGrantLicenseKeys"
            },
            "CustomerBenefitGrantLicenseKeysUpdate": {
                "properties": {
                    "benefit_type": {
                        "type": "string",
                        "enum": [
                            "license_keys"
                        ],
                        "const": "license_keys",
                        "title": "Benefit Type"
                    }
                },
                "type": "object",
                "required": [
                    "benefit_type"
                ],
                "title": "CustomerBenefitGrantLicenseKeysUpdate"
            },
            "CustomerBenefitGrantSortProperty": {
                "type": "string",
                "enum": [
                    "granted_at",
                    "-granted_at",
                    "type",
                    "-type",
                    "organization",
                    "-organization"
                ],
                "title": "CustomerBenefitGrantSortProperty"
            },
            "CustomerBenefitGrantUpdate": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/CustomerBenefitGrantDiscordUpdate"
                    },
                    {
                        "$ref": "#/components/schemas/CustomerBenefitGrantGitHubRepositoryUpdate"
                    },
                    {
                        "$ref": "#/components/schemas/CustomerBenefitGrantDownloadablesUpdate"
                    },
                    {
                        "$ref": "#/components/schemas/CustomerBenefitGrantLicenseKeysUpdate"
                    },
                    {
                        "$ref": "#/components/schemas/CustomerBenefitGrantAdsUpdate"
                    },
                    {
                        "$ref": "#/components/schemas/CustomerBenefitGrantCustomUpdate"
                    }
                ],
                "discriminator": {
                    "propertyName": "benefit_type",
                    "mapping": {
                        "ads": "#/components/schemas/CustomerBenefitGrantAdsUpdate",
                        "custom": "#/components/schemas/CustomerBenefitGrantCustomUpdate",
                        "discord": "#/components/schemas/CustomerBenefitGrantDiscordUpdate",
                        "downloadables": "#/components/schemas/CustomerBenefitGrantDownloadablesUpdate",
                        "github_repository": "#/components/schemas/CustomerBenefitGrantGitHubRepositoryUpdate",
                        "license_keys": "#/components/schemas/CustomerBenefitGrantLicenseKeysUpdate"
                    }
                }
            },
            "CustomerCreate": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "billing_address": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Address"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "tax_id": {
                        "anyOf": [
                            {
                                "prefixItems": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "$ref": "#/components/schemas/TaxIDFormat"
                                    }
                                ],
                                "type": "array",
                                "maxItems": 2,
                                "minItems": 2
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tax Id"
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4",
                                "description": "The organization ID.",
                                "x-polar-selector-widget": {
                                    "displayProperty": "name",
                                    "resourceName": "Organization",
                                    "resourceRoot": "/v1/organizations"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the customer. **Required unless you use an organization token.**"
                    }
                },
                "type": "object",
                "required": [
                    "email"
                ],
                "title": "CustomerCreate"
            },
            "CustomerOAuthPlatform": {
                "type": "string",
                "enum": [
                    "github",
                    "discord"
                ],
                "title": "CustomerOAuthPlatform"
            },
            "CustomerOrder": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "amount": {
                        "type": "integer",
                        "title": "Amount"
                    },
                    "tax_amount": {
                        "type": "integer",
                        "title": "Tax Amount"
                    },
                    "currency": {
                        "type": "string",
                        "title": "Currency"
                    },
                    "customer_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Customer Id"
                    },
                    "product_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Id"
                    },
                    "product_price_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Price Id"
                    },
                    "subscription_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subscription Id"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "User Id",
                        "deprecated": true
                    },
                    "product": {
                        "$ref": "#/components/schemas/CustomerOrderProduct"
                    },
                    "product_price": {
                        "$ref": "#/components/schemas/ProductPrice"
                    },
                    "subscription": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CustomerOrderSubscription"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "amount",
                    "tax_amount",
                    "currency",
                    "customer_id",
                    "product_id",
                    "product_price_id",
                    "subscription_id",
                    "user_id",
                    "product",
                    "product_price",
                    "subscription"
                ],
                "title": "CustomerOrder"
            },
            "CustomerOrderInvoice": {
                "properties": {
                    "url": {
                        "type": "string",
                        "title": "Url",
                        "description": "The URL to the invoice."
                    }
                },
                "type": "object",
                "required": [
                    "url"
                ],
                "title": "CustomerOrderInvoice",
                "description": "Order's invoice data."
            },
            "CustomerOrderProduct": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the product."
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "The name of the product."
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "The description of the product."
                    },
                    "is_recurring": {
                        "type": "boolean",
                        "title": "Is Recurring",
                        "description": "Whether the product is a subscription tier."
                    },
                    "is_archived": {
                        "type": "boolean",
                        "title": "Is Archived",
                        "description": "Whether the product is archived and no longer available."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the product."
                    },
                    "prices": {
                        "items": {
                            "$ref": "#/components/schemas/ProductPrice"
                        },
                        "type": "array",
                        "title": "Prices",
                        "description": "List of prices for this product."
                    },
                    "benefits": {
                        "items": {
                            "$ref": "#/components/schemas/BenefitBase"
                        },
                        "type": "array",
                        "title": "BenefitPublic",
                        "description": "List of benefits granted by the product."
                    },
                    "medias": {
                        "items": {
                            "$ref": "#/components/schemas/ProductMediaFileRead"
                        },
                        "type": "array",
                        "title": "Medias",
                        "description": "List of medias associated to the product."
                    },
                    "organization": {
                        "$ref": "#/components/schemas/Organization"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "name",
                    "description",
                    "is_recurring",
                    "is_archived",
                    "organization_id",
                    "prices",
                    "benefits",
                    "medias",
                    "organization"
                ],
                "title": "CustomerOrderProduct"
            },
            "CustomerOrderSortProperty": {
                "type": "string",
                "enum": [
                    "created_at",
                    "-created_at",
                    "amount",
                    "-amount",
                    "organization",
                    "-organization",
                    "product",
                    "-product",
                    "subscription",
                    "-subscription"
                ],
                "title": "CustomerOrderSortProperty"
            },
            "CustomerOrderSubscription": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "amount": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Amount"
                    },
                    "currency": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Currency"
                    },
                    "recurring_interval": {
                        "$ref": "#/components/schemas/SubscriptionRecurringInterval"
                    },
                    "status": {
                        "$ref": "#/components/schemas/SubscriptionStatus"
                    },
                    "current_period_start": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Current Period Start"
                    },
                    "current_period_end": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Current Period End"
                    },
                    "cancel_at_period_end": {
                        "type": "boolean",
                        "title": "Cancel At Period End"
                    },
                    "started_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Started At"
                    },
                    "ended_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Ended At"
                    },
                    "customer_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Customer Id"
                    },
                    "product_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Id"
                    },
                    "price_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Price Id"
                    },
                    "discount_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Discount Id"
                    },
                    "checkout_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Checkout Id"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "amount",
                    "currency",
                    "recurring_interval",
                    "status",
                    "current_period_start",
                    "current_period_end",
                    "cancel_at_period_end",
                    "started_at",
                    "ended_at",
                    "customer_id",
                    "product_id",
                    "price_id",
                    "discount_id",
                    "checkout_id"
                ],
                "title": "CustomerOrderSubscription"
            },
            "CustomerPortalCustomer": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "email_verified": {
                        "type": "boolean",
                        "title": "Email Verified"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "billing_address": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Address"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "tax_id": {
                        "anyOf": [
                            {
                                "prefixItems": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "$ref": "#/components/schemas/TaxIDFormat"
                                    }
                                ],
                                "type": "array",
                                "maxItems": 2,
                                "minItems": 2
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tax Id"
                    },
                    "oauth_accounts": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/CustomerPortalOAuthAccount"
                        },
                        "type": "object",
                        "title": "Oauth Accounts"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "email",
                    "email_verified",
                    "name",
                    "billing_address",
                    "tax_id",
                    "oauth_accounts"
                ],
                "title": "CustomerPortalCustomer"
            },
            "CustomerPortalOAuthAccount": {
                "properties": {
                    "account_id": {
                        "type": "string",
                        "title": "Account Id"
                    },
                    "account_username": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Account Username"
                    }
                },
                "type": "object",
                "required": [
                    "account_id",
                    "account_username"
                ],
                "title": "CustomerPortalOAuthAccount"
            },
            "CustomerSessionCodeAuthenticateRequest": {
                "properties": {
                    "code": {
                        "type": "string",
                        "title": "Code"
                    }
                },
                "type": "object",
                "required": [
                    "code"
                ],
                "title": "CustomerSessionCodeAuthenticateRequest"
            },
            "CustomerSessionCodeAuthenticateResponse": {
                "properties": {
                    "token": {
                        "type": "string",
                        "title": "Token"
                    }
                },
                "type": "object",
                "required": [
                    "token"
                ],
                "title": "CustomerSessionCodeAuthenticateResponse"
            },
            "CustomerSessionCodeRequest": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "organization_id"
                ],
                "title": "CustomerSessionCodeRequest"
            },
            "CustomerSortProperty": {
                "type": "string",
                "enum": [
                    "created_at",
                    "-created_at",
                    "email",
                    "-email",
                    "name",
                    "-name"
                ],
                "title": "CustomerSortProperty"
            },
            "CustomerSubscription": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "amount": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Amount"
                    },
                    "currency": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Currency"
                    },
                    "recurring_interval": {
                        "$ref": "#/components/schemas/SubscriptionRecurringInterval"
                    },
                    "status": {
                        "$ref": "#/components/schemas/SubscriptionStatus"
                    },
                    "current_period_start": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Current Period Start"
                    },
                    "current_period_end": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Current Period End"
                    },
                    "cancel_at_period_end": {
                        "type": "boolean",
                        "title": "Cancel At Period End"
                    },
                    "started_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Started At"
                    },
                    "ended_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Ended At"
                    },
                    "customer_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Customer Id"
                    },
                    "product_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Id"
                    },
                    "price_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Price Id"
                    },
                    "discount_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Discount Id"
                    },
                    "checkout_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Checkout Id"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "User Id",
                        "deprecated": true
                    },
                    "product": {
                        "$ref": "#/components/schemas/CustomerSubscriptionProduct"
                    },
                    "price": {
                        "$ref": "#/components/schemas/ProductPrice"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "amount",
                    "currency",
                    "recurring_interval",
                    "status",
                    "current_period_start",
                    "current_period_end",
                    "cancel_at_period_end",
                    "started_at",
                    "ended_at",
                    "customer_id",
                    "product_id",
                    "price_id",
                    "discount_id",
                    "checkout_id",
                    "user_id",
                    "product",
                    "price"
                ],
                "title": "CustomerSubscription"
            },
            "CustomerSubscriptionProduct": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the product."
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "The name of the product."
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "The description of the product."
                    },
                    "is_recurring": {
                        "type": "boolean",
                        "title": "Is Recurring",
                        "description": "Whether the product is a subscription tier."
                    },
                    "is_archived": {
                        "type": "boolean",
                        "title": "Is Archived",
                        "description": "Whether the product is archived and no longer available."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the product."
                    },
                    "prices": {
                        "items": {
                            "$ref": "#/components/schemas/ProductPrice"
                        },
                        "type": "array",
                        "title": "Prices",
                        "description": "List of prices for this product."
                    },
                    "benefits": {
                        "items": {
                            "$ref": "#/components/schemas/BenefitBase"
                        },
                        "type": "array",
                        "title": "BenefitPublic",
                        "description": "List of benefits granted by the product."
                    },
                    "medias": {
                        "items": {
                            "$ref": "#/components/schemas/ProductMediaFileRead"
                        },
                        "type": "array",
                        "title": "Medias",
                        "description": "List of medias associated to the product."
                    },
                    "organization": {
                        "$ref": "#/components/schemas/Organization"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "name",
                    "description",
                    "is_recurring",
                    "is_archived",
                    "organization_id",
                    "prices",
                    "benefits",
                    "medias",
                    "organization"
                ],
                "title": "CustomerSubscriptionProduct"
            },
            "CustomerSubscriptionSortProperty": {
                "type": "string",
                "enum": [
                    "started_at",
                    "-started_at",
                    "amount",
                    "-amount",
                    "status",
                    "-status",
                    "organization",
                    "-organization",
                    "product",
                    "-product"
                ],
                "title": "CustomerSubscriptionSortProperty"
            },
            "CustomerSubscriptionUpdate": {
                "properties": {
                    "product_price_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Price Id"
                    }
                },
                "type": "object",
                "required": [
                    "product_price_id"
                ],
                "title": "CustomerSubscriptionUpdate"
            },
            "CustomerUpdate": {
                "properties": {
                    "email": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "email"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Email"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "billing_address": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Address"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "tax_id": {
                        "anyOf": [
                            {
                                "prefixItems": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "$ref": "#/components/schemas/TaxIDFormat"
                                    }
                                ],
                                "type": "array",
                                "maxItems": 2,
                                "minItems": 2
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tax Id"
                    }
                },
                "type": "object",
                "title": "CustomerUpdate"
            },
            "DiscordGuild": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "roles": {
                        "items": {
                            "$ref": "#/components/schemas/DiscordGuildRole"
                        },
                        "type": "array",
                        "title": "Roles"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "roles"
                ],
                "title": "DiscordGuild"
            },
            "DiscordGuildRole": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "position": {
                        "type": "integer",
                        "title": "Position"
                    },
                    "is_polar_bot": {
                        "type": "boolean",
                        "title": "Is Polar Bot"
                    },
                    "color": {
                        "type": "string",
                        "format": "color",
                        "title": "Color"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "position",
                    "is_polar_bot",
                    "color"
                ],
                "title": "DiscordGuildRole"
            },
            "Discount": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DiscountFixedOnceForeverDuration"
                    },
                    {
                        "$ref": "#/components/schemas/DiscountFixedRepeatDuration"
                    },
                    {
                        "$ref": "#/components/schemas/DiscountPercentageOnceForeverDuration"
                    },
                    {
                        "$ref": "#/components/schemas/DiscountPercentageRepeatDuration"
                    }
                ]
            },
            "DiscountCreate": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DiscountFixedOnceForeverDurationCreate"
                    },
                    {
                        "$ref": "#/components/schemas/DiscountFixedRepeatDurationCreate"
                    },
                    {
                        "$ref": "#/components/schemas/DiscountPercentageOnceForeverDurationCreate"
                    },
                    {
                        "$ref": "#/components/schemas/DiscountPercentageRepeatDurationCreate"
                    }
                ]
            },
            "DiscountDuration": {
                "type": "string",
                "enum": [
                    "once",
                    "forever",
                    "repeating"
                ],
                "title": "DiscountDuration"
            },
            "DiscountFixedOnceForeverDuration": {
                "properties": {
                    "duration": {
                        "$ref": "#/components/schemas/DiscountDuration"
                    },
                    "type": {
                        "$ref": "#/components/schemas/DiscountType"
                    },
                    "amount": {
                        "type": "integer",
                        "title": "Amount"
                    },
                    "currency": {
                        "type": "string",
                        "title": "Currency"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the discount. Will be displayed to the customer when the discount is applied."
                    },
                    "code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Code",
                        "description": "Code customers can use to apply the discount during checkout."
                    },
                    "starts_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Starts At",
                        "description": "Timestamp after which the discount is redeemable."
                    },
                    "ends_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Ends At",
                        "description": "Timestamp after which the discount is no longer redeemable."
                    },
                    "max_redemptions": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Redemptions",
                        "description": "Maximum number of times the discount can be redeemed."
                    },
                    "redemptions_count": {
                        "type": "integer",
                        "title": "Redemptions Count",
                        "description": "Number of times the discount has been redeemed."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    "products": {
                        "items": {
                            "$ref": "#/components/schemas/DiscountProduct"
                        },
                        "type": "array",
                        "title": "Products"
                    }
                },
                "type": "object",
                "required": [
                    "duration",
                    "type",
                    "amount",
                    "currency",
                    "created_at",
                    "modified_at",
                    "id",
                    "metadata",
                    "name",
                    "code",
                    "starts_at",
                    "ends_at",
                    "max_redemptions",
                    "redemptions_count",
                    "organization_id",
                    "products"
                ],
                "title": "DiscountFixedOnceForeverDuration",
                "description": "Schema for a fixed amount discount that is applied once or forever."
            },
            "DiscountFixedOnceForeverDurationBase": {
                "properties": {
                    "duration": {
                        "$ref": "#/components/schemas/DiscountDuration"
                    },
                    "type": {
                        "$ref": "#/components/schemas/DiscountType"
                    },
                    "amount": {
                        "type": "integer",
                        "title": "Amount"
                    },
                    "currency": {
                        "type": "string",
                        "title": "Currency"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the discount. Will be displayed to the customer when the discount is applied."
                    },
                    "code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Code",
                        "description": "Code customers can use to apply the discount during checkout."
                    },
                    "starts_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Starts At",
                        "description": "Timestamp after which the discount is redeemable."
                    },
                    "ends_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Ends At",
                        "description": "Timestamp after which the discount is no longer redeemable."
                    },
                    "max_redemptions": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Redemptions",
                        "description": "Maximum number of times the discount can be redeemed."
                    },
                    "redemptions_count": {
                        "type": "integer",
                        "title": "Redemptions Count",
                        "description": "Number of times the discount has been redeemed."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "duration",
                    "type",
                    "amount",
                    "currency",
                    "created_at",
                    "modified_at",
                    "id",
                    "metadata",
                    "name",
                    "code",
                    "starts_at",
                    "ends_at",
                    "max_redemptions",
                    "redemptions_count",
                    "organization_id"
                ],
                "title": "DiscountFixedOnceForeverDurationBase"
            },
            "DiscountFixedOnceForeverDurationCreate": {
                "properties": {
                    "duration": {
                        "$ref": "#/components/schemas/DiscountDuration"
                    },
                    "type": {
                        "$ref": "#/components/schemas/DiscountType",
                        "description": "Type of the discount."
                    },
                    "amount": {
                        "type": "integer",
                        "minimum": 0,
                        "title": "Amount",
                        "description": "Fixed amount to discount from the invoice total."
                    },
                    "currency": {
                        "type": "string",
                        "pattern": "usd",
                        "title": "Currency",
                        "description": "The currency. Currently, only `usd` is supported.",
                        "default": "usd"
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "maxLength": 500,
                                    "minLength": 1
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "maxProperties": 50,
                        "title": "Metadata",
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "Name of the discount. Will be displayed to the customer when the discount is applied."
                    },
                    "code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Code",
                        "description": "Code customers can use to apply the discount during checkout. Must be between 3 and 256 characters long and contain only alphanumeric characters.If not provided, the discount can only be applied via the API."
                    },
                    "starts_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Starts At",
                        "description": "Optional timestamp after which the discount is redeemable."
                    },
                    "ends_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Ends At",
                        "description": "Optional timestamp after which the discount is no longer redeemable."
                    },
                    "max_redemptions": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Redemptions",
                        "description": "Optional maximum number of times the discount can be redeemed."
                    },
                    "products": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                "type": "array",
                                "description": "List of product IDs the discount can be applied to."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Products"
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4",
                                "description": "The organization ID.",
                                "x-polar-selector-widget": {
                                    "displayProperty": "name",
                                    "resourceName": "Organization",
                                    "resourceRoot": "/v1/organizations"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the discount. **Required unless you use an organization token.**"
                    }
                },
                "type": "object",
                "required": [
                    "duration",
                    "type",
                    "amount",
                    "name"
                ],
                "title": "DiscountFixedOnceForeverDurationCreate",
                "description": "Schema to create a fixed amount discount that is applied once or forever."
            },
            "DiscountFixedRepeatDuration": {
                "properties": {
                    "duration": {
                        "$ref": "#/components/schemas/DiscountDuration"
                    },
                    "duration_in_months": {
                        "type": "integer",
                        "title": "Duration In Months"
                    },
                    "type": {
                        "$ref": "#/components/schemas/DiscountType"
                    },
                    "amount": {
                        "type": "integer",
                        "title": "Amount"
                    },
                    "currency": {
                        "type": "string",
                        "title": "Currency"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the discount. Will be displayed to the customer when the discount is applied."
                    },
                    "code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Code",
                        "description": "Code customers can use to apply the discount during checkout."
                    },
                    "starts_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Starts At",
                        "description": "Timestamp after which the discount is redeemable."
                    },
                    "ends_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Ends At",
                        "description": "Timestamp after which the discount is no longer redeemable."
                    },
                    "max_redemptions": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Redemptions",
                        "description": "Maximum number of times the discount can be redeemed."
                    },
                    "redemptions_count": {
                        "type": "integer",
                        "title": "Redemptions Count",
                        "description": "Number of times the discount has been redeemed."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    "products": {
                        "items": {
                            "$ref": "#/components/schemas/DiscountProduct"
                        },
                        "type": "array",
                        "title": "Products"
                    }
                },
                "type": "object",
                "required": [
                    "duration",
                    "duration_in_months",
                    "type",
                    "amount",
                    "currency",
                    "created_at",
                    "modified_at",
                    "id",
                    "metadata",
                    "name",
                    "code",
                    "starts_at",
                    "ends_at",
                    "max_redemptions",
                    "redemptions_count",
                    "organization_id",
                    "products"
                ],
                "title": "DiscountFixedRepeatDuration",
                "description": "Schema for a fixed amount discount that is applied on every invoice\nfor a certain number of months."
            },
            "DiscountFixedRepeatDurationBase": {
                "properties": {
                    "duration": {
                        "$ref": "#/components/schemas/DiscountDuration"
                    },
                    "duration_in_months": {
                        "type": "integer",
                        "title": "Duration In Months"
                    },
                    "type": {
                        "$ref": "#/components/schemas/DiscountType"
                    },
                    "amount": {
                        "type": "integer",
                        "title": "Amount"
                    },
                    "currency": {
                        "type": "string",
                        "title": "Currency"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the discount. Will be displayed to the customer when the discount is applied."
                    },
                    "code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Code",
                        "description": "Code customers can use to apply the discount during checkout."
                    },
                    "starts_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Starts At",
                        "description": "Timestamp after which the discount is redeemable."
                    },
                    "ends_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Ends At",
                        "description": "Timestamp after which the discount is no longer redeemable."
                    },
                    "max_redemptions": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Redemptions",
                        "description": "Maximum number of times the discount can be redeemed."
                    },
                    "redemptions_count": {
                        "type": "integer",
                        "title": "Redemptions Count",
                        "description": "Number of times the discount has been redeemed."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "duration",
                    "duration_in_months",
                    "type",
                    "amount",
                    "currency",
                    "created_at",
                    "modified_at",
                    "id",
                    "metadata",
                    "name",
                    "code",
                    "starts_at",
                    "ends_at",
                    "max_redemptions",
                    "redemptions_count",
                    "organization_id"
                ],
                "title": "DiscountFixedRepeatDurationBase"
            },
            "DiscountFixedRepeatDurationCreate": {
                "properties": {
                    "duration": {
                        "$ref": "#/components/schemas/DiscountDuration"
                    },
                    "duration_in_months": {
                        "type": "integer",
                        "minimum": 1,
                        "title": "Duration In Months",
                        "description": "Number of months the discount should be applied.\n\nFor this to work on yearly pricing, you should multiply this by 12.\nFor example, to apply the discount for 2 years, set this to 24."
                    },
                    "type": {
                        "$ref": "#/components/schemas/DiscountType",
                        "description": "Type of the discount."
                    },
                    "amount": {
                        "type": "integer",
                        "minimum": 0,
                        "title": "Amount",
                        "description": "Fixed amount to discount from the invoice total."
                    },
                    "currency": {
                        "type": "string",
                        "pattern": "usd",
                        "title": "Currency",
                        "description": "The currency. Currently, only `usd` is supported.",
                        "default": "usd"
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "maxLength": 500,
                                    "minLength": 1
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "maxProperties": 50,
                        "title": "Metadata",
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "Name of the discount. Will be displayed to the customer when the discount is applied."
                    },
                    "code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Code",
                        "description": "Code customers can use to apply the discount during checkout. Must be between 3 and 256 characters long and contain only alphanumeric characters.If not provided, the discount can only be applied via the API."
                    },
                    "starts_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Starts At",
                        "description": "Optional timestamp after which the discount is redeemable."
                    },
                    "ends_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Ends At",
                        "description": "Optional timestamp after which the discount is no longer redeemable."
                    },
                    "max_redemptions": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Redemptions",
                        "description": "Optional maximum number of times the discount can be redeemed."
                    },
                    "products": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                "type": "array",
                                "description": "List of product IDs the discount can be applied to."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Products"
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4",
                                "description": "The organization ID.",
                                "x-polar-selector-widget": {
                                    "displayProperty": "name",
                                    "resourceName": "Organization",
                                    "resourceRoot": "/v1/organizations"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the discount. **Required unless you use an organization token.**"
                    }
                },
                "type": "object",
                "required": [
                    "duration",
                    "duration_in_months",
                    "type",
                    "amount",
                    "name"
                ],
                "title": "DiscountFixedRepeatDurationCreate",
                "description": "Schema to create a fixed amount discount that is applied on every invoice\nfor a certain number of months."
            },
            "DiscountPercentageOnceForeverDuration": {
                "properties": {
                    "duration": {
                        "$ref": "#/components/schemas/DiscountDuration"
                    },
                    "type": {
                        "$ref": "#/components/schemas/DiscountType"
                    },
                    "basis_points": {
                        "type": "integer",
                        "title": "Basis Points"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the discount. Will be displayed to the customer when the discount is applied."
                    },
                    "code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Code",
                        "description": "Code customers can use to apply the discount during checkout."
                    },
                    "starts_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Starts At",
                        "description": "Timestamp after which the discount is redeemable."
                    },
                    "ends_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Ends At",
                        "description": "Timestamp after which the discount is no longer redeemable."
                    },
                    "max_redemptions": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Redemptions",
                        "description": "Maximum number of times the discount can be redeemed."
                    },
                    "redemptions_count": {
                        "type": "integer",
                        "title": "Redemptions Count",
                        "description": "Number of times the discount has been redeemed."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    "products": {
                        "items": {
                            "$ref": "#/components/schemas/DiscountProduct"
                        },
                        "type": "array",
                        "title": "Products"
                    }
                },
                "type": "object",
                "required": [
                    "duration",
                    "type",
                    "basis_points",
                    "created_at",
                    "modified_at",
                    "id",
                    "metadata",
                    "name",
                    "code",
                    "starts_at",
                    "ends_at",
                    "max_redemptions",
                    "redemptions_count",
                    "organization_id",
                    "products"
                ],
                "title": "DiscountPercentageOnceForeverDuration",
                "description": "Schema for a percentage discount that is applied once or forever."
            },
            "DiscountPercentageOnceForeverDurationBase": {
                "properties": {
                    "duration": {
                        "$ref": "#/components/schemas/DiscountDuration"
                    },
                    "type": {
                        "$ref": "#/components/schemas/DiscountType"
                    },
                    "basis_points": {
                        "type": "integer",
                        "title": "Basis Points"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the discount. Will be displayed to the customer when the discount is applied."
                    },
                    "code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Code",
                        "description": "Code customers can use to apply the discount during checkout."
                    },
                    "starts_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Starts At",
                        "description": "Timestamp after which the discount is redeemable."
                    },
                    "ends_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Ends At",
                        "description": "Timestamp after which the discount is no longer redeemable."
                    },
                    "max_redemptions": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Redemptions",
                        "description": "Maximum number of times the discount can be redeemed."
                    },
                    "redemptions_count": {
                        "type": "integer",
                        "title": "Redemptions Count",
                        "description": "Number of times the discount has been redeemed."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "duration",
                    "type",
                    "basis_points",
                    "created_at",
                    "modified_at",
                    "id",
                    "metadata",
                    "name",
                    "code",
                    "starts_at",
                    "ends_at",
                    "max_redemptions",
                    "redemptions_count",
                    "organization_id"
                ],
                "title": "DiscountPercentageOnceForeverDurationBase"
            },
            "DiscountPercentageOnceForeverDurationCreate": {
                "properties": {
                    "duration": {
                        "$ref": "#/components/schemas/DiscountDuration"
                    },
                    "type": {
                        "$ref": "#/components/schemas/DiscountType",
                        "description": "Type of the discount."
                    },
                    "basis_points": {
                        "type": "integer",
                        "maximum": 10000,
                        "minimum": 1,
                        "title": "Basis Points",
                        "description": "Discount percentage in basis points.\n\nA basis point is 1/100th of a percent.\nFor example, to create a 25.5% discount, set this to 2550."
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "maxLength": 500,
                                    "minLength": 1
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "maxProperties": 50,
                        "title": "Metadata",
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "Name of the discount. Will be displayed to the customer when the discount is applied."
                    },
                    "code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Code",
                        "description": "Code customers can use to apply the discount during checkout. Must be between 3 and 256 characters long and contain only alphanumeric characters.If not provided, the discount can only be applied via the API."
                    },
                    "starts_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Starts At",
                        "description": "Optional timestamp after which the discount is redeemable."
                    },
                    "ends_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Ends At",
                        "description": "Optional timestamp after which the discount is no longer redeemable."
                    },
                    "max_redemptions": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Redemptions",
                        "description": "Optional maximum number of times the discount can be redeemed."
                    },
                    "products": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                "type": "array",
                                "description": "List of product IDs the discount can be applied to."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Products"
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4",
                                "description": "The organization ID.",
                                "x-polar-selector-widget": {
                                    "displayProperty": "name",
                                    "resourceName": "Organization",
                                    "resourceRoot": "/v1/organizations"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the discount. **Required unless you use an organization token.**"
                    }
                },
                "type": "object",
                "required": [
                    "duration",
                    "type",
                    "basis_points",
                    "name"
                ],
                "title": "DiscountPercentageOnceForeverDurationCreate",
                "description": "Schema to create a percentage discount that is applied once or forever."
            },
            "DiscountPercentageRepeatDuration": {
                "properties": {
                    "duration": {
                        "$ref": "#/components/schemas/DiscountDuration"
                    },
                    "duration_in_months": {
                        "type": "integer",
                        "title": "Duration In Months"
                    },
                    "type": {
                        "$ref": "#/components/schemas/DiscountType"
                    },
                    "basis_points": {
                        "type": "integer",
                        "title": "Basis Points"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the discount. Will be displayed to the customer when the discount is applied."
                    },
                    "code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Code",
                        "description": "Code customers can use to apply the discount during checkout."
                    },
                    "starts_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Starts At",
                        "description": "Timestamp after which the discount is redeemable."
                    },
                    "ends_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Ends At",
                        "description": "Timestamp after which the discount is no longer redeemable."
                    },
                    "max_redemptions": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Redemptions",
                        "description": "Maximum number of times the discount can be redeemed."
                    },
                    "redemptions_count": {
                        "type": "integer",
                        "title": "Redemptions Count",
                        "description": "Number of times the discount has been redeemed."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    "products": {
                        "items": {
                            "$ref": "#/components/schemas/DiscountProduct"
                        },
                        "type": "array",
                        "title": "Products"
                    }
                },
                "type": "object",
                "required": [
                    "duration",
                    "duration_in_months",
                    "type",
                    "basis_points",
                    "created_at",
                    "modified_at",
                    "id",
                    "metadata",
                    "name",
                    "code",
                    "starts_at",
                    "ends_at",
                    "max_redemptions",
                    "redemptions_count",
                    "organization_id",
                    "products"
                ],
                "title": "DiscountPercentageRepeatDuration",
                "description": "Schema for a percentage discount that is applied on every invoice\nfor a certain number of months."
            },
            "DiscountPercentageRepeatDurationBase": {
                "properties": {
                    "duration": {
                        "$ref": "#/components/schemas/DiscountDuration"
                    },
                    "duration_in_months": {
                        "type": "integer",
                        "title": "Duration In Months"
                    },
                    "type": {
                        "$ref": "#/components/schemas/DiscountType"
                    },
                    "basis_points": {
                        "type": "integer",
                        "title": "Basis Points"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the discount. Will be displayed to the customer when the discount is applied."
                    },
                    "code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Code",
                        "description": "Code customers can use to apply the discount during checkout."
                    },
                    "starts_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Starts At",
                        "description": "Timestamp after which the discount is redeemable."
                    },
                    "ends_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Ends At",
                        "description": "Timestamp after which the discount is no longer redeemable."
                    },
                    "max_redemptions": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Redemptions",
                        "description": "Maximum number of times the discount can be redeemed."
                    },
                    "redemptions_count": {
                        "type": "integer",
                        "title": "Redemptions Count",
                        "description": "Number of times the discount has been redeemed."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "duration",
                    "duration_in_months",
                    "type",
                    "basis_points",
                    "created_at",
                    "modified_at",
                    "id",
                    "metadata",
                    "name",
                    "code",
                    "starts_at",
                    "ends_at",
                    "max_redemptions",
                    "redemptions_count",
                    "organization_id"
                ],
                "title": "DiscountPercentageRepeatDurationBase"
            },
            "DiscountPercentageRepeatDurationCreate": {
                "properties": {
                    "duration": {
                        "$ref": "#/components/schemas/DiscountDuration"
                    },
                    "duration_in_months": {
                        "type": "integer",
                        "minimum": 1,
                        "title": "Duration In Months",
                        "description": "Number of months the discount should be applied.\n\nFor this to work on yearly pricing, you should multiply this by 12.\nFor example, to apply the discount for 2 years, set this to 24."
                    },
                    "type": {
                        "$ref": "#/components/schemas/DiscountType",
                        "description": "Type of the discount."
                    },
                    "basis_points": {
                        "type": "integer",
                        "maximum": 10000,
                        "minimum": 1,
                        "title": "Basis Points",
                        "description": "Discount percentage in basis points.\n\nA basis point is 1/100th of a percent.\nFor example, to create a 25.5% discount, set this to 2550."
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "maxLength": 500,
                                    "minLength": 1
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "maxProperties": 50,
                        "title": "Metadata",
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "Name of the discount. Will be displayed to the customer when the discount is applied."
                    },
                    "code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Code",
                        "description": "Code customers can use to apply the discount during checkout. Must be between 3 and 256 characters long and contain only alphanumeric characters.If not provided, the discount can only be applied via the API."
                    },
                    "starts_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Starts At",
                        "description": "Optional timestamp after which the discount is redeemable."
                    },
                    "ends_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Ends At",
                        "description": "Optional timestamp after which the discount is no longer redeemable."
                    },
                    "max_redemptions": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Redemptions",
                        "description": "Optional maximum number of times the discount can be redeemed."
                    },
                    "products": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                "type": "array",
                                "description": "List of product IDs the discount can be applied to."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Products"
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4",
                                "description": "The organization ID.",
                                "x-polar-selector-widget": {
                                    "displayProperty": "name",
                                    "resourceName": "Organization",
                                    "resourceRoot": "/v1/organizations"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the discount. **Required unless you use an organization token.**"
                    }
                },
                "type": "object",
                "required": [
                    "duration",
                    "duration_in_months",
                    "type",
                    "basis_points",
                    "name"
                ],
                "title": "DiscountPercentageRepeatDurationCreate",
                "description": "Schema to create a percentage discount that is applied on every invoice\nfor a certain number of months."
            },
            "DiscountProduct": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the product."
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "The name of the product."
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "The description of the product."
                    },
                    "is_recurring": {
                        "type": "boolean",
                        "title": "Is Recurring",
                        "description": "Whether the product is a subscription tier."
                    },
                    "is_archived": {
                        "type": "boolean",
                        "title": "Is Archived",
                        "description": "Whether the product is archived and no longer available."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the product."
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "name",
                    "description",
                    "is_recurring",
                    "is_archived",
                    "organization_id"
                ],
                "title": "DiscountProduct",
                "description": "A product that a discount can be applied to."
            },
            "DiscountSortProperty": {
                "type": "string",
                "enum": [
                    "created_at",
                    "-created_at",
                    "name",
                    "-name",
                    "code",
                    "-code",
                    "redemptions_count",
                    "-redemptions_count"
                ],
                "title": "DiscountSortProperty"
            },
            "DiscountType": {
                "type": "string",
                "enum": [
                    "fixed",
                    "percentage"
                ],
                "title": "DiscountType"
            },
            "DiscountUpdate": {
                "properties": {
                    "metadata": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "maxLength": 500,
                                            "minLength": 1
                                        },
                                        {
                                            "type": "integer"
                                        },
                                        {
                                            "type": "boolean"
                                        }
                                    ]
                                },
                                "type": "object",
                                "maxProperties": 50
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata",
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "minLength": 1,
                                "description": "Name of the discount. Will be displayed to the customer when the discount is applied."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "code": {
                        "anyOf": [
                            {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "description": "Code customers can use to apply the discount during checkout. Must be between 3 and 256 characters long and contain only alphanumeric characters.If not provided, the discount can only be applied via the API."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Code"
                    },
                    "starts_at": {
                        "anyOf": [
                            {
                                "anyOf": [
                                    {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "description": "Optional timestamp after which the discount is redeemable."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Starts At"
                    },
                    "ends_at": {
                        "anyOf": [
                            {
                                "anyOf": [
                                    {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "description": "Optional timestamp after which the discount is no longer redeemable."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Ends At"
                    },
                    "max_redemptions": {
                        "anyOf": [
                            {
                                "anyOf": [
                                    {
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "description": "Optional maximum number of times the discount can be redeemed."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Redemptions"
                    },
                    "duration": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/DiscountDuration"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "duration_in_months": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 1,
                                "description": "Number of months the discount should be applied.\n\nFor this to work on yearly pricing, you should multiply this by 12.\nFor example, to apply the discount for 2 years, set this to 24."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Duration In Months"
                    },
                    "type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/DiscountType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "amount": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 0,
                                "description": "Fixed amount to discount from the invoice total."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Amount"
                    },
                    "currency": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "usd",
                                "description": "The currency. Currently, only `usd` is supported.",
                                "default": "usd"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Currency"
                    },
                    "basis_points": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 10000,
                                "minimum": 1,
                                "description": "Discount percentage in basis points.\n\nA basis point is 1/100th of a percent.\nFor example, to create a 25.5% discount, set this to 2550."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Basis Points"
                    },
                    "products": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                "type": "array",
                                "description": "List of product IDs the discount can be applied to."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Products"
                    }
                },
                "type": "object",
                "title": "DiscountUpdate",
                "description": "Schema to update a discount."
            },
            "DownloadableFileCreate": {
                "properties": {
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4",
                                "description": "The organization ID.",
                                "x-polar-selector-widget": {
                                    "displayProperty": "name",
                                    "resourceName": "Organization",
                                    "resourceRoot": "/v1/organizations"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "mime_type": {
                        "type": "string",
                        "title": "Mime Type"
                    },
                    "size": {
                        "type": "integer",
                        "title": "Size"
                    },
                    "checksum_sha256_base64": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Checksum Sha256 Base64"
                    },
                    "upload": {
                        "$ref": "#/components/schemas/S3FileCreateMultipart"
                    },
                    "service": {
                        "type": "string",
                        "enum": [
                            "downloadable"
                        ],
                        "const": "downloadable",
                        "title": "Service"
                    },
                    "version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Version"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "mime_type",
                    "size",
                    "upload",
                    "service"
                ],
                "title": "DownloadableFileCreate",
                "description": "Schema to create a file to be associated with the downloadables benefit."
            },
            "DownloadableFileRead": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "path": {
                        "type": "string",
                        "title": "Path"
                    },
                    "mime_type": {
                        "type": "string",
                        "title": "Mime Type"
                    },
                    "size": {
                        "type": "integer",
                        "title": "Size"
                    },
                    "storage_version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Storage Version"
                    },
                    "checksum_etag": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Checksum Etag"
                    },
                    "checksum_sha256_base64": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Checksum Sha256 Base64"
                    },
                    "checksum_sha256_hex": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Checksum Sha256 Hex"
                    },
                    "last_modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Modified At"
                    },
                    "version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Version"
                    },
                    "service": {
                        "type": "string",
                        "enum": [
                            "downloadable"
                        ],
                        "const": "downloadable",
                        "title": "Service"
                    },
                    "is_uploaded": {
                        "type": "boolean",
                        "title": "Is Uploaded"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "size_readable": {
                        "type": "string",
                        "title": "Size Readable",
                        "readOnly": true
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "organization_id",
                    "name",
                    "path",
                    "mime_type",
                    "size",
                    "storage_version",
                    "checksum_etag",
                    "checksum_sha256_base64",
                    "checksum_sha256_hex",
                    "last_modified_at",
                    "version",
                    "service",
                    "is_uploaded",
                    "created_at",
                    "size_readable"
                ],
                "title": "DownloadableFileRead",
                "description": "File to be associated with the downloadables benefit."
            },
            "DownloadableRead": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "benefit_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Benefit Id"
                    },
                    "file": {
                        "$ref": "#/components/schemas/FileDownload"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "benefit_id",
                    "file"
                ],
                "title": "DownloadableRead"
            },
            "Entry": {
                "properties": {
                    "type": {
                        "type": "string",
                        "title": "Type"
                    },
                    "id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "string",
                                "format": "uuid"
                            }
                        ],
                        "title": "Id"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/Issue"
                    },
                    "rewards": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/Reward"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rewards"
                    },
                    "pledges_summary": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PledgesTypeSummaries"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "pledges": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/Pledge"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pledges"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "id",
                    "attributes",
                    "rewards",
                    "pledges_summary",
                    "pledges"
                ],
                "title": "Entry"
            },
            "ExistingProductPrice": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "ExistingProductPrice",
                "description": "A price that already exists for this product.\n\nUseful when updating a product if you want to keep an existing price."
            },
            "ExternalOrganization": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "platform": {
                        "$ref": "#/components/schemas/Platforms"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "avatar_url": {
                        "type": "string",
                        "title": "Avatar Url"
                    },
                    "is_personal": {
                        "type": "boolean",
                        "title": "Is Personal"
                    },
                    "bio": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Bio"
                    },
                    "pretty_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pretty Name"
                    },
                    "company": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Company"
                    },
                    "blog": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Blog"
                    },
                    "location": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Location"
                    },
                    "email": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Email"
                    },
                    "twitter_username": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Twitter Username"
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4",
                                "description": "The organization ID.",
                                "x-polar-selector-widget": {
                                    "displayProperty": "name",
                                    "resourceName": "Organization",
                                    "resourceRoot": "/v1/organizations"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "platform",
                    "name",
                    "avatar_url",
                    "is_personal",
                    "bio",
                    "pretty_name",
                    "company",
                    "blog",
                    "location",
                    "email",
                    "twitter_username",
                    "organization_id"
                ],
                "title": "ExternalOrganization"
            },
            "ExternalOrganizationSortProperty": {
                "type": "string",
                "enum": [
                    "created_at",
                    "-created_at",
                    "name",
                    "-name"
                ],
                "title": "ExternalOrganizationSortProperty"
            },
            "FileCreate": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DownloadableFileCreate"
                    },
                    {
                        "$ref": "#/components/schemas/ProductMediaFileCreate"
                    },
                    {
                        "$ref": "#/components/schemas/OrganizationAvatarFileCreate"
                    }
                ],
                "discriminator": {
                    "propertyName": "service",
                    "mapping": {
                        "downloadable": "#/components/schemas/DownloadableFileCreate",
                        "organization_avatar": "#/components/schemas/OrganizationAvatarFileCreate",
                        "product_media": "#/components/schemas/ProductMediaFileCreate"
                    }
                }
            },
            "FileDownload": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "path": {
                        "type": "string",
                        "title": "Path"
                    },
                    "mime_type": {
                        "type": "string",
                        "title": "Mime Type"
                    },
                    "size": {
                        "type": "integer",
                        "title": "Size"
                    },
                    "storage_version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Storage Version"
                    },
                    "checksum_etag": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Checksum Etag"
                    },
                    "checksum_sha256_base64": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Checksum Sha256 Base64"
                    },
                    "checksum_sha256_hex": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Checksum Sha256 Hex"
                    },
                    "last_modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Modified At"
                    },
                    "download": {
                        "$ref": "#/components/schemas/S3DownloadURL"
                    },
                    "version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Version"
                    },
                    "is_uploaded": {
                        "type": "boolean",
                        "title": "Is Uploaded"
                    },
                    "service": {
                        "$ref": "#/components/schemas/FileServiceTypes"
                    },
                    "size_readable": {
                        "type": "string",
                        "title": "Size Readable",
                        "readOnly": true
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "organization_id",
                    "name",
                    "path",
                    "mime_type",
                    "size",
                    "storage_version",
                    "checksum_etag",
                    "checksum_sha256_base64",
                    "checksum_sha256_hex",
                    "last_modified_at",
                    "download",
                    "version",
                    "is_uploaded",
                    "service",
                    "size_readable"
                ],
                "title": "FileDownload"
            },
            "FilePatch": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Version"
                    }
                },
                "type": "object",
                "title": "FilePatch"
            },
            "FileServiceTypes": {
                "type": "string",
                "enum": [
                    "downloadable",
                    "product_media",
                    "organization_avatar"
                ],
                "title": "FileServiceTypes"
            },
            "FileUpload": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "path": {
                        "type": "string",
                        "title": "Path"
                    },
                    "mime_type": {
                        "type": "string",
                        "title": "Mime Type"
                    },
                    "size": {
                        "type": "integer",
                        "title": "Size"
                    },
                    "storage_version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Storage Version"
                    },
                    "checksum_etag": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Checksum Etag"
                    },
                    "checksum_sha256_base64": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Checksum Sha256 Base64"
                    },
                    "checksum_sha256_hex": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Checksum Sha256 Hex"
                    },
                    "last_modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Modified At"
                    },
                    "upload": {
                        "$ref": "#/components/schemas/S3FileUploadMultipart"
                    },
                    "version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Version"
                    },
                    "is_uploaded": {
                        "type": "boolean",
                        "title": "Is Uploaded",
                        "default": false
                    },
                    "service": {
                        "$ref": "#/components/schemas/FileServiceTypes"
                    },
                    "size_readable": {
                        "type": "string",
                        "title": "Size Readable",
                        "readOnly": true
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "organization_id",
                    "name",
                    "path",
                    "mime_type",
                    "size",
                    "storage_version",
                    "checksum_etag",
                    "checksum_sha256_base64",
                    "checksum_sha256_hex",
                    "last_modified_at",
                    "upload",
                    "version",
                    "service",
                    "size_readable"
                ],
                "title": "FileUpload"
            },
            "FileUploadCompleted": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "path": {
                        "type": "string",
                        "title": "Path"
                    },
                    "parts": {
                        "items": {
                            "$ref": "#/components/schemas/S3FileUploadCompletedPart"
                        },
                        "type": "array",
                        "title": "Parts"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "path",
                    "parts"
                ],
                "title": "FileUploadCompleted"
            },
            "Funding": {
                "properties": {
                    "funding_goal": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyAmount"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "pledges_sum": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyAmount"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Sum of pledges to this isuse (including currently open pledges and pledges that have been paid out). Always in USD."
                    }
                },
                "type": "object",
                "title": "Funding"
            },
            "GitHubInvitesBenefitOrganization": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "is_personal": {
                        "type": "boolean",
                        "title": "Is Personal"
                    },
                    "plan_name": {
                        "type": "string",
                        "title": "Plan Name"
                    },
                    "is_free": {
                        "type": "boolean",
                        "title": "Is Free"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "is_personal",
                    "plan_name",
                    "is_free"
                ],
                "title": "GitHubInvitesBenefitOrganization"
            },
            "GitHubInvitesBenefitRepositories": {
                "properties": {
                    "repositories": {
                        "items": {
                            "$ref": "#/components/schemas/GitHubInvitesBenefitRepository"
                        },
                        "type": "array",
                        "title": "Repositories"
                    },
                    "organizations": {
                        "items": {
                            "$ref": "#/components/schemas/GitHubInvitesBenefitOrganization"
                        },
                        "type": "array",
                        "title": "Organizations"
                    }
                },
                "type": "object",
                "required": [
                    "repositories",
                    "organizations"
                ],
                "title": "GitHubInvitesBenefitRepositories"
            },
            "GitHubInvitesBenefitRepository": {
                "properties": {
                    "repository_owner": {
                        "type": "string",
                        "title": "Repository Owner"
                    },
                    "repository_name": {
                        "type": "string",
                        "title": "Repository Name"
                    }
                },
                "type": "object",
                "required": [
                    "repository_owner",
                    "repository_name"
                ],
                "title": "GitHubInvitesBenefitRepository"
            },
            "GithubUser": {
                "properties": {
                    "username": {
                        "type": "string",
                        "title": "Username"
                    },
                    "avatar_url": {
                        "type": "string",
                        "title": "Avatar Url"
                    }
                },
                "type": "object",
                "required": [
                    "username",
                    "avatar_url"
                ],
                "title": "GithubUser"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "InstallationCreate": {
                "properties": {
                    "installation_id": {
                        "type": "integer",
                        "title": "Installation Id"
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "installation_id",
                    "organization_id"
                ],
                "title": "InstallationCreate"
            },
            "Interval": {
                "type": "string",
                "enum": [
                    "year",
                    "month",
                    "week",
                    "day",
                    "hour"
                ],
                "title": "Interval"
            },
            "IntrospectTokenResponse": {
                "properties": {
                    "active": {
                        "type": "boolean",
                        "title": "Active"
                    },
                    "client_id": {
                        "type": "string",
                        "title": "Client Id"
                    },
                    "token_type": {
                        "type": "string",
                        "enum": [
                            "access_token",
                            "refresh_token"
                        ],
                        "title": "Token Type"
                    },
                    "scope": {
                        "type": "string",
                        "title": "Scope"
                    },
                    "sub_type": {
                        "$ref": "#/components/schemas/SubType"
                    },
                    "sub": {
                        "type": "string",
                        "title": "Sub"
                    },
                    "aud": {
                        "type": "string",
                        "title": "Aud"
                    },
                    "iss": {
                        "type": "string",
                        "title": "Iss"
                    },
                    "exp": {
                        "type": "integer",
                        "title": "Exp"
                    },
                    "iat": {
                        "type": "integer",
                        "title": "Iat"
                    }
                },
                "type": "object",
                "required": [
                    "active",
                    "client_id",
                    "token_type",
                    "scope",
                    "sub_type",
                    "sub",
                    "aud",
                    "iss",
                    "exp",
                    "iat"
                ],
                "title": "IntrospectTokenResponse"
            },
            "Issue": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "platform": {
                        "$ref": "#/components/schemas/Platforms",
                        "description": "Issue platform (currently always GitHub)"
                    },
                    "number": {
                        "type": "integer",
                        "title": "Number",
                        "description": "GitHub #number"
                    },
                    "title": {
                        "type": "string",
                        "title": "Title",
                        "description": "GitHub issue title"
                    },
                    "body": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Body",
                        "description": "GitHub issue body"
                    },
                    "comments": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Comments",
                        "description": "Number of GitHub comments made on the issue"
                    },
                    "labels": {
                        "items": {
                            "$ref": "#/components/schemas/Label"
                        },
                        "type": "array",
                        "title": "Labels",
                        "default": []
                    },
                    "author": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Author"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "GitHub author"
                    },
                    "assignees": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/Assignee"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Assignees",
                        "description": "GitHub assignees"
                    },
                    "reactions": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Reactions"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "GitHub reactions"
                    },
                    "state": {
                        "$ref": "#/components/schemas/State"
                    },
                    "issue_closed_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Issue Closed At"
                    },
                    "issue_modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Issue Modified At"
                    },
                    "issue_created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Issue Created At"
                    },
                    "needs_confirmation_solved": {
                        "type": "boolean",
                        "title": "Needs Confirmation Solved",
                        "description": "If a maintainer needs to mark this issue as solved"
                    },
                    "confirmed_solved_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Confirmed Solved At",
                        "description": "If this issue has been marked as confirmed solved through Polar"
                    },
                    "funding": {
                        "$ref": "#/components/schemas/Funding"
                    },
                    "repository": {
                        "$ref": "#/components/schemas/Repository",
                        "description": "The repository that the issue is in"
                    },
                    "upfront_split_to_contributors": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Upfront Split To Contributors",
                        "description": "Share of rewrads that will be rewarded to contributors of this issue. A number between 0 and 100 (inclusive)."
                    },
                    "pledge_badge_currently_embedded": {
                        "type": "boolean",
                        "title": "Pledge Badge Currently Embedded",
                        "description": "If this issue currently has the Polar badge SVG embedded"
                    },
                    "badge_custom_content": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Badge Custom Content",
                        "description": "Optional custom badge SVG promotional content"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "platform",
                    "number",
                    "title",
                    "state",
                    "issue_created_at",
                    "needs_confirmation_solved",
                    "funding",
                    "repository",
                    "pledge_badge_currently_embedded"
                ],
                "title": "Issue"
            },
            "IssueFunding": {
                "properties": {
                    "issue": {
                        "$ref": "#/components/schemas/Issue"
                    },
                    "funding_goal": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyAmount"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "total": {
                        "$ref": "#/components/schemas/CurrencyAmount"
                    },
                    "pledges_summaries": {
                        "$ref": "#/components/schemas/PledgesTypeSummaries"
                    }
                },
                "type": "object",
                "required": [
                    "issue",
                    "funding_goal",
                    "total",
                    "pledges_summaries"
                ],
                "title": "IssueFunding"
            },
            "IssueListResponse": {
                "properties": {
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/Entry"
                        },
                        "type": "array",
                        "title": "Data"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/PaginationResponse"
                    }
                },
                "type": "object",
                "required": [
                    "data",
                    "pagination"
                ],
                "title": "IssueListResponse"
            },
            "IssueSortBy": {
                "type": "string",
                "enum": [
                    "newest",
                    "recently_updated",
                    "least_recently_updated",
                    "pledged_amount_desc",
                    "relevance",
                    "dependencies_default",
                    "issues_default",
                    "most_engagement",
                    "most_positive_reactions",
                    "funding_goal_desc_and_most_positive_reactions",
                    "most_recently_funded"
                ],
                "title": "IssueSortBy"
            },
            "IssueSortProperty": {
                "type": "string",
                "enum": [
                    "created_at",
                    "-created_at",
                    "modified_at",
                    "-modified_at",
                    "engagement",
                    "-engagement",
                    "positive_reactions",
                    "-positive_reactions",
                    "funding_goal",
                    "-funding_goal"
                ],
                "title": "IssueSortProperty"
            },
            "IssueUpdateBadgeMessage": {
                "properties": {
                    "message": {
                        "type": "string",
                        "title": "Message"
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "IssueUpdateBadgeMessage"
            },
            "Label": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "color": {
                        "type": "string",
                        "title": "Color"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "color"
                ],
                "title": "Label"
            },
            "LicenseKeyActivate": {
                "properties": {
                    "key": {
                        "type": "string",
                        "title": "Key"
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id"
                    },
                    "label": {
                        "type": "string",
                        "title": "Label"
                    },
                    "conditions": {
                        "type": "object",
                        "title": "Conditions",
                        "default": {}
                    },
                    "meta": {
                        "type": "object",
                        "title": "Meta",
                        "default": {}
                    }
                },
                "type": "object",
                "required": [
                    "key",
                    "organization_id",
                    "label"
                ],
                "title": "LicenseKeyActivate"
            },
            "LicenseKeyActivationBase": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "license_key_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "License Key Id"
                    },
                    "label": {
                        "type": "string",
                        "title": "Label"
                    },
                    "meta": {
                        "type": "object",
                        "title": "Meta"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "license_key_id",
                    "label",
                    "meta",
                    "created_at",
                    "modified_at"
                ],
                "title": "LicenseKeyActivationBase"
            },
            "LicenseKeyActivationRead": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "license_key_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "License Key Id"
                    },
                    "label": {
                        "type": "string",
                        "title": "Label"
                    },
                    "meta": {
                        "type": "object",
                        "title": "Meta"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At"
                    },
                    "license_key": {
                        "$ref": "#/components/schemas/LicenseKeyRead"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "license_key_id",
                    "label",
                    "meta",
                    "created_at",
                    "modified_at",
                    "license_key"
                ],
                "title": "LicenseKeyActivationRead"
            },
            "LicenseKeyCustomer": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "email_verified": {
                        "type": "boolean",
                        "title": "Email Verified"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "billing_address": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Address"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "tax_id": {
                        "anyOf": [
                            {
                                "prefixItems": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "$ref": "#/components/schemas/TaxIDFormat"
                                    }
                                ],
                                "type": "array",
                                "maxItems": 2,
                                "minItems": 2
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tax Id"
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id"
                    },
                    "avatar_url": {
                        "type": "string",
                        "title": "Avatar Url",
                        "readOnly": true
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "metadata",
                    "email",
                    "email_verified",
                    "name",
                    "billing_address",
                    "tax_id",
                    "organization_id",
                    "avatar_url"
                ],
                "title": "LicenseKeyCustomer"
            },
            "LicenseKeyDeactivate": {
                "properties": {
                    "key": {
                        "type": "string",
                        "title": "Key"
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id"
                    },
                    "activation_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Activation Id"
                    }
                },
                "type": "object",
                "required": [
                    "key",
                    "organization_id",
                    "activation_id"
                ],
                "title": "LicenseKeyDeactivate"
            },
            "LicenseKeyRead": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "User Id",
                        "deprecated": true
                    },
                    "customer_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Customer Id"
                    },
                    "user": {
                        "$ref": "#/components/schemas/LicenseKeyUser",
                        "deprecated": true
                    },
                    "customer": {
                        "$ref": "#/components/schemas/LicenseKeyCustomer"
                    },
                    "benefit_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Benefit Id",
                        "description": "The benefit ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "description",
                            "resourceName": "Benefit",
                            "resourceRoot": "/v1/benefits"
                        }
                    },
                    "key": {
                        "type": "string",
                        "title": "Key"
                    },
                    "display_key": {
                        "type": "string",
                        "title": "Display Key"
                    },
                    "status": {
                        "$ref": "#/components/schemas/LicenseKeyStatus"
                    },
                    "limit_activations": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Limit Activations"
                    },
                    "usage": {
                        "type": "integer",
                        "title": "Usage"
                    },
                    "limit_usage": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Limit Usage"
                    },
                    "validations": {
                        "type": "integer",
                        "title": "Validations"
                    },
                    "last_validated_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Validated At"
                    },
                    "expires_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Expires At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "organization_id",
                    "user_id",
                    "customer_id",
                    "user",
                    "customer",
                    "benefit_id",
                    "key",
                    "display_key",
                    "status",
                    "limit_activations",
                    "usage",
                    "limit_usage",
                    "validations",
                    "last_validated_at",
                    "expires_at"
                ],
                "title": "LicenseKeyRead"
            },
            "LicenseKeyStatus": {
                "type": "string",
                "enum": [
                    "granted",
                    "revoked",
                    "disabled"
                ],
                "title": "LicenseKeyStatus"
            },
            "LicenseKeyUpdate": {
                "properties": {
                    "status": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/LicenseKeyStatus"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "usage": {
                        "type": "integer",
                        "title": "Usage",
                        "default": 0
                    },
                    "limit_activations": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 50,
                                "exclusiveMinimum": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Limit Activations"
                    },
                    "limit_usage": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "exclusiveMinimum": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Limit Usage"
                    },
                    "expires_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Expires At"
                    }
                },
                "type": "object",
                "title": "LicenseKeyUpdate"
            },
            "LicenseKeyUser": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "public_name": {
                        "type": "string",
                        "title": "Public Name"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "email",
                    "public_name"
                ],
                "title": "LicenseKeyUser"
            },
            "LicenseKeyValidate": {
                "properties": {
                    "key": {
                        "type": "string",
                        "title": "Key"
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id"
                    },
                    "activation_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Activation Id"
                    },
                    "benefit_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4",
                                "description": "The benefit ID.",
                                "x-polar-selector-widget": {
                                    "displayProperty": "description",
                                    "resourceName": "Benefit",
                                    "resourceRoot": "/v1/benefits"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Benefit Id"
                    },
                    "customer_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Id"
                    },
                    "increment_usage": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Increment Usage"
                    },
                    "conditions": {
                        "type": "object",
                        "title": "Conditions",
                        "default": {}
                    }
                },
                "type": "object",
                "required": [
                    "key",
                    "organization_id"
                ],
                "title": "LicenseKeyValidate"
            },
            "LicenseKeyWithActivations": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "User Id",
                        "deprecated": true
                    },
                    "customer_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Customer Id"
                    },
                    "user": {
                        "$ref": "#/components/schemas/LicenseKeyUser",
                        "deprecated": true
                    },
                    "customer": {
                        "$ref": "#/components/schemas/LicenseKeyCustomer"
                    },
                    "benefit_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Benefit Id",
                        "description": "The benefit ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "description",
                            "resourceName": "Benefit",
                            "resourceRoot": "/v1/benefits"
                        }
                    },
                    "key": {
                        "type": "string",
                        "title": "Key"
                    },
                    "display_key": {
                        "type": "string",
                        "title": "Display Key"
                    },
                    "status": {
                        "$ref": "#/components/schemas/LicenseKeyStatus"
                    },
                    "limit_activations": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Limit Activations"
                    },
                    "usage": {
                        "type": "integer",
                        "title": "Usage"
                    },
                    "limit_usage": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Limit Usage"
                    },
                    "validations": {
                        "type": "integer",
                        "title": "Validations"
                    },
                    "last_validated_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Validated At"
                    },
                    "expires_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Expires At"
                    },
                    "activations": {
                        "items": {
                            "$ref": "#/components/schemas/LicenseKeyActivationBase"
                        },
                        "type": "array",
                        "title": "Activations"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "organization_id",
                    "user_id",
                    "customer_id",
                    "user",
                    "customer",
                    "benefit_id",
                    "key",
                    "display_key",
                    "status",
                    "limit_activations",
                    "usage",
                    "limit_usage",
                    "validations",
                    "last_validated_at",
                    "expires_at",
                    "activations"
                ],
                "title": "LicenseKeyWithActivations"
            },
            "ListFundingSortBy": {
                "type": "string",
                "enum": [
                    "oldest",
                    "newest",
                    "most_funded",
                    "most_recently_funded",
                    "most_engagement"
                ],
                "title": "ListFundingSortBy"
            },
            "ListResource_Account_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Account"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[Account]"
            },
            "ListResource_BackofficeReward_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/BackofficeReward"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[BackofficeReward]"
            },
            "ListResource_BenefitGrant_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/BenefitGrant"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[BenefitGrant]"
            },
            "ListResource_Benefit_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Benefit",
                            "title": "Benefit"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[Benefit]"
            },
            "ListResource_CheckoutLink_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/CheckoutLink"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[CheckoutLink]"
            },
            "ListResource_Checkout_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Checkout"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[Checkout]"
            },
            "ListResource_CustomField_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/CustomField",
                            "title": "CustomField"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[CustomField]"
            },
            "ListResource_CustomerBenefitGrant_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/CustomerBenefitGrant",
                            "title": "CustomerBenefitGrant"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[CustomerBenefitGrant]"
            },
            "ListResource_CustomerOrder_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/CustomerOrder"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[CustomerOrder]"
            },
            "ListResource_CustomerSubscription_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/CustomerSubscription"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[CustomerSubscription]"
            },
            "ListResource_Customer_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Customer"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[Customer]"
            },
            "ListResource_Discount_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Discount",
                            "title": "Discount"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[Discount]"
            },
            "ListResource_DownloadableRead_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/DownloadableRead"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[DownloadableRead]"
            },
            "ListResource_ExternalOrganization_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/ExternalOrganization"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[ExternalOrganization]"
            },
            "ListResource_FileRead_": {
                "properties": {
                    "items": {
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/DownloadableFileRead"
                                },
                                {
                                    "$ref": "#/components/schemas/ProductMediaFileRead"
                                },
                                {
                                    "$ref": "#/components/schemas/OrganizationAvatarFileRead"
                                }
                            ],
                            "title": "FileRead",
                            "discriminator": {
                                "propertyName": "service",
                                "mapping": {
                                    "downloadable": "#/components/schemas/DownloadableFileRead",
                                    "organization_avatar": "#/components/schemas/OrganizationAvatarFileRead",
                                    "product_media": "#/components/schemas/ProductMediaFileRead"
                                }
                            }
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[FileRead]"
            },
            "ListResource_IssueFunding_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/IssueFunding"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[IssueFunding]"
            },
            "ListResource_Issue_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Issue"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[Issue]"
            },
            "ListResource_LicenseKeyRead_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/LicenseKeyRead"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[LicenseKeyRead]"
            },
            "ListResource_OAuth2Client_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/OAuth2Client"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[OAuth2Client]"
            },
            "ListResource_Order_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Order"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[Order]"
            },
            "ListResource_OrganizationMember_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/OrganizationMember"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[OrganizationMember]"
            },
            "ListResource_Organization_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Organization"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[Organization]"
            },
            "ListResource_PaymentMethod_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/PaymentMethod"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[PaymentMethod]"
            },
            "ListResource_PersonalAccessToken_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/PersonalAccessToken"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[PersonalAccessToken]"
            },
            "ListResource_Pledge_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Pledge"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[Pledge]"
            },
            "ListResource_Product_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Product"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[Product]"
            },
            "ListResource_Repository_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Repository"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[Repository]"
            },
            "ListResource_Reward_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Reward"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[Reward]"
            },
            "ListResource_Subscription_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Subscription"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[Subscription]"
            },
            "ListResource_Transaction_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Transaction"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[Transaction]"
            },
            "ListResource_WebhookDelivery_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/WebhookDelivery"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[WebhookDelivery]"
            },
            "ListResource_WebhookEndpoint_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/WebhookEndpoint"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "pagination"
                ],
                "title": "ListResource[WebhookEndpoint]"
            },
            "LookupUserRequest": {
                "properties": {
                    "username": {
                        "type": "string",
                        "title": "Username"
                    }
                },
                "type": "object",
                "required": [
                    "username"
                ],
                "title": "LookupUserRequest"
            },
            "MagicLinkRequest": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "return_to": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Return To"
                    },
                    "attribution": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/UserSignupAttribution"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "email"
                ],
                "title": "MagicLinkRequest"
            },
            "MaintainerAccountReviewedNotification": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "MaintainerAccountReviewedNotification"
                        ],
                        "const": "MaintainerAccountReviewedNotification",
                        "title": "Type"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/MaintainerAccountReviewedNotificationPayload"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "created_at",
                    "type",
                    "payload"
                ],
                "title": "MaintainerAccountReviewedNotification"
            },
            "MaintainerAccountReviewedNotificationPayload": {
                "properties": {
                    "account_type": {
                        "type": "string",
                        "title": "Account Type"
                    }
                },
                "type": "object",
                "required": [
                    "account_type"
                ],
                "title": "MaintainerAccountReviewedNotificationPayload"
            },
            "MaintainerAccountUnderReviewNotification": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "MaintainerAccountUnderReviewNotification"
                        ],
                        "const": "MaintainerAccountUnderReviewNotification",
                        "title": "Type"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/MaintainerAccountUnderReviewNotificationPayload"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "created_at",
                    "type",
                    "payload"
                ],
                "title": "MaintainerAccountUnderReviewNotification"
            },
            "MaintainerAccountUnderReviewNotificationPayload": {
                "properties": {
                    "account_type": {
                        "type": "string",
                        "title": "Account Type"
                    }
                },
                "type": "object",
                "required": [
                    "account_type"
                ],
                "title": "MaintainerAccountUnderReviewNotificationPayload"
            },
            "MaintainerCreateAccountNotification": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "MaintainerCreateAccountNotification"
                        ],
                        "const": "MaintainerCreateAccountNotification",
                        "title": "Type"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/MaintainerCreateAccountNotificationPayload"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "created_at",
                    "type",
                    "payload"
                ],
                "title": "MaintainerCreateAccountNotification"
            },
            "MaintainerCreateAccountNotificationPayload": {
                "properties": {
                    "organization_name": {
                        "type": "string",
                        "title": "Organization Name"
                    },
                    "url": {
                        "type": "string",
                        "title": "Url"
                    }
                },
                "type": "object",
                "required": [
                    "organization_name",
                    "url"
                ],
                "title": "MaintainerCreateAccountNotificationPayload"
            },
            "MaintainerNewPaidSubscriptionNotification": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "MaintainerNewPaidSubscriptionNotification"
                        ],
                        "const": "MaintainerNewPaidSubscriptionNotification",
                        "title": "Type"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/MaintainerNewPaidSubscriptionNotificationPayload"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "created_at",
                    "type",
                    "payload"
                ],
                "title": "MaintainerNewPaidSubscriptionNotification"
            },
            "MaintainerNewPaidSubscriptionNotificationPayload": {
                "properties": {
                    "subscriber_name": {
                        "type": "string",
                        "title": "Subscriber Name"
                    },
                    "tier_name": {
                        "type": "string",
                        "title": "Tier Name"
                    },
                    "tier_price_amount": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tier Price Amount"
                    },
                    "tier_price_recurring_interval": {
                        "type": "string",
                        "title": "Tier Price Recurring Interval"
                    },
                    "tier_organization_name": {
                        "type": "string",
                        "title": "Tier Organization Name"
                    }
                },
                "type": "object",
                "required": [
                    "subscriber_name",
                    "tier_name",
                    "tier_price_amount",
                    "tier_price_recurring_interval",
                    "tier_organization_name"
                ],
                "title": "MaintainerNewPaidSubscriptionNotificationPayload"
            },
            "MaintainerNewProductSaleNotification": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "MaintainerNewProductSaleNotification"
                        ],
                        "const": "MaintainerNewProductSaleNotification",
                        "title": "Type"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/MaintainerNewProductSaleNotificationPayload"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "created_at",
                    "type",
                    "payload"
                ],
                "title": "MaintainerNewProductSaleNotification"
            },
            "MaintainerNewProductSaleNotificationPayload": {
                "properties": {
                    "customer_name": {
                        "type": "string",
                        "title": "Customer Name"
                    },
                    "product_name": {
                        "type": "string",
                        "title": "Product Name"
                    },
                    "product_price_amount": {
                        "type": "integer",
                        "title": "Product Price Amount"
                    },
                    "organization_name": {
                        "type": "string",
                        "title": "Organization Name"
                    }
                },
                "type": "object",
                "required": [
                    "customer_name",
                    "product_name",
                    "product_price_amount",
                    "organization_name"
                ],
                "title": "MaintainerNewProductSaleNotificationPayload"
            },
            "MaintainerPledgeConfirmationPendingNotification": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "MaintainerPledgeConfirmationPendingNotification"
                        ],
                        "const": "MaintainerPledgeConfirmationPendingNotification",
                        "title": "Type"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/MaintainerPledgeConfirmationPendingNotificationPayload"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "created_at",
                    "type",
                    "payload"
                ],
                "title": "MaintainerPledgeConfirmationPendingNotification"
            },
            "MaintainerPledgeConfirmationPendingNotificationPayload": {
                "properties": {
                    "pledger_name": {
                        "type": "string",
                        "title": "Pledger Name"
                    },
                    "pledge_amount": {
                        "type": "string",
                        "title": "Pledge Amount"
                    },
                    "issue_url": {
                        "type": "string",
                        "title": "Issue Url"
                    },
                    "issue_title": {
                        "type": "string",
                        "title": "Issue Title"
                    },
                    "issue_org_name": {
                        "type": "string",
                        "title": "Issue Org Name"
                    },
                    "issue_repo_name": {
                        "type": "string",
                        "title": "Issue Repo Name"
                    },
                    "issue_number": {
                        "type": "integer",
                        "title": "Issue Number"
                    },
                    "maintainer_has_stripe_account": {
                        "type": "boolean",
                        "title": "Maintainer Has Stripe Account"
                    },
                    "pledge_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pledge Id"
                    }
                },
                "type": "object",
                "required": [
                    "pledger_name",
                    "pledge_amount",
                    "issue_url",
                    "issue_title",
                    "issue_org_name",
                    "issue_repo_name",
                    "issue_number",
                    "maintainer_has_stripe_account",
                    "pledge_id"
                ],
                "title": "MaintainerPledgeConfirmationPendingNotificationPayload"
            },
            "MaintainerPledgeCreatedNotification": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "MaintainerPledgeCreatedNotification"
                        ],
                        "const": "MaintainerPledgeCreatedNotification",
                        "title": "Type"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/MaintainerPledgeCreatedNotificationPayload"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "created_at",
                    "type",
                    "payload"
                ],
                "title": "MaintainerPledgeCreatedNotification"
            },
            "MaintainerPledgeCreatedNotificationPayload": {
                "properties": {
                    "pledger_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pledger Name"
                    },
                    "pledge_amount": {
                        "type": "string",
                        "title": "Pledge Amount"
                    },
                    "issue_url": {
                        "type": "string",
                        "title": "Issue Url"
                    },
                    "issue_title": {
                        "type": "string",
                        "title": "Issue Title"
                    },
                    "issue_org_name": {
                        "type": "string",
                        "title": "Issue Org Name"
                    },
                    "issue_repo_name": {
                        "type": "string",
                        "title": "Issue Repo Name"
                    },
                    "issue_number": {
                        "type": "integer",
                        "title": "Issue Number"
                    },
                    "maintainer_has_stripe_account": {
                        "type": "boolean",
                        "title": "Maintainer Has Stripe Account"
                    },
                    "pledge_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pledge Id"
                    },
                    "pledge_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PledgeType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "pledger_name",
                    "pledge_amount",
                    "issue_url",
                    "issue_title",
                    "issue_org_name",
                    "issue_repo_name",
                    "issue_number",
                    "maintainer_has_stripe_account",
                    "pledge_id",
                    "pledge_type"
                ],
                "title": "MaintainerPledgeCreatedNotificationPayload"
            },
            "MaintainerPledgePaidNotification": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "MaintainerPledgePaidNotification"
                        ],
                        "const": "MaintainerPledgePaidNotification",
                        "title": "Type"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/MaintainerPledgePaidNotificationPayload"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "created_at",
                    "type",
                    "payload"
                ],
                "title": "MaintainerPledgePaidNotification"
            },
            "MaintainerPledgePaidNotificationPayload": {
                "properties": {
                    "paid_out_amount": {
                        "type": "string",
                        "title": "Paid Out Amount"
                    },
                    "issue_url": {
                        "type": "string",
                        "title": "Issue Url"
                    },
                    "issue_title": {
                        "type": "string",
                        "title": "Issue Title"
                    },
                    "issue_org_name": {
                        "type": "string",
                        "title": "Issue Org Name"
                    },
                    "issue_repo_name": {
                        "type": "string",
                        "title": "Issue Repo Name"
                    },
                    "issue_number": {
                        "type": "integer",
                        "title": "Issue Number"
                    },
                    "pledge_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pledge Id"
                    }
                },
                "type": "object",
                "required": [
                    "paid_out_amount",
                    "issue_url",
                    "issue_title",
                    "issue_org_name",
                    "issue_repo_name",
                    "issue_number",
                    "pledge_id"
                ],
                "title": "MaintainerPledgePaidNotificationPayload"
            },
            "MaintainerPledgePendingNotification": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "MaintainerPledgePendingNotification"
                        ],
                        "const": "MaintainerPledgePendingNotification",
                        "title": "Type"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/MaintainerPledgePendingNotificationPayload"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "created_at",
                    "type",
                    "payload"
                ],
                "title": "MaintainerPledgePendingNotification"
            },
            "MaintainerPledgePendingNotificationPayload": {
                "properties": {
                    "pledger_name": {
                        "type": "string",
                        "title": "Pledger Name"
                    },
                    "pledge_amount": {
                        "type": "string",
                        "title": "Pledge Amount"
                    },
                    "issue_url": {
                        "type": "string",
                        "title": "Issue Url"
                    },
                    "issue_title": {
                        "type": "string",
                        "title": "Issue Title"
                    },
                    "issue_org_name": {
                        "type": "string",
                        "title": "Issue Org Name"
                    },
                    "issue_repo_name": {
                        "type": "string",
                        "title": "Issue Repo Name"
                    },
                    "issue_number": {
                        "type": "integer",
                        "title": "Issue Number"
                    },
                    "maintainer_has_stripe_account": {
                        "type": "boolean",
                        "title": "Maintainer Has Stripe Account"
                    },
                    "pledge_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pledge Id"
                    }
                },
                "type": "object",
                "required": [
                    "pledger_name",
                    "pledge_amount",
                    "issue_url",
                    "issue_title",
                    "issue_org_name",
                    "issue_repo_name",
                    "issue_number",
                    "maintainer_has_stripe_account",
                    "pledge_id"
                ],
                "title": "MaintainerPledgePendingNotificationPayload"
            },
            "MaintainerPledgedIssueConfirmationPendingNotification": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "MaintainerPledgedIssueConfirmationPendingNotification"
                        ],
                        "const": "MaintainerPledgedIssueConfirmationPendingNotification",
                        "title": "Type"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/MaintainerPledgedIssueConfirmationPendingNotificationPayload"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "created_at",
                    "type",
                    "payload"
                ],
                "title": "MaintainerPledgedIssueConfirmationPendingNotification"
            },
            "MaintainerPledgedIssueConfirmationPendingNotificationPayload": {
                "properties": {
                    "pledge_amount_sum": {
                        "type": "string",
                        "title": "Pledge Amount Sum"
                    },
                    "issue_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Issue Id"
                    },
                    "issue_url": {
                        "type": "string",
                        "title": "Issue Url"
                    },
                    "issue_title": {
                        "type": "string",
                        "title": "Issue Title"
                    },
                    "issue_org_name": {
                        "type": "string",
                        "title": "Issue Org Name"
                    },
                    "issue_repo_name": {
                        "type": "string",
                        "title": "Issue Repo Name"
                    },
                    "issue_number": {
                        "type": "integer",
                        "title": "Issue Number"
                    },
                    "maintainer_has_account": {
                        "type": "boolean",
                        "title": "Maintainer Has Account"
                    }
                },
                "type": "object",
                "required": [
                    "pledge_amount_sum",
                    "issue_id",
                    "issue_url",
                    "issue_title",
                    "issue_org_name",
                    "issue_repo_name",
                    "issue_number",
                    "maintainer_has_account"
                ],
                "title": "MaintainerPledgedIssueConfirmationPendingNotificationPayload"
            },
            "MaintainerPledgedIssuePendingNotification": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "MaintainerPledgedIssuePendingNotification"
                        ],
                        "const": "MaintainerPledgedIssuePendingNotification",
                        "title": "Type"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/MaintainerPledgedIssuePendingNotificationPayload"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "created_at",
                    "type",
                    "payload"
                ],
                "title": "MaintainerPledgedIssuePendingNotification"
            },
            "MaintainerPledgedIssuePendingNotificationPayload": {
                "properties": {
                    "pledge_amount_sum": {
                        "type": "string",
                        "title": "Pledge Amount Sum"
                    },
                    "issue_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Issue Id"
                    },
                    "issue_url": {
                        "type": "string",
                        "title": "Issue Url"
                    },
                    "issue_title": {
                        "type": "string",
                        "title": "Issue Title"
                    },
                    "issue_org_name": {
                        "type": "string",
                        "title": "Issue Org Name"
                    },
                    "issue_repo_name": {
                        "type": "string",
                        "title": "Issue Repo Name"
                    },
                    "issue_number": {
                        "type": "integer",
                        "title": "Issue Number"
                    },
                    "maintainer_has_account": {
                        "type": "boolean",
                        "title": "Maintainer Has Account"
                    }
                },
                "type": "object",
                "required": [
                    "pledge_amount_sum",
                    "issue_id",
                    "issue_url",
                    "issue_title",
                    "issue_org_name",
                    "issue_repo_name",
                    "issue_number",
                    "maintainer_has_account"
                ],
                "title": "MaintainerPledgedIssuePendingNotificationPayload"
            },
            "Metric": {
                "properties": {
                    "slug": {
                        "type": "string",
                        "title": "Slug",
                        "description": "Unique identifier for the metric."
                    },
                    "display_name": {
                        "type": "string",
                        "title": "Display Name",
                        "description": "Human-readable name for the metric."
                    },
                    "type": {
                        "$ref": "#/components/schemas/MetricType",
                        "description": "Type of the metric, useful to know the unit or format of the value."
                    }
                },
                "type": "object",
                "required": [
                    "slug",
                    "display_name",
                    "type"
                ],
                "title": "Metric",
                "description": "Information about a metric."
            },
            "MetricPeriod": {
                "properties": {
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Timestamp",
                        "description": "Timestamp of this period data."
                    },
                    "orders": {
                        "type": "integer",
                        "title": "Orders"
                    },
                    "revenue": {
                        "type": "integer",
                        "title": "Revenue"
                    },
                    "average_order_value": {
                        "type": "integer",
                        "title": "Average Order Value"
                    },
                    "one_time_products": {
                        "type": "integer",
                        "title": "One Time Products"
                    },
                    "one_time_products_revenue": {
                        "type": "integer",
                        "title": "One Time Products Revenue"
                    },
                    "new_subscriptions": {
                        "type": "integer",
                        "title": "New Subscriptions"
                    },
                    "new_subscriptions_revenue": {
                        "type": "integer",
                        "title": "New Subscriptions Revenue"
                    },
                    "renewed_subscriptions": {
                        "type": "integer",
                        "title": "Renewed Subscriptions"
                    },
                    "renewed_subscriptions_revenue": {
                        "type": "integer",
                        "title": "Renewed Subscriptions Revenue"
                    },
                    "active_subscriptions": {
                        "type": "integer",
                        "title": "Active Subscriptions"
                    },
                    "monthly_recurring_revenue": {
                        "type": "integer",
                        "title": "Monthly Recurring Revenue"
                    }
                },
                "type": "object",
                "required": [
                    "timestamp",
                    "orders",
                    "revenue",
                    "average_order_value",
                    "one_time_products",
                    "one_time_products_revenue",
                    "new_subscriptions",
                    "new_subscriptions_revenue",
                    "renewed_subscriptions",
                    "renewed_subscriptions_revenue",
                    "active_subscriptions",
                    "monthly_recurring_revenue"
                ],
                "title": "MetricPeriod"
            },
            "MetricType": {
                "type": "string",
                "enum": [
                    "scalar",
                    "currency"
                ],
                "title": "MetricType"
            },
            "Metrics": {
                "properties": {
                    "orders": {
                        "$ref": "#/components/schemas/Metric"
                    },
                    "revenue": {
                        "$ref": "#/components/schemas/Metric"
                    },
                    "average_order_value": {
                        "$ref": "#/components/schemas/Metric"
                    },
                    "one_time_products": {
                        "$ref": "#/components/schemas/Metric"
                    },
                    "one_time_products_revenue": {
                        "$ref": "#/components/schemas/Metric"
                    },
                    "new_subscriptions": {
                        "$ref": "#/components/schemas/Metric"
                    },
                    "new_subscriptions_revenue": {
                        "$ref": "#/components/schemas/Metric"
                    },
                    "renewed_subscriptions": {
                        "$ref": "#/components/schemas/Metric"
                    },
                    "renewed_subscriptions_revenue": {
                        "$ref": "#/components/schemas/Metric"
                    },
                    "active_subscriptions": {
                        "$ref": "#/components/schemas/Metric"
                    },
                    "monthly_recurring_revenue": {
                        "$ref": "#/components/schemas/Metric"
                    }
                },
                "type": "object",
                "required": [
                    "orders",
                    "revenue",
                    "average_order_value",
                    "one_time_products",
                    "one_time_products_revenue",
                    "new_subscriptions",
                    "new_subscriptions_revenue",
                    "renewed_subscriptions",
                    "renewed_subscriptions_revenue",
                    "active_subscriptions",
                    "monthly_recurring_revenue"
                ],
                "title": "Metrics"
            },
            "MetricsIntervalLimit": {
                "properties": {
                    "max_days": {
                        "type": "integer",
                        "title": "Max Days",
                        "description": "Maximum number of days for this interval."
                    }
                },
                "type": "object",
                "required": [
                    "max_days"
                ],
                "title": "MetricsIntervalLimit",
                "description": "Date interval limit to get metrics for a given interval."
            },
            "MetricsIntervalsLimits": {
                "properties": {
                    "hour": {
                        "$ref": "#/components/schemas/MetricsIntervalLimit",
                        "description": "Limits for the hour interval."
                    },
                    "day": {
                        "$ref": "#/components/schemas/MetricsIntervalLimit",
                        "description": "Limits for the day interval."
                    },
                    "week": {
                        "$ref": "#/components/schemas/MetricsIntervalLimit",
                        "description": "Limits for the week interval."
                    },
                    "month": {
                        "$ref": "#/components/schemas/MetricsIntervalLimit",
                        "description": "Limits for the month interval."
                    },
                    "year": {
                        "$ref": "#/components/schemas/MetricsIntervalLimit",
                        "description": "Limits for the year interval."
                    }
                },
                "type": "object",
                "required": [
                    "hour",
                    "day",
                    "week",
                    "month",
                    "year"
                ],
                "title": "MetricsIntervalsLimits",
                "description": "Date interval limits to get metrics for each interval."
            },
            "MetricsLimits": {
                "properties": {
                    "min_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Min Date",
                        "description": "Minimum date to get metrics."
                    },
                    "intervals": {
                        "$ref": "#/components/schemas/MetricsIntervalsLimits",
                        "description": "Limits for each interval."
                    }
                },
                "type": "object",
                "required": [
                    "min_date",
                    "intervals"
                ],
                "title": "MetricsLimits",
                "description": "Date limits to get metrics."
            },
            "MetricsResponse": {
                "properties": {
                    "periods": {
                        "items": {
                            "$ref": "#/components/schemas/MetricPeriod"
                        },
                        "type": "array",
                        "title": "Periods",
                        "description": "List of data for each timestamp."
                    },
                    "metrics": {
                        "$ref": "#/components/schemas/Metrics",
                        "description": "Information about the returned metrics."
                    }
                },
                "type": "object",
                "required": [
                    "periods",
                    "metrics"
                ],
                "title": "MetricsResponse",
                "description": "Metrics response schema."
            },
            "NotPermitted": {
                "properties": {
                    "error": {
                        "type": "string",
                        "enum": [
                            "NotPermitted"
                        ],
                        "const": "NotPermitted",
                        "title": "Error"
                    },
                    "detail": {
                        "type": "string",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "required": [
                    "error",
                    "detail"
                ],
                "title": "NotPermitted"
            },
            "NotificationsList": {
                "properties": {
                    "notifications": {
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/MaintainerPledgeCreatedNotification"
                                },
                                {
                                    "$ref": "#/components/schemas/MaintainerPledgeConfirmationPendingNotification"
                                },
                                {
                                    "$ref": "#/components/schemas/MaintainerPledgedIssueConfirmationPendingNotification"
                                },
                                {
                                    "$ref": "#/components/schemas/MaintainerPledgePendingNotification"
                                },
                                {
                                    "$ref": "#/components/schemas/MaintainerPledgedIssuePendingNotification"
                                },
                                {
                                    "$ref": "#/components/schemas/MaintainerPledgePaidNotification"
                                },
                                {
                                    "$ref": "#/components/schemas/RewardPaidNotification"
                                },
                                {
                                    "$ref": "#/components/schemas/PledgerPledgePendingNotification"
                                },
                                {
                                    "$ref": "#/components/schemas/TeamAdminMemberPledgedNotification"
                                },
                                {
                                    "$ref": "#/components/schemas/MaintainerAccountUnderReviewNotification"
                                },
                                {
                                    "$ref": "#/components/schemas/MaintainerAccountReviewedNotification"
                                },
                                {
                                    "$ref": "#/components/schemas/MaintainerNewPaidSubscriptionNotification"
                                },
                                {
                                    "$ref": "#/components/schemas/MaintainerNewProductSaleNotification"
                                },
                                {
                                    "$ref": "#/components/schemas/MaintainerCreateAccountNotification"
                                }
                            ],
                            "discriminator": {
                                "propertyName": "type",
                                "mapping": {
                                    "MaintainerAccountReviewedNotification": "#/components/schemas/MaintainerAccountReviewedNotification",
                                    "MaintainerAccountUnderReviewNotification": "#/components/schemas/MaintainerAccountUnderReviewNotification",
                                    "MaintainerCreateAccountNotification": "#/components/schemas/MaintainerCreateAccountNotification",
                                    "MaintainerNewPaidSubscriptionNotification": "#/components/schemas/MaintainerNewPaidSubscriptionNotification",
                                    "MaintainerNewProductSaleNotification": "#/components/schemas/MaintainerNewProductSaleNotification",
                                    "MaintainerPledgeConfirmationPendingNotification": "#/components/schemas/MaintainerPledgeConfirmationPendingNotification",
                                    "MaintainerPledgeCreatedNotification": "#/components/schemas/MaintainerPledgeCreatedNotification",
                                    "MaintainerPledgePaidNotification": "#/components/schemas/MaintainerPledgePaidNotification",
                                    "MaintainerPledgePendingNotification": "#/components/schemas/MaintainerPledgePendingNotification",
                                    "MaintainerPledgedIssueConfirmationPendingNotification": "#/components/schemas/MaintainerPledgedIssueConfirmationPendingNotification",
                                    "MaintainerPledgedIssuePendingNotification": "#/components/schemas/MaintainerPledgedIssuePendingNotification",
                                    "PledgerPledgePendingNotification": "#/components/schemas/PledgerPledgePendingNotification",
                                    "RewardPaidNotification": "#/components/schemas/RewardPaidNotification",
                                    "TeamAdminMemberPledgedNotification": "#/components/schemas/TeamAdminMemberPledgedNotification"
                                }
                            }
                        },
                        "type": "array",
                        "title": "Notifications"
                    },
                    "last_read_notification_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Read Notification Id"
                    }
                },
                "type": "object",
                "required": [
                    "notifications",
                    "last_read_notification_id"
                ],
                "title": "NotificationsList"
            },
            "NotificationsMarkRead": {
                "properties": {
                    "notification_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Notification Id"
                    }
                },
                "type": "object",
                "required": [
                    "notification_id"
                ],
                "title": "NotificationsMarkRead"
            },
            "OAuth2Client": {
                "properties": {
                    "redirect_uris": {
                        "items": {
                            "type": "string",
                            "maxLength": 2083,
                            "minLength": 1,
                            "format": "uri"
                        },
                        "type": "array",
                        "title": "Redirect Uris"
                    },
                    "token_endpoint_auth_method": {
                        "type": "string",
                        "enum": [
                            "client_secret_basic",
                            "client_secret_post",
                            "none"
                        ],
                        "title": "Token Endpoint Auth Method",
                        "default": "client_secret_post"
                    },
                    "grant_types": {
                        "items": {
                            "type": "string",
                            "enum": [
                                "authorization_code",
                                "refresh_token"
                            ]
                        },
                        "type": "array",
                        "title": "Grant Types",
                        "default": [
                            "authorization_code",
                            "refresh_token"
                        ]
                    },
                    "response_types": {
                        "items": {
                            "type": "string",
                            "enum": [
                                "code"
                            ],
                            "const": "code"
                        },
                        "type": "array",
                        "title": "Response Types",
                        "default": [
                            "code"
                        ]
                    },
                    "scope": {
                        "type": "string",
                        "title": "Scope",
                        "default": "openid profile email user:read organizations:read organizations:write custom_fields:read custom_fields:write discounts:read discounts:write checkout_links:read checkout_links:write checkouts:read checkouts:write products:read products:write benefits:read benefits:write files:read files:write subscriptions:read subscriptions:write customers:read customers:write orders:read metrics:read webhooks:read webhooks:write external_organizations:read license_keys:read license_keys:write repositories:read repositories:write issues:read issues:write customer_portal:read customer_portal:write"
                    },
                    "client_name": {
                        "type": "string",
                        "title": "Client Name"
                    },
                    "client_uri": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Client Uri"
                    },
                    "logo_uri": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2083,
                                "minLength": 1,
                                "format": "uri"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Logo Uri"
                    },
                    "tos_uri": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2083,
                                "minLength": 1,
                                "format": "uri"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tos Uri"
                    },
                    "policy_uri": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2083,
                                "minLength": 1,
                                "format": "uri"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Policy Uri"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "client_id": {
                        "type": "string",
                        "title": "Client Id"
                    },
                    "client_secret": {
                        "type": "string",
                        "title": "Client Secret"
                    },
                    "client_id_issued_at": {
                        "type": "integer",
                        "title": "Client Id Issued At"
                    },
                    "client_secret_expires_at": {
                        "type": "integer",
                        "title": "Client Secret Expires At"
                    }
                },
                "type": "object",
                "required": [
                    "redirect_uris",
                    "client_name",
                    "created_at",
                    "modified_at",
                    "client_id",
                    "client_secret",
                    "client_id_issued_at",
                    "client_secret_expires_at"
                ],
                "title": "OAuth2Client"
            },
            "OAuth2ClientConfiguration": {
                "properties": {
                    "redirect_uris": {
                        "items": {
                            "type": "string",
                            "maxLength": 2083,
                            "minLength": 1,
                            "format": "uri"
                        },
                        "type": "array",
                        "title": "Redirect Uris"
                    },
                    "token_endpoint_auth_method": {
                        "type": "string",
                        "enum": [
                            "client_secret_basic",
                            "client_secret_post",
                            "none"
                        ],
                        "title": "Token Endpoint Auth Method",
                        "default": "client_secret_post"
                    },
                    "grant_types": {
                        "items": {
                            "type": "string",
                            "enum": [
                                "authorization_code",
                                "refresh_token"
                            ]
                        },
                        "type": "array",
                        "title": "Grant Types",
                        "default": [
                            "authorization_code",
                            "refresh_token"
                        ]
                    },
                    "response_types": {
                        "items": {
                            "type": "string",
                            "enum": [
                                "code"
                            ],
                            "const": "code"
                        },
                        "type": "array",
                        "title": "Response Types",
                        "default": [
                            "code"
                        ]
                    },
                    "scope": {
                        "type": "string",
                        "title": "Scope",
                        "default": "openid profile email user:read organizations:read organizations:write custom_fields:read custom_fields:write discounts:read discounts:write checkout_links:read checkout_links:write checkouts:read checkouts:write products:read products:write benefits:read benefits:write files:read files:write subscriptions:read subscriptions:write customers:read customers:write orders:read metrics:read webhooks:read webhooks:write external_organizations:read license_keys:read license_keys:write repositories:read repositories:write issues:read issues:write customer_portal:read customer_portal:write"
                    },
                    "client_name": {
                        "type": "string",
                        "title": "Client Name"
                    },
                    "client_uri": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Client Uri"
                    },
                    "logo_uri": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2083,
                                "minLength": 1,
                                "format": "uri"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Logo Uri"
                    },
                    "tos_uri": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2083,
                                "minLength": 1,
                                "format": "uri"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tos Uri"
                    },
                    "policy_uri": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2083,
                                "minLength": 1,
                                "format": "uri"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Policy Uri"
                    }
                },
                "type": "object",
                "required": [
                    "redirect_uris",
                    "client_name"
                ],
                "title": "OAuth2ClientConfiguration"
            },
            "OAuth2ClientConfigurationUpdate": {
                "properties": {
                    "redirect_uris": {
                        "items": {
                            "type": "string",
                            "maxLength": 2083,
                            "minLength": 1,
                            "format": "uri"
                        },
                        "type": "array",
                        "title": "Redirect Uris"
                    },
                    "token_endpoint_auth_method": {
                        "type": "string",
                        "enum": [
                            "client_secret_basic",
                            "client_secret_post",
                            "none"
                        ],
                        "title": "Token Endpoint Auth Method",
                        "default": "client_secret_post"
                    },
                    "grant_types": {
                        "items": {
                            "type": "string",
                            "enum": [
                                "authorization_code",
                                "refresh_token"
                            ]
                        },
                        "type": "array",
                        "title": "Grant Types",
                        "default": [
                            "authorization_code",
                            "refresh_token"
                        ]
                    },
                    "response_types": {
                        "items": {
                            "type": "string",
                            "enum": [
                                "code"
                            ],
                            "const": "code"
                        },
                        "type": "array",
                        "title": "Response Types",
                        "default": [
                            "code"
                        ]
                    },
                    "scope": {
                        "type": "string",
                        "title": "Scope",
                        "default": "openid profile email user:read organizations:read organizations:write custom_fields:read custom_fields:write discounts:read discounts:write checkout_links:read checkout_links:write checkouts:read checkouts:write products:read products:write benefits:read benefits:write files:read files:write subscriptions:read subscriptions:write customers:read customers:write orders:read metrics:read webhooks:read webhooks:write external_organizations:read license_keys:read license_keys:write repositories:read repositories:write issues:read issues:write customer_portal:read customer_portal:write"
                    },
                    "client_name": {
                        "type": "string",
                        "title": "Client Name"
                    },
                    "client_uri": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Client Uri"
                    },
                    "logo_uri": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2083,
                                "minLength": 1,
                                "format": "uri"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Logo Uri"
                    },
                    "tos_uri": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2083,
                                "minLength": 1,
                                "format": "uri"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tos Uri"
                    },
                    "policy_uri": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2083,
                                "minLength": 1,
                                "format": "uri"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Policy Uri"
                    },
                    "client_id": {
                        "type": "string",
                        "title": "Client Id"
                    }
                },
                "type": "object",
                "required": [
                    "redirect_uris",
                    "client_name",
                    "client_id"
                ],
                "title": "OAuth2ClientConfigurationUpdate"
            },
            "OAuth2ClientPublic": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "client_id": {
                        "type": "string",
                        "title": "Client Id"
                    },
                    "client_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Client Name"
                    },
                    "client_uri": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Client Uri"
                    },
                    "logo_uri": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Logo Uri"
                    },
                    "tos_uri": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tos Uri"
                    },
                    "policy_uri": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Policy Uri"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "client_id",
                    "client_name",
                    "client_uri",
                    "logo_uri",
                    "tos_uri",
                    "policy_uri"
                ],
                "title": "OAuth2ClientPublic"
            },
            "OAuthAccountRead": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "platform": {
                        "$ref": "#/components/schemas/OAuthPlatform"
                    },
                    "account_id": {
                        "type": "string",
                        "title": "Account Id"
                    },
                    "account_email": {
                        "type": "string",
                        "title": "Account Email"
                    },
                    "account_username": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Account Username"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "platform",
                    "account_id",
                    "account_email",
                    "account_username"
                ],
                "title": "OAuthAccountRead"
            },
            "OAuthPlatform": {
                "type": "string",
                "enum": [
                    "github",
                    "github_repository_benefit",
                    "google"
                ],
                "title": "OAuthPlatform"
            },
            "Order": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "custom_field_data": {
                        "type": "object",
                        "title": "Custom Field Data",
                        "description": "Key-value object storing custom field values."
                    },
                    "amount": {
                        "type": "integer",
                        "title": "Amount"
                    },
                    "tax_amount": {
                        "type": "integer",
                        "title": "Tax Amount"
                    },
                    "currency": {
                        "type": "string",
                        "title": "Currency"
                    },
                    "billing_reason": {
                        "$ref": "#/components/schemas/OrderBillingReason"
                    },
                    "billing_address": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Address"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "customer_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Customer Id"
                    },
                    "product_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Id"
                    },
                    "product_price_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Price Id"
                    },
                    "discount_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Discount Id"
                    },
                    "subscription_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subscription Id"
                    },
                    "checkout_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Checkout Id"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/OrderCustomer"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "User Id",
                        "deprecated": true
                    },
                    "user": {
                        "$ref": "#/components/schemas/OrderUser",
                        "deprecated": true
                    },
                    "product": {
                        "$ref": "#/components/schemas/OrderProduct"
                    },
                    "product_price": {
                        "$ref": "#/components/schemas/ProductPrice"
                    },
                    "discount": {
                        "anyOf": [
                            {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/DiscountFixedOnceForeverDurationBase"
                                    },
                                    {
                                        "$ref": "#/components/schemas/DiscountFixedRepeatDurationBase"
                                    },
                                    {
                                        "$ref": "#/components/schemas/DiscountPercentageOnceForeverDurationBase"
                                    },
                                    {
                                        "$ref": "#/components/schemas/DiscountPercentageRepeatDurationBase"
                                    }
                                ],
                                "title": "OrderDiscount"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Discount"
                    },
                    "subscription": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/OrderSubscription"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "metadata",
                    "amount",
                    "tax_amount",
                    "currency",
                    "billing_reason",
                    "billing_address",
                    "customer_id",
                    "product_id",
                    "product_price_id",
                    "discount_id",
                    "subscription_id",
                    "checkout_id",
                    "customer",
                    "user_id",
                    "user",
                    "product",
                    "product_price",
                    "discount",
                    "subscription"
                ],
                "title": "Order"
            },
            "OrderBillingReason": {
                "type": "string",
                "enum": [
                    "purchase",
                    "subscription_create",
                    "subscription_cycle",
                    "subscription_update"
                ],
                "title": "OrderBillingReason"
            },
            "OrderCustomer": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "email_verified": {
                        "type": "boolean",
                        "title": "Email Verified"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "billing_address": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Address"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "tax_id": {
                        "anyOf": [
                            {
                                "prefixItems": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "$ref": "#/components/schemas/TaxIDFormat"
                                    }
                                ],
                                "type": "array",
                                "maxItems": 2,
                                "minItems": 2
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tax Id"
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id"
                    },
                    "avatar_url": {
                        "type": "string",
                        "title": "Avatar Url",
                        "readOnly": true
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "metadata",
                    "email",
                    "email_verified",
                    "name",
                    "billing_address",
                    "tax_id",
                    "organization_id",
                    "avatar_url"
                ],
                "title": "OrderCustomer"
            },
            "OrderInvoice": {
                "properties": {
                    "url": {
                        "type": "string",
                        "title": "Url",
                        "description": "The URL to the invoice."
                    }
                },
                "type": "object",
                "required": [
                    "url"
                ],
                "title": "OrderInvoice",
                "description": "Order's invoice data."
            },
            "OrderProduct": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the product."
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "The name of the product."
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "The description of the product."
                    },
                    "is_recurring": {
                        "type": "boolean",
                        "title": "Is Recurring",
                        "description": "Whether the product is a subscription tier."
                    },
                    "is_archived": {
                        "type": "boolean",
                        "title": "Is Archived",
                        "description": "Whether the product is archived and no longer available."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the product."
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "name",
                    "description",
                    "is_recurring",
                    "is_archived",
                    "organization_id"
                ],
                "title": "OrderProduct"
            },
            "OrderSortProperty": {
                "type": "string",
                "enum": [
                    "created_at",
                    "-created_at",
                    "amount",
                    "-amount",
                    "customer",
                    "-customer",
                    "product",
                    "-product",
                    "discount",
                    "-discount",
                    "subscription",
                    "-subscription"
                ],
                "title": "OrderSortProperty"
            },
            "OrderSubscription": {
                "properties": {
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "amount": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Amount"
                    },
                    "currency": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Currency"
                    },
                    "recurring_interval": {
                        "$ref": "#/components/schemas/SubscriptionRecurringInterval"
                    },
                    "status": {
                        "$ref": "#/components/schemas/SubscriptionStatus"
                    },
                    "current_period_start": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Current Period Start"
                    },
                    "current_period_end": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Current Period End"
                    },
                    "cancel_at_period_end": {
                        "type": "boolean",
                        "title": "Cancel At Period End"
                    },
                    "started_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Started At"
                    },
                    "ended_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Ended At"
                    },
                    "customer_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Customer Id"
                    },
                    "product_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Id"
                    },
                    "price_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Price Id"
                    },
                    "discount_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Discount Id"
                    },
                    "checkout_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Checkout Id"
                    }
                },
                "type": "object",
                "required": [
                    "metadata",
                    "created_at",
                    "modified_at",
                    "id",
                    "amount",
                    "currency",
                    "recurring_interval",
                    "status",
                    "current_period_start",
                    "current_period_end",
                    "cancel_at_period_end",
                    "started_at",
                    "ended_at",
                    "customer_id",
                    "product_id",
                    "price_id",
                    "discount_id",
                    "checkout_id"
                ],
                "title": "OrderSubscription"
            },
            "OrderUser": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "public_name": {
                        "type": "string",
                        "title": "Public Name"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "email",
                    "public_name"
                ],
                "title": "OrderUser"
            },
            "Organization": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "slug": {
                        "type": "string",
                        "title": "Slug"
                    },
                    "avatar_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Avatar Url"
                    },
                    "bio": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Bio"
                    },
                    "company": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Company"
                    },
                    "blog": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Blog"
                    },
                    "location": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Location"
                    },
                    "email": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Email"
                    },
                    "twitter_username": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Twitter Username"
                    },
                    "pledge_minimum_amount": {
                        "type": "integer",
                        "title": "Pledge Minimum Amount"
                    },
                    "pledge_badge_show_amount": {
                        "type": "boolean",
                        "title": "Pledge Badge Show Amount"
                    },
                    "default_upfront_split_to_contributors": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Default Upfront Split To Contributors"
                    },
                    "profile_settings": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/OrganizationProfileSettings"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Settings for the organization profile"
                    },
                    "feature_settings": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/OrganizationFeatureSettings"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Settings for the organization features"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "name",
                    "slug",
                    "avatar_url",
                    "bio",
                    "company",
                    "blog",
                    "location",
                    "email",
                    "twitter_username",
                    "pledge_minimum_amount",
                    "pledge_badge_show_amount",
                    "default_upfront_split_to_contributors",
                    "profile_settings",
                    "feature_settings"
                ],
                "title": "Organization"
            },
            "OrganizationAvatarFileCreate": {
                "properties": {
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4",
                                "description": "The organization ID.",
                                "x-polar-selector-widget": {
                                    "displayProperty": "name",
                                    "resourceName": "Organization",
                                    "resourceRoot": "/v1/organizations"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "mime_type": {
                        "type": "string",
                        "pattern": "^image\\/(jpeg|png|gif|webp|svg\\+xml)$",
                        "title": "Mime Type",
                        "description": "MIME type of the file. Only images are supported for this type of file."
                    },
                    "size": {
                        "type": "integer",
                        "maximum": 1048576,
                        "title": "Size",
                        "description": "Size of the file. A maximum of 1 MB is allowed for this type of file."
                    },
                    "checksum_sha256_base64": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Checksum Sha256 Base64"
                    },
                    "upload": {
                        "$ref": "#/components/schemas/S3FileCreateMultipart"
                    },
                    "service": {
                        "type": "string",
                        "enum": [
                            "organization_avatar"
                        ],
                        "const": "organization_avatar",
                        "title": "Service"
                    },
                    "version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Version"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "mime_type",
                    "size",
                    "upload",
                    "service"
                ],
                "title": "OrganizationAvatarFileCreate",
                "description": "Schema to create a file to be used as an organization avatar."
            },
            "OrganizationAvatarFileRead": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "path": {
                        "type": "string",
                        "title": "Path"
                    },
                    "mime_type": {
                        "type": "string",
                        "title": "Mime Type"
                    },
                    "size": {
                        "type": "integer",
                        "title": "Size"
                    },
                    "storage_version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Storage Version"
                    },
                    "checksum_etag": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Checksum Etag"
                    },
                    "checksum_sha256_base64": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Checksum Sha256 Base64"
                    },
                    "checksum_sha256_hex": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Checksum Sha256 Hex"
                    },
                    "last_modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Modified At"
                    },
                    "version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Version"
                    },
                    "service": {
                        "type": "string",
                        "enum": [
                            "organization_avatar"
                        ],
                        "const": "organization_avatar",
                        "title": "Service"
                    },
                    "is_uploaded": {
                        "type": "boolean",
                        "title": "Is Uploaded"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "size_readable": {
                        "type": "string",
                        "title": "Size Readable",
                        "readOnly": true
                    },
                    "public_url": {
                        "type": "string",
                        "title": "Public Url",
                        "readOnly": true
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "organization_id",
                    "name",
                    "path",
                    "mime_type",
                    "size",
                    "storage_version",
                    "checksum_etag",
                    "checksum_sha256_base64",
                    "checksum_sha256_hex",
                    "last_modified_at",
                    "version",
                    "service",
                    "is_uploaded",
                    "created_at",
                    "size_readable",
                    "public_url"
                ],
                "title": "OrganizationAvatarFileRead",
                "description": "File to be used as an organization avatar."
            },
            "OrganizationBadgeSettingsRead": {
                "properties": {
                    "show_amount": {
                        "type": "boolean",
                        "title": "Show Amount"
                    },
                    "minimum_amount": {
                        "type": "integer",
                        "title": "Minimum Amount"
                    },
                    "message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Message"
                    },
                    "repositories": {
                        "items": {
                            "$ref": "#/components/schemas/RepositoryBadgeSettingsRead"
                        },
                        "type": "array",
                        "title": "Repositories"
                    }
                },
                "type": "object",
                "required": [
                    "show_amount",
                    "minimum_amount",
                    "message",
                    "repositories"
                ],
                "title": "OrganizationBadgeSettingsRead"
            },
            "OrganizationBadgeSettingsUpdate": {
                "properties": {
                    "show_amount": {
                        "type": "boolean",
                        "title": "Show Amount"
                    },
                    "minimum_amount": {
                        "type": "integer",
                        "title": "Minimum Amount"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "repositories": {
                        "items": {
                            "$ref": "#/components/schemas/RepositoryBadgeSettingsUpdate"
                        },
                        "type": "array",
                        "title": "Repositories"
                    }
                },
                "type": "object",
                "required": [
                    "show_amount",
                    "minimum_amount",
                    "message",
                    "repositories"
                ],
                "title": "OrganizationBadgeSettingsUpdate"
            },
            "OrganizationBillingPlan": {
                "properties": {
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id"
                    },
                    "is_free": {
                        "type": "boolean",
                        "title": "Is Free"
                    },
                    "plan_name": {
                        "type": "string",
                        "title": "Plan Name"
                    }
                },
                "type": "object",
                "required": [
                    "organization_id",
                    "is_free",
                    "plan_name"
                ],
                "title": "OrganizationBillingPlan"
            },
            "OrganizationCheckPermissionsInput": {
                "properties": {
                    "permissions": {
                        "$ref": "#/components/schemas/AppPermissionsType"
                    }
                },
                "type": "object",
                "required": [
                    "permissions"
                ],
                "title": "OrganizationCheckPermissionsInput"
            },
            "OrganizationCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 3,
                        "title": "Name"
                    },
                    "slug": {
                        "type": "string",
                        "minLength": 3,
                        "title": "Slug"
                    },
                    "avatar_url": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2083,
                                "minLength": 1,
                                "format": "uri"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Avatar Url"
                    },
                    "feature_settings": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/OrganizationFeatureSettings"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "slug"
                ],
                "title": "OrganizationCreate"
            },
            "OrganizationFeatureSettings": {
                "properties": {
                    "issue_funding_enabled": {
                        "type": "boolean",
                        "title": "Issue Funding Enabled",
                        "description": "If this organization has issue funding enabled",
                        "default": false
                    }
                },
                "type": "object",
                "title": "OrganizationFeatureSettings"
            },
            "OrganizationMember": {
                "properties": {
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "avatar_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Avatar Url"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "avatar_url"
                ],
                "title": "OrganizationMember"
            },
            "OrganizationProfileSettings": {
                "properties": {
                    "enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Enabled",
                        "description": "If this organization has a profile enabled"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 160
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "A description of the organization"
                    },
                    "featured_projects": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Featured Projects",
                        "description": "A list of featured projects"
                    },
                    "featured_organizations": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Featured Organizations",
                        "description": "A list of featured organizations"
                    },
                    "links": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "maxLength": 2083,
                                    "minLength": 1,
                                    "format": "uri"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Links",
                        "description": "A list of links associated with the organization"
                    },
                    "subscribe": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/OrganizationSubscribePromoteSettings"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Subscription promotion settings",
                        "default": {
                            "promote": true,
                            "show_count": true,
                            "count_free": true
                        }
                    },
                    "accent_color": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Accent Color",
                        "description": "Accent color for the organization"
                    }
                },
                "type": "object",
                "title": "OrganizationProfileSettings"
            },
            "OrganizationSetAccount": {
                "properties": {
                    "account_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Account Id"
                    }
                },
                "type": "object",
                "required": [
                    "account_id"
                ],
                "title": "OrganizationSetAccount"
            },
            "OrganizationSortProperty": {
                "type": "string",
                "enum": [
                    "created_at",
                    "-created_at",
                    "name",
                    "-name"
                ],
                "title": "OrganizationSortProperty"
            },
            "OrganizationStripePortalSession": {
                "properties": {
                    "url": {
                        "type": "string",
                        "title": "Url"
                    }
                },
                "type": "object",
                "required": [
                    "url"
                ],
                "title": "OrganizationStripePortalSession"
            },
            "OrganizationSubscribePromoteSettings": {
                "properties": {
                    "promote": {
                        "type": "boolean",
                        "title": "Promote",
                        "description": "Promote email subscription (free)",
                        "default": true
                    },
                    "show_count": {
                        "type": "boolean",
                        "title": "Show Count",
                        "description": "Show subscription count publicly",
                        "default": true
                    },
                    "count_free": {
                        "type": "boolean",
                        "title": "Count Free",
                        "description": "Include free subscribers in total count",
                        "default": true
                    }
                },
                "type": "object",
                "title": "OrganizationSubscribePromoteSettings"
            },
            "OrganizationUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "minLength": 3
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "avatar_url": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2083,
                                "minLength": 1,
                                "format": "uri"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Avatar Url"
                    },
                    "default_upfront_split_to_contributors": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 100,
                                "minimum": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Default Upfront Split To Contributors"
                    },
                    "pledge_badge_show_amount": {
                        "type": "boolean",
                        "title": "Pledge Badge Show Amount",
                        "default": false
                    },
                    "billing_email": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Billing Email"
                    },
                    "default_badge_custom_content": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Default Badge Custom Content"
                    },
                    "pledge_minimum_amount": {
                        "type": "integer",
                        "title": "Pledge Minimum Amount",
                        "default": 2000
                    },
                    "total_monthly_spending_limit": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Total Monthly Spending Limit"
                    },
                    "per_user_monthly_spending_limit": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Per User Monthly Spending Limit"
                    },
                    "profile_settings": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/OrganizationProfileSettings"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "feature_settings": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/OrganizationFeatureSettings"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "title": "OrganizationUpdate"
            },
            "Pagination": {
                "properties": {
                    "total_count": {
                        "type": "integer",
                        "title": "Total Count"
                    },
                    "max_page": {
                        "type": "integer",
                        "title": "Max Page"
                    }
                },
                "type": "object",
                "required": [
                    "total_count",
                    "max_page"
                ],
                "title": "Pagination"
            },
            "PaginationResponse": {
                "properties": {
                    "total_count": {
                        "type": "integer",
                        "title": "Total Count"
                    },
                    "page": {
                        "type": "integer",
                        "title": "Page"
                    },
                    "next_page": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Next Page"
                    }
                },
                "type": "object",
                "required": [
                    "total_count",
                    "page",
                    "next_page"
                ],
                "title": "PaginationResponse"
            },
            "PaymentMethod": {
                "properties": {
                    "stripe_payment_method_id": {
                        "type": "string",
                        "title": "Stripe Payment Method Id"
                    },
                    "type": {
                        "enum": [
                            "card",
                            null
                        ],
                        "title": "Type"
                    },
                    "brand": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Brand"
                    },
                    "last4": {
                        "type": "string",
                        "title": "Last4"
                    },
                    "exp_month": {
                        "type": "integer",
                        "title": "Exp Month"
                    },
                    "exp_year": {
                        "type": "integer",
                        "title": "Exp Year"
                    }
                },
                "type": "object",
                "required": [
                    "stripe_payment_method_id",
                    "type",
                    "brand",
                    "last4",
                    "exp_month",
                    "exp_year"
                ],
                "title": "PaymentMethod"
            },
            "PayoutCreate": {
                "properties": {
                    "account_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Account Id"
                    }
                },
                "type": "object",
                "required": [
                    "account_id"
                ],
                "title": "PayoutCreate"
            },
            "PayoutEstimate": {
                "properties": {
                    "account_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Account Id"
                    },
                    "gross_amount": {
                        "type": "integer",
                        "title": "Gross Amount"
                    },
                    "fees_amount": {
                        "type": "integer",
                        "title": "Fees Amount"
                    },
                    "net_amount": {
                        "type": "integer",
                        "title": "Net Amount"
                    }
                },
                "type": "object",
                "required": [
                    "account_id",
                    "gross_amount",
                    "fees_amount",
                    "net_amount"
                ],
                "title": "PayoutEstimate"
            },
            "PersonalAccessToken": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "scopes": {
                        "items": {
                            "$ref": "#/components/schemas/Scope"
                        },
                        "type": "array",
                        "title": "Scopes"
                    },
                    "expires_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Expires At"
                    },
                    "comment": {
                        "type": "string",
                        "title": "Comment"
                    },
                    "last_used_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Used At"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "scopes",
                    "expires_at",
                    "comment",
                    "last_used_at"
                ],
                "title": "PersonalAccessToken"
            },
            "PersonalAccessTokenCreate": {
                "properties": {
                    "comment": {
                        "type": "string",
                        "title": "Comment"
                    },
                    "expires_in": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "duration"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Expires In"
                    },
                    "scopes": {
                        "items": {
                            "$ref": "#/components/schemas/AvailableScope"
                        },
                        "type": "array",
                        "title": "Scopes"
                    }
                },
                "type": "object",
                "required": [
                    "comment",
                    "scopes"
                ],
                "title": "PersonalAccessTokenCreate"
            },
            "PersonalAccessTokenCreateResponse": {
                "properties": {
                    "personal_access_token": {
                        "$ref": "#/components/schemas/PersonalAccessToken"
                    },
                    "token": {
                        "type": "string",
                        "title": "Token"
                    }
                },
                "type": "object",
                "required": [
                    "personal_access_token",
                    "token"
                ],
                "title": "PersonalAccessTokenCreateResponse"
            },
            "PlatformFeeType": {
                "type": "string",
                "enum": [
                    "payment",
                    "international_payment",
                    "subscription",
                    "invoice",
                    "cross_border_transfer",
                    "payout",
                    "account",
                    "platform"
                ],
                "title": "PlatformFeeType",
                "description": "Type of fees applied by Polar, and billed to the users."
            },
            "Platforms": {
                "type": "string",
                "enum": [
                    "github"
                ],
                "const": "github",
                "title": "Platforms"
            },
            "Pledge": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "amount": {
                        "type": "integer",
                        "title": "Amount",
                        "description": "Amount pledged towards the issue"
                    },
                    "currency": {
                        "type": "string",
                        "title": "Currency"
                    },
                    "state": {
                        "$ref": "#/components/schemas/PledgeState",
                        "description": "Current state of the pledge"
                    },
                    "type": {
                        "$ref": "#/components/schemas/PledgeType",
                        "description": "Type of pledge"
                    },
                    "refunded_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Refunded At",
                        "description": "If and when the pledge was refunded to the pledger"
                    },
                    "scheduled_payout_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Scheduled Payout At",
                        "description": "When the payout is scheduled to be made to the maintainers behind the issue. Disputes must be made before this date."
                    },
                    "issue": {
                        "$ref": "#/components/schemas/Issue",
                        "description": "The issue that the pledge was made towards"
                    },
                    "pledger": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Pledger"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "The user or organization that made this pledge"
                    },
                    "hosted_invoice_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Hosted Invoice Url",
                        "description": "URL of invoice for this pledge"
                    },
                    "authed_can_admin_sender": {
                        "type": "boolean",
                        "title": "Authed Can Admin Sender",
                        "description": "If the currently authenticated subject can perform admin actions on behalf of the maker of the peldge",
                        "default": false
                    },
                    "authed_can_admin_received": {
                        "type": "boolean",
                        "title": "Authed Can Admin Received",
                        "description": "If the currently authenticated subject can perform admin actions on behalf of the receiver of the peldge",
                        "default": false
                    },
                    "created_by": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Pledger"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "For pledges made by an organization, or on behalf of an organization. This is the user that made the pledge. Only visible for members of said organization."
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "amount",
                    "currency",
                    "state",
                    "type",
                    "issue"
                ],
                "title": "Pledge"
            },
            "PledgePledgesSummary": {
                "properties": {
                    "funding": {
                        "$ref": "#/components/schemas/Funding"
                    },
                    "pledges": {
                        "items": {
                            "$ref": "#/components/schemas/SummaryPledge"
                        },
                        "type": "array",
                        "title": "Pledges"
                    }
                },
                "type": "object",
                "required": [
                    "funding",
                    "pledges"
                ],
                "title": "PledgePledgesSummary"
            },
            "PledgeRewardTransfer": {
                "properties": {
                    "pledge_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Pledge Id"
                    },
                    "issue_reward_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Issue Reward Id"
                    }
                },
                "type": "object",
                "required": [
                    "pledge_id",
                    "issue_reward_id"
                ],
                "title": "PledgeRewardTransfer"
            },
            "PledgeSpending": {
                "properties": {
                    "amount": {
                        "type": "integer",
                        "title": "Amount"
                    },
                    "currency": {
                        "type": "string",
                        "title": "Currency"
                    }
                },
                "type": "object",
                "required": [
                    "amount",
                    "currency"
                ],
                "title": "PledgeSpending"
            },
            "PledgeState": {
                "type": "string",
                "enum": [
                    "initiated",
                    "created",
                    "pending",
                    "refunded",
                    "disputed",
                    "charge_disputed",
                    "cancelled"
                ],
                "title": "PledgeState"
            },
            "PledgeStripePaymentIntentCreate": {
                "properties": {
                    "issue_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Issue Id"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "amount": {
                        "type": "integer",
                        "maximum": 99999999,
                        "exclusiveMinimum": 0,
                        "title": "Amount"
                    },
                    "currency": {
                        "type": "string",
                        "pattern": "usd",
                        "title": "Currency",
                        "description": "The currency. Currently, only `usd` is supported.",
                        "default": "usd"
                    },
                    "setup_future_usage": {
                        "anyOf": [
                            {
                                "type": "string",
                                "enum": [
                                    "on_session"
                                ],
                                "const": "on_session"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Setup Future Usage",
                        "description": "If the payment method should be saved for future usage."
                    },
                    "on_behalf_of_organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "On Behalf Of Organization Id",
                        "description": "The organization to give credit to. The pledge will be paid by the authenticated user."
                    }
                },
                "type": "object",
                "required": [
                    "issue_id",
                    "email",
                    "amount"
                ],
                "title": "PledgeStripePaymentIntentCreate"
            },
            "PledgeStripePaymentIntentMutationResponse": {
                "properties": {
                    "payment_intent_id": {
                        "type": "string",
                        "title": "Payment Intent Id"
                    },
                    "amount": {
                        "type": "integer",
                        "title": "Amount"
                    },
                    "currency": {
                        "type": "string",
                        "title": "Currency"
                    },
                    "fee": {
                        "type": "integer",
                        "title": "Fee"
                    },
                    "amount_including_fee": {
                        "type": "integer",
                        "title": "Amount Including Fee"
                    },
                    "client_secret": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Client Secret"
                    }
                },
                "type": "object",
                "required": [
                    "payment_intent_id",
                    "amount",
                    "currency",
                    "fee",
                    "amount_including_fee",
                    "client_secret"
                ],
                "title": "PledgeStripePaymentIntentMutationResponse"
            },
            "PledgeStripePaymentIntentUpdate": {
                "properties": {
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "amount": {
                        "type": "integer",
                        "maximum": 99999999,
                        "exclusiveMinimum": 0,
                        "title": "Amount"
                    },
                    "currency": {
                        "type": "string",
                        "pattern": "usd",
                        "title": "Currency",
                        "description": "The currency. Currently, only `usd` is supported.",
                        "default": "usd"
                    },
                    "setup_future_usage": {
                        "anyOf": [
                            {
                                "type": "string",
                                "enum": [
                                    "on_session"
                                ],
                                "const": "on_session"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Setup Future Usage",
                        "description": "If the payment method should be saved for future usage."
                    },
                    "on_behalf_of_organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "On Behalf Of Organization Id",
                        "description": "The organization to give credit to. The pledge will be paid by the authenticated user."
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "amount"
                ],
                "title": "PledgeStripePaymentIntentUpdate"
            },
            "PledgeType": {
                "type": "string",
                "enum": [
                    "pay_upfront",
                    "pay_on_completion",
                    "pay_directly"
                ],
                "title": "PledgeType"
            },
            "Pledger": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "github_username": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Github Username"
                    },
                    "avatar_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Avatar Url"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "github_username",
                    "avatar_url"
                ],
                "title": "Pledger"
            },
            "PledgerPledgePendingNotification": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "PledgerPledgePendingNotification"
                        ],
                        "const": "PledgerPledgePendingNotification",
                        "title": "Type"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/PledgerPledgePendingNotificationPayload"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "created_at",
                    "type",
                    "payload"
                ],
                "title": "PledgerPledgePendingNotification"
            },
            "PledgerPledgePendingNotificationPayload": {
                "properties": {
                    "pledge_amount": {
                        "type": "string",
                        "title": "Pledge Amount"
                    },
                    "issue_url": {
                        "type": "string",
                        "title": "Issue Url"
                    },
                    "issue_title": {
                        "type": "string",
                        "title": "Issue Title"
                    },
                    "issue_number": {
                        "type": "integer",
                        "title": "Issue Number"
                    },
                    "issue_org_name": {
                        "type": "string",
                        "title": "Issue Org Name"
                    },
                    "issue_repo_name": {
                        "type": "string",
                        "title": "Issue Repo Name"
                    },
                    "pledge_date": {
                        "type": "string",
                        "title": "Pledge Date"
                    },
                    "pledge_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pledge Id"
                    },
                    "pledge_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PledgeType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "pledge_amount",
                    "issue_url",
                    "issue_title",
                    "issue_number",
                    "issue_org_name",
                    "issue_repo_name",
                    "pledge_date",
                    "pledge_id",
                    "pledge_type"
                ],
                "title": "PledgerPledgePendingNotificationPayload"
            },
            "PledgesSummary": {
                "properties": {
                    "total": {
                        "$ref": "#/components/schemas/CurrencyAmount"
                    },
                    "pledgers": {
                        "items": {
                            "$ref": "#/components/schemas/Pledger"
                        },
                        "type": "array",
                        "title": "Pledgers"
                    }
                },
                "type": "object",
                "required": [
                    "total",
                    "pledgers"
                ],
                "title": "PledgesSummary"
            },
            "PledgesTypeSummaries": {
                "properties": {
                    "pay_upfront": {
                        "$ref": "#/components/schemas/PledgesSummary"
                    },
                    "pay_on_completion": {
                        "$ref": "#/components/schemas/PledgesSummary"
                    },
                    "pay_directly": {
                        "$ref": "#/components/schemas/PledgesSummary"
                    }
                },
                "type": "object",
                "required": [
                    "pay_upfront",
                    "pay_on_completion",
                    "pay_directly"
                ],
                "title": "PledgesTypeSummaries"
            },
            "PostIssueComment": {
                "properties": {
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "append_badge": {
                        "type": "boolean",
                        "title": "Append Badge",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "PostIssueComment"
            },
            "Product": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the product."
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "The name of the product."
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "The description of the product."
                    },
                    "is_recurring": {
                        "type": "boolean",
                        "title": "Is Recurring",
                        "description": "Whether the product is a subscription tier."
                    },
                    "is_archived": {
                        "type": "boolean",
                        "title": "Is Archived",
                        "description": "Whether the product is archived and no longer available."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the product."
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "prices": {
                        "items": {
                            "$ref": "#/components/schemas/ProductPrice"
                        },
                        "type": "array",
                        "title": "Prices",
                        "description": "List of prices for this product."
                    },
                    "benefits": {
                        "items": {
                            "$ref": "#/components/schemas/Benefit",
                            "title": "Benefit"
                        },
                        "type": "array",
                        "title": "Benefits",
                        "description": "List of benefits granted by the product."
                    },
                    "medias": {
                        "items": {
                            "$ref": "#/components/schemas/ProductMediaFileRead"
                        },
                        "type": "array",
                        "title": "Medias",
                        "description": "List of medias associated to the product."
                    },
                    "attached_custom_fields": {
                        "items": {
                            "$ref": "#/components/schemas/AttachedCustomField"
                        },
                        "type": "array",
                        "title": "Attached Custom Fields",
                        "description": "List of custom fields attached to the product."
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "name",
                    "description",
                    "is_recurring",
                    "is_archived",
                    "organization_id",
                    "metadata",
                    "prices",
                    "benefits",
                    "medias",
                    "attached_custom_fields"
                ],
                "title": "Product",
                "description": "A product."
            },
            "ProductBenefitsUpdate": {
                "properties": {
                    "benefits": {
                        "items": {
                            "type": "string",
                            "format": "uuid4",
                            "description": "The benefit ID.",
                            "x-polar-selector-widget": {
                                "displayProperty": "description",
                                "resourceName": "Benefit",
                                "resourceRoot": "/v1/benefits"
                            }
                        },
                        "type": "array",
                        "title": "Benefits",
                        "description": "List of benefit IDs. Each one must be on the same organization as the product."
                    }
                },
                "type": "object",
                "required": [
                    "benefits"
                ],
                "title": "ProductBenefitsUpdate",
                "description": "Schema to update the benefits granted by a product."
            },
            "ProductCreate": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/ProductRecurringCreate"
                    },
                    {
                        "$ref": "#/components/schemas/ProductOneTimeCreate"
                    }
                ]
            },
            "ProductEmbed": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "is_recurring": {
                        "type": "boolean",
                        "title": "Is Recurring"
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id"
                    },
                    "price": {
                        "$ref": "#/components/schemas/ProductPrice"
                    },
                    "cover": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ProductMediaFileRead"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "benefits": {
                        "items": {
                            "$ref": "#/components/schemas/Benefit",
                            "title": "Benefit"
                        },
                        "type": "array",
                        "title": "Benefits",
                        "description": "List of benefits granted by the product."
                    },
                    "etag": {
                        "type": "string",
                        "title": "Etag"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "description",
                    "is_recurring",
                    "organization_id",
                    "price",
                    "cover",
                    "benefits",
                    "etag"
                ],
                "title": "ProductEmbed"
            },
            "ProductMediaFileCreate": {
                "properties": {
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4",
                                "description": "The organization ID.",
                                "x-polar-selector-widget": {
                                    "displayProperty": "name",
                                    "resourceName": "Organization",
                                    "resourceRoot": "/v1/organizations"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "mime_type": {
                        "type": "string",
                        "pattern": "^image\\/(jpeg|png|gif|webp|svg\\+xml)$",
                        "title": "Mime Type",
                        "description": "MIME type of the file. Only images are supported for this type of file."
                    },
                    "size": {
                        "type": "integer",
                        "maximum": 10485760,
                        "title": "Size",
                        "description": "Size of the file. A maximum of 10 MB is allowed for this type of file."
                    },
                    "checksum_sha256_base64": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Checksum Sha256 Base64"
                    },
                    "upload": {
                        "$ref": "#/components/schemas/S3FileCreateMultipart"
                    },
                    "service": {
                        "type": "string",
                        "enum": [
                            "product_media"
                        ],
                        "const": "product_media",
                        "title": "Service"
                    },
                    "version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Version"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "mime_type",
                    "size",
                    "upload",
                    "service"
                ],
                "title": "ProductMediaFileCreate",
                "description": "Schema to create a file to be used as a product media file."
            },
            "ProductMediaFileRead": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "path": {
                        "type": "string",
                        "title": "Path"
                    },
                    "mime_type": {
                        "type": "string",
                        "title": "Mime Type"
                    },
                    "size": {
                        "type": "integer",
                        "title": "Size"
                    },
                    "storage_version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Storage Version"
                    },
                    "checksum_etag": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Checksum Etag"
                    },
                    "checksum_sha256_base64": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Checksum Sha256 Base64"
                    },
                    "checksum_sha256_hex": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Checksum Sha256 Hex"
                    },
                    "last_modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Modified At"
                    },
                    "version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Version"
                    },
                    "service": {
                        "type": "string",
                        "enum": [
                            "product_media"
                        ],
                        "const": "product_media",
                        "title": "Service"
                    },
                    "is_uploaded": {
                        "type": "boolean",
                        "title": "Is Uploaded"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "size_readable": {
                        "type": "string",
                        "title": "Size Readable",
                        "readOnly": true
                    },
                    "public_url": {
                        "type": "string",
                        "title": "Public Url",
                        "readOnly": true
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "organization_id",
                    "name",
                    "path",
                    "mime_type",
                    "size",
                    "storage_version",
                    "checksum_etag",
                    "checksum_sha256_base64",
                    "checksum_sha256_hex",
                    "last_modified_at",
                    "version",
                    "service",
                    "is_uploaded",
                    "created_at",
                    "size_readable",
                    "public_url"
                ],
                "title": "ProductMediaFileRead",
                "description": "File to be used as a product media file."
            },
            "ProductOneTimeCreate": {
                "properties": {
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "maxLength": 500,
                                    "minLength": 1
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "maxProperties": 50,
                        "title": "Metadata",
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 3,
                        "title": "Name",
                        "description": "The name of the product."
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "The description of the product."
                    },
                    "prices": {
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/ProductPriceOneTimeFixedCreate"
                                },
                                {
                                    "$ref": "#/components/schemas/ProductPriceOneTimeCustomCreate"
                                },
                                {
                                    "$ref": "#/components/schemas/ProductPriceOneTimeFreeCreate"
                                }
                            ]
                        },
                        "type": "array",
                        "maxItems": 1,
                        "minItems": 1,
                        "title": "ProductPriceOneTimeCreate",
                        "description": "List of available prices for this product."
                    },
                    "medias": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Medias",
                        "description": "List of file IDs. Each one must be on the same organization as the product, of type `product_media` and correctly uploaded."
                    },
                    "attached_custom_fields": {
                        "items": {
                            "$ref": "#/components/schemas/AttachedCustomFieldCreate"
                        },
                        "type": "array",
                        "title": "Attached Custom Fields",
                        "description": "List of custom fields to attach."
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4",
                                "description": "The organization ID.",
                                "x-polar-selector-widget": {
                                    "displayProperty": "name",
                                    "resourceName": "Organization",
                                    "resourceRoot": "/v1/organizations"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the product. **Required unless you use an organization token.**"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "prices"
                ],
                "title": "ProductOneTimeCreate",
                "description": "Schema to create a one-time product."
            },
            "ProductPrice": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ProductPriceRecurring"
                    },
                    {
                        "$ref": "#/components/schemas/ProductPriceOneTime"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "one_time": "#/components/schemas/ProductPriceOneTime",
                        "recurring": "#/components/schemas/ProductPriceRecurring"
                    }
                }
            },
            "ProductPriceOneTime": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ProductPriceOneTimeFixed"
                    },
                    {
                        "$ref": "#/components/schemas/ProductPriceOneTimeCustom"
                    },
                    {
                        "$ref": "#/components/schemas/ProductPriceOneTimeFree"
                    }
                ],
                "discriminator": {
                    "propertyName": "amount_type",
                    "mapping": {
                        "custom": "#/components/schemas/ProductPriceOneTimeCustom",
                        "fixed": "#/components/schemas/ProductPriceOneTimeFixed",
                        "free": "#/components/schemas/ProductPriceOneTimeFree"
                    }
                }
            },
            "ProductPriceOneTimeCustom": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the price."
                    },
                    "amount_type": {
                        "type": "string",
                        "enum": [
                            "custom"
                        ],
                        "const": "custom",
                        "title": "Amount Type"
                    },
                    "is_archived": {
                        "type": "boolean",
                        "title": "Is Archived",
                        "description": "Whether the price is archived and no longer available."
                    },
                    "product_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Id",
                        "description": "The ID of the product owning the price."
                    },
                    "price_currency": {
                        "type": "string",
                        "title": "Price Currency",
                        "description": "The currency."
                    },
                    "minimum_amount": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Minimum Amount",
                        "description": "The minimum amount the customer can pay."
                    },
                    "maximum_amount": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Maximum Amount",
                        "description": "The maximum amount the customer can pay."
                    },
                    "preset_amount": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Preset Amount",
                        "description": "The initial amount shown to the customer."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "one_time"
                        ],
                        "const": "one_time",
                        "title": "Type",
                        "description": "The type of the price."
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "amount_type",
                    "is_archived",
                    "product_id",
                    "price_currency",
                    "minimum_amount",
                    "maximum_amount",
                    "preset_amount",
                    "type"
                ],
                "title": "ProductPriceOneTimeCustom",
                "description": "A pay-what-you-want price for a one-time product."
            },
            "ProductPriceOneTimeCustomCreate": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "one_time"
                        ],
                        "const": "one_time",
                        "title": "Type"
                    },
                    "amount_type": {
                        "type": "string",
                        "enum": [
                            "custom"
                        ],
                        "const": "custom",
                        "title": "Amount Type"
                    },
                    "price_currency": {
                        "type": "string",
                        "pattern": "usd",
                        "title": "Price Currency",
                        "description": "The currency. Currently, only `usd` is supported.",
                        "default": "usd"
                    },
                    "minimum_amount": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 99999999,
                                "minimum": 50,
                                "description": "The price in cents."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Minimum Amount",
                        "description": "The minimum amount the customer can pay."
                    },
                    "maximum_amount": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 99999999,
                                "minimum": 50,
                                "description": "The price in cents."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Maximum Amount",
                        "description": "The maximum amount the customer can pay."
                    },
                    "preset_amount": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 99999999,
                                "minimum": 50,
                                "description": "The price in cents."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Preset Amount",
                        "description": "The initial amount shown to the customer."
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "amount_type"
                ],
                "title": "ProductPriceOneTimeCustomCreate",
                "description": "Schema to create a pay-what-you-want price for a one-time product."
            },
            "ProductPriceOneTimeFixed": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the price."
                    },
                    "amount_type": {
                        "type": "string",
                        "enum": [
                            "fixed"
                        ],
                        "const": "fixed",
                        "title": "Amount Type"
                    },
                    "is_archived": {
                        "type": "boolean",
                        "title": "Is Archived",
                        "description": "Whether the price is archived and no longer available."
                    },
                    "product_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Id",
                        "description": "The ID of the product owning the price."
                    },
                    "price_currency": {
                        "type": "string",
                        "title": "Price Currency",
                        "description": "The currency."
                    },
                    "price_amount": {
                        "type": "integer",
                        "title": "Price Amount",
                        "description": "The price in cents."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "one_time"
                        ],
                        "const": "one_time",
                        "title": "Type",
                        "description": "The type of the price."
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "amount_type",
                    "is_archived",
                    "product_id",
                    "price_currency",
                    "price_amount",
                    "type"
                ],
                "title": "ProductPriceOneTimeFixed",
                "description": "A one-time price for a product."
            },
            "ProductPriceOneTimeFixedCreate": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "one_time"
                        ],
                        "const": "one_time",
                        "title": "Type"
                    },
                    "amount_type": {
                        "type": "string",
                        "enum": [
                            "fixed"
                        ],
                        "const": "fixed",
                        "title": "Amount Type"
                    },
                    "price_amount": {
                        "type": "integer",
                        "maximum": 99999999,
                        "minimum": 50,
                        "title": "Price Amount",
                        "description": "The price in cents."
                    },
                    "price_currency": {
                        "type": "string",
                        "pattern": "usd",
                        "title": "Price Currency",
                        "description": "The currency. Currently, only `usd` is supported.",
                        "default": "usd"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "amount_type",
                    "price_amount"
                ],
                "title": "ProductPriceOneTimeFixedCreate",
                "description": "Schema to create a one-time product price."
            },
            "ProductPriceOneTimeFree": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the price."
                    },
                    "amount_type": {
                        "type": "string",
                        "enum": [
                            "free"
                        ],
                        "const": "free",
                        "title": "Amount Type"
                    },
                    "is_archived": {
                        "type": "boolean",
                        "title": "Is Archived",
                        "description": "Whether the price is archived and no longer available."
                    },
                    "product_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Id",
                        "description": "The ID of the product owning the price."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "one_time"
                        ],
                        "const": "one_time",
                        "title": "Type",
                        "description": "The type of the price."
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "amount_type",
                    "is_archived",
                    "product_id",
                    "type"
                ],
                "title": "ProductPriceOneTimeFree",
                "description": "A free one-time price for a product."
            },
            "ProductPriceOneTimeFreeCreate": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "one_time"
                        ],
                        "const": "one_time",
                        "title": "Type"
                    },
                    "amount_type": {
                        "type": "string",
                        "enum": [
                            "free"
                        ],
                        "const": "free",
                        "title": "Amount Type"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "amount_type"
                ],
                "title": "ProductPriceOneTimeFreeCreate",
                "description": "Schema to create a free one-time product price."
            },
            "ProductPriceRecurring": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ProductPriceRecurringFixed"
                    },
                    {
                        "$ref": "#/components/schemas/ProductPriceRecurringCustom"
                    },
                    {
                        "$ref": "#/components/schemas/ProductPriceRecurringFree"
                    }
                ],
                "discriminator": {
                    "propertyName": "amount_type",
                    "mapping": {
                        "custom": "#/components/schemas/ProductPriceRecurringCustom",
                        "fixed": "#/components/schemas/ProductPriceRecurringFixed",
                        "free": "#/components/schemas/ProductPriceRecurringFree"
                    }
                }
            },
            "ProductPriceRecurringCustom": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the price."
                    },
                    "amount_type": {
                        "type": "string",
                        "enum": [
                            "custom"
                        ],
                        "const": "custom",
                        "title": "Amount Type"
                    },
                    "is_archived": {
                        "type": "boolean",
                        "title": "Is Archived",
                        "description": "Whether the price is archived and no longer available."
                    },
                    "product_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Id",
                        "description": "The ID of the product owning the price."
                    },
                    "price_currency": {
                        "type": "string",
                        "title": "Price Currency",
                        "description": "The currency."
                    },
                    "minimum_amount": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Minimum Amount",
                        "description": "The minimum amount the customer can pay."
                    },
                    "maximum_amount": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Maximum Amount",
                        "description": "The maximum amount the customer can pay."
                    },
                    "preset_amount": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Preset Amount",
                        "description": "The initial amount shown to the customer."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "recurring"
                        ],
                        "const": "recurring",
                        "title": "Type",
                        "description": "The type of the price."
                    },
                    "recurring_interval": {
                        "$ref": "#/components/schemas/SubscriptionRecurringInterval",
                        "description": "The recurring interval of the price."
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "amount_type",
                    "is_archived",
                    "product_id",
                    "price_currency",
                    "minimum_amount",
                    "maximum_amount",
                    "preset_amount",
                    "type",
                    "recurring_interval"
                ],
                "title": "ProductPriceRecurringCustom",
                "description": "A pay-what-you-want recurring price for a product, i.e. a subscription."
            },
            "ProductPriceRecurringFixed": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the price."
                    },
                    "amount_type": {
                        "type": "string",
                        "enum": [
                            "fixed"
                        ],
                        "const": "fixed",
                        "title": "Amount Type"
                    },
                    "is_archived": {
                        "type": "boolean",
                        "title": "Is Archived",
                        "description": "Whether the price is archived and no longer available."
                    },
                    "product_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Id",
                        "description": "The ID of the product owning the price."
                    },
                    "price_currency": {
                        "type": "string",
                        "title": "Price Currency",
                        "description": "The currency."
                    },
                    "price_amount": {
                        "type": "integer",
                        "title": "Price Amount",
                        "description": "The price in cents."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "recurring"
                        ],
                        "const": "recurring",
                        "title": "Type",
                        "description": "The type of the price."
                    },
                    "recurring_interval": {
                        "$ref": "#/components/schemas/SubscriptionRecurringInterval",
                        "description": "The recurring interval of the price."
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "amount_type",
                    "is_archived",
                    "product_id",
                    "price_currency",
                    "price_amount",
                    "type",
                    "recurring_interval"
                ],
                "title": "ProductPriceRecurringFixed",
                "description": "A recurring price for a product, i.e. a subscription."
            },
            "ProductPriceRecurringFixedCreate": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "recurring"
                        ],
                        "const": "recurring",
                        "title": "Type"
                    },
                    "amount_type": {
                        "type": "string",
                        "enum": [
                            "fixed"
                        ],
                        "const": "fixed",
                        "title": "Amount Type"
                    },
                    "price_amount": {
                        "type": "integer",
                        "maximum": 99999999,
                        "minimum": 50,
                        "title": "Price Amount",
                        "description": "The price in cents."
                    },
                    "price_currency": {
                        "type": "string",
                        "pattern": "usd",
                        "title": "Price Currency",
                        "description": "The currency. Currently, only `usd` is supported.",
                        "default": "usd"
                    },
                    "recurring_interval": {
                        "$ref": "#/components/schemas/SubscriptionRecurringInterval",
                        "description": "The recurring interval of the price."
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "amount_type",
                    "price_amount",
                    "recurring_interval"
                ],
                "title": "ProductPriceRecurringFixedCreate",
                "description": "Schema to create a recurring product price, i.e. a subscription."
            },
            "ProductPriceRecurringFree": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the price."
                    },
                    "amount_type": {
                        "type": "string",
                        "enum": [
                            "free"
                        ],
                        "const": "free",
                        "title": "Amount Type"
                    },
                    "is_archived": {
                        "type": "boolean",
                        "title": "Is Archived",
                        "description": "Whether the price is archived and no longer available."
                    },
                    "product_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Id",
                        "description": "The ID of the product owning the price."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "recurring"
                        ],
                        "const": "recurring",
                        "title": "Type",
                        "description": "The type of the price."
                    },
                    "recurring_interval": {
                        "$ref": "#/components/schemas/SubscriptionRecurringInterval",
                        "description": "The recurring interval of the price."
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "amount_type",
                    "is_archived",
                    "product_id",
                    "type",
                    "recurring_interval"
                ],
                "title": "ProductPriceRecurringFree",
                "description": "A free recurring price for a product, i.e. a subscription."
            },
            "ProductPriceRecurringFreeCreate": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "recurring"
                        ],
                        "const": "recurring",
                        "title": "Type"
                    },
                    "amount_type": {
                        "type": "string",
                        "enum": [
                            "free"
                        ],
                        "const": "free",
                        "title": "Amount Type"
                    },
                    "recurring_interval": {
                        "$ref": "#/components/schemas/SubscriptionRecurringInterval",
                        "description": "The recurring interval of the price."
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "amount_type",
                    "recurring_interval"
                ],
                "title": "ProductPriceRecurringFreeCreate",
                "description": "Schema to create a free recurring product price, i.e. a subscription."
            },
            "ProductPriceType": {
                "type": "string",
                "enum": [
                    "one_time",
                    "recurring"
                ],
                "title": "ProductPriceType"
            },
            "ProductRecurringCreate": {
                "properties": {
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "maxLength": 500,
                                    "minLength": 1
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "maxProperties": 50,
                        "title": "Metadata",
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 3,
                        "title": "Name",
                        "description": "The name of the product."
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "The description of the product."
                    },
                    "prices": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ProductPriceRecurringFixedCreate"
                                },
                                "type": "array",
                                "maxItems": 2,
                                "minItems": 1,
                                "title": "ProductPriceRecurringFixedCreate",
                                "description": "List of recurring prices. Only one price per interval (one monthly and one yearly) is allowed."
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ProductPriceRecurringFreeCreate"
                                },
                                "type": "array",
                                "maxItems": 1,
                                "minItems": 1,
                                "title": "ProductPriceRecurringFreeCreate",
                                "description": "List with a single free recurring price."
                            }
                        ],
                        "title": "Prices",
                        "description": "List of available prices for this product."
                    },
                    "medias": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Medias",
                        "description": "List of file IDs. Each one must be on the same organization as the product, of type `product_media` and correctly uploaded."
                    },
                    "attached_custom_fields": {
                        "items": {
                            "$ref": "#/components/schemas/AttachedCustomFieldCreate"
                        },
                        "type": "array",
                        "title": "Attached Custom Fields",
                        "description": "List of custom fields to attach."
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4",
                                "description": "The organization ID.",
                                "x-polar-selector-widget": {
                                    "displayProperty": "name",
                                    "resourceName": "Organization",
                                    "resourceRoot": "/v1/organizations"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the product. **Required unless you use an organization token.**"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "prices"
                ],
                "title": "ProductRecurringCreate",
                "description": "Schema to create a recurring product, i.e. a subscription."
            },
            "ProductSortProperty": {
                "type": "string",
                "enum": [
                    "created_at",
                    "-created_at",
                    "name",
                    "-name",
                    "price_type",
                    "-price_type",
                    "price_amount_type",
                    "-price_amount_type",
                    "price_amount",
                    "-price_amount"
                ],
                "title": "ProductSortProperty"
            },
            "ProductStorefront": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the product."
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "The name of the product."
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "The description of the product."
                    },
                    "is_recurring": {
                        "type": "boolean",
                        "title": "Is Recurring",
                        "description": "Whether the product is a subscription tier."
                    },
                    "is_archived": {
                        "type": "boolean",
                        "title": "Is Archived",
                        "description": "Whether the product is archived and no longer available."
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id",
                        "description": "The ID of the organization owning the product."
                    },
                    "prices": {
                        "items": {
                            "$ref": "#/components/schemas/ProductPrice"
                        },
                        "type": "array",
                        "title": "Prices",
                        "description": "List of available prices for this product."
                    },
                    "benefits": {
                        "items": {
                            "$ref": "#/components/schemas/BenefitBase"
                        },
                        "type": "array",
                        "title": "BenefitPublic",
                        "description": "The benefits granted by the product."
                    },
                    "medias": {
                        "items": {
                            "$ref": "#/components/schemas/ProductMediaFileRead"
                        },
                        "type": "array",
                        "title": "Medias",
                        "description": "The medias associated to the product."
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "name",
                    "description",
                    "is_recurring",
                    "is_archived",
                    "organization_id",
                    "prices",
                    "benefits",
                    "medias"
                ],
                "title": "ProductStorefront",
                "description": "Schema of a public product."
            },
            "ProductUpdate": {
                "properties": {
                    "metadata": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "maxLength": 500,
                                            "minLength": 1
                                        },
                                        {
                                            "type": "integer"
                                        },
                                        {
                                            "type": "boolean"
                                        }
                                    ]
                                },
                                "type": "object",
                                "maxProperties": 50
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata",
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "minLength": 3,
                                "description": "The name of the product."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "The description of the product."
                    },
                    "is_archived": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Archived",
                        "description": "Whether the product is archived. If `true`, the product won't be available for purchase anymore. Existing customers will still have access to their benefits, and subscriptions will continue normally."
                    },
                    "prices": {
                        "anyOf": [
                            {
                                "items": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/ExistingProductPrice"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ProductPriceRecurringFixedCreate"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ProductPriceRecurringFreeCreate"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ProductPriceOneTimeFixedCreate"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ProductPriceOneTimeCustomCreate"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ProductPriceOneTimeFreeCreate"
                                        }
                                    ]
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Prices",
                        "description": "List of available prices for this product. If you want to keep existing prices, include them in the list as an `ExistingProductPrice` object."
                    },
                    "medias": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Medias",
                        "description": "List of file IDs. Each one must be on the same organization as the product, of type `product_media` and correctly uploaded."
                    },
                    "attached_custom_fields": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/AttachedCustomFieldCreate"
                                },
                                "type": "array",
                                "description": "List of custom fields to attach."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Attached Custom Fields"
                    }
                },
                "type": "object",
                "title": "ProductUpdate",
                "description": "Schema to update a product."
            },
            "Reactions": {
                "properties": {
                    "total_count": {
                        "type": "integer",
                        "title": "Total Count"
                    },
                    "plus_one": {
                        "type": "integer",
                        "title": "Plus One"
                    },
                    "minus_one": {
                        "type": "integer",
                        "title": "Minus One"
                    },
                    "laugh": {
                        "type": "integer",
                        "title": "Laugh"
                    },
                    "hooray": {
                        "type": "integer",
                        "title": "Hooray"
                    },
                    "confused": {
                        "type": "integer",
                        "title": "Confused"
                    },
                    "heart": {
                        "type": "integer",
                        "title": "Heart"
                    },
                    "rocket": {
                        "type": "integer",
                        "title": "Rocket"
                    },
                    "eyes": {
                        "type": "integer",
                        "title": "Eyes"
                    }
                },
                "type": "object",
                "required": [
                    "total_count",
                    "plus_one",
                    "minus_one",
                    "laugh",
                    "hooray",
                    "confused",
                    "heart",
                    "rocket",
                    "eyes"
                ],
                "title": "Reactions"
            },
            "Repository": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "platform": {
                        "$ref": "#/components/schemas/Platforms"
                    },
                    "is_private": {
                        "type": "boolean",
                        "title": "Is Private"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "examples": [
                            "MyOrg"
                        ]
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "stars": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Stars",
                        "examples": [
                            1337
                        ]
                    },
                    "license": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "License"
                    },
                    "homepage": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Homepage"
                    },
                    "profile_settings": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/RepositoryProfileSettings"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Settings for the repository profile"
                    },
                    "organization": {
                        "$ref": "#/components/schemas/ExternalOrganization"
                    },
                    "internal_organization": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Organization"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "platform",
                    "is_private",
                    "name",
                    "description",
                    "stars",
                    "license",
                    "homepage",
                    "profile_settings",
                    "organization",
                    "internal_organization"
                ],
                "title": "Repository"
            },
            "RepositoryBadgeSettingsRead": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "avatar_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Avatar Url"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "synced_issues": {
                        "type": "integer",
                        "title": "Synced Issues"
                    },
                    "open_issues": {
                        "type": "integer",
                        "title": "Open Issues"
                    },
                    "auto_embedded_issues": {
                        "type": "integer",
                        "title": "Auto Embedded Issues"
                    },
                    "label_embedded_issues": {
                        "type": "integer",
                        "title": "Label Embedded Issues"
                    },
                    "badge_auto_embed": {
                        "type": "boolean",
                        "title": "Badge Auto Embed"
                    },
                    "badge_label": {
                        "type": "string",
                        "title": "Badge Label"
                    },
                    "is_private": {
                        "type": "boolean",
                        "title": "Is Private"
                    },
                    "is_sync_completed": {
                        "type": "boolean",
                        "title": "Is Sync Completed"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "avatar_url",
                    "name",
                    "synced_issues",
                    "open_issues",
                    "auto_embedded_issues",
                    "label_embedded_issues",
                    "badge_auto_embed",
                    "badge_label",
                    "is_private",
                    "is_sync_completed"
                ],
                "title": "RepositoryBadgeSettingsRead"
            },
            "RepositoryBadgeSettingsUpdate": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "badge_auto_embed": {
                        "type": "boolean",
                        "title": "Badge Auto Embed"
                    },
                    "retroactive": {
                        "type": "boolean",
                        "title": "Retroactive"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "badge_auto_embed",
                    "retroactive"
                ],
                "title": "RepositoryBadgeSettingsUpdate"
            },
            "RepositoryProfileSettings": {
                "properties": {
                    "description": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 240
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "A description of the repository"
                    },
                    "cover_image_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cover Image Url",
                        "description": "A URL to a cover image"
                    },
                    "featured_organizations": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Featured Organizations",
                        "description": "A list of featured organizations"
                    },
                    "highlighted_subscription_tiers": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Highlighted Subscription Tiers",
                        "description": "A list of highlighted subscription tiers"
                    },
                    "links": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "maxLength": 2083,
                                    "minLength": 1,
                                    "format": "uri"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Links",
                        "description": "A list of links related to the repository"
                    }
                },
                "type": "object",
                "title": "RepositoryProfileSettings"
            },
            "RepositoryProfileSettingsUpdate": {
                "properties": {
                    "set_description": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Set Description"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 240
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "set_cover_image_url": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Set Cover Image Url"
                    },
                    "cover_image_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cover Image Url"
                    },
                    "featured_organizations": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Featured Organizations"
                    },
                    "highlighted_subscription_tiers": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "format": "uuid4"
                                },
                                "type": "array",
                                "maxItems": 3
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Highlighted Subscription Tiers"
                    },
                    "links": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "maxLength": 2083,
                                    "minLength": 1,
                                    "format": "uri"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Links"
                    }
                },
                "type": "object",
                "title": "RepositoryProfileSettingsUpdate"
            },
            "RepositorySortProperty": {
                "type": "string",
                "enum": [
                    "created_at",
                    "-created_at",
                    "name",
                    "-name",
                    "stars",
                    "-stars"
                ],
                "title": "RepositorySortProperty"
            },
            "RepositoryUpdate": {
                "properties": {
                    "profile_settings": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/RepositoryProfileSettingsUpdate"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "title": "RepositoryUpdate"
            },
            "ResourceNotFound": {
                "properties": {
                    "error": {
                        "type": "string",
                        "enum": [
                            "ResourceNotFound"
                        ],
                        "const": "ResourceNotFound",
                        "title": "Error"
                    },
                    "detail": {
                        "type": "string",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "required": [
                    "error",
                    "detail"
                ],
                "title": "ResourceNotFound"
            },
            "RevokeTokenResponse": {
                "properties": {},
                "type": "object",
                "title": "RevokeTokenResponse"
            },
            "Reward": {
                "properties": {
                    "pledge": {
                        "$ref": "#/components/schemas/Pledge",
                        "description": "The pledge that the reward was split from"
                    },
                    "user": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/User"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "The user that received the reward (if any)"
                    },
                    "organization": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Organization"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "The organization that received the reward (if any)"
                    },
                    "amount": {
                        "$ref": "#/components/schemas/CurrencyAmount"
                    },
                    "state": {
                        "$ref": "#/components/schemas/RewardState"
                    },
                    "paid_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Paid At",
                        "description": "If and when the reward was paid out."
                    }
                },
                "type": "object",
                "required": [
                    "pledge",
                    "amount",
                    "state"
                ],
                "title": "Reward"
            },
            "RewardPaidNotification": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "RewardPaidNotification"
                        ],
                        "const": "RewardPaidNotification",
                        "title": "Type"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/RewardPaidNotificationPayload"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "created_at",
                    "type",
                    "payload"
                ],
                "title": "RewardPaidNotification"
            },
            "RewardPaidNotificationPayload": {
                "properties": {
                    "paid_out_amount": {
                        "type": "string",
                        "title": "Paid Out Amount"
                    },
                    "issue_url": {
                        "type": "string",
                        "title": "Issue Url"
                    },
                    "issue_title": {
                        "type": "string",
                        "title": "Issue Title"
                    },
                    "issue_org_name": {
                        "type": "string",
                        "title": "Issue Org Name"
                    },
                    "issue_repo_name": {
                        "type": "string",
                        "title": "Issue Repo Name"
                    },
                    "issue_number": {
                        "type": "integer",
                        "title": "Issue Number"
                    },
                    "issue_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Issue Id"
                    },
                    "pledge_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Pledge Id"
                    }
                },
                "type": "object",
                "required": [
                    "paid_out_amount",
                    "issue_url",
                    "issue_title",
                    "issue_org_name",
                    "issue_repo_name",
                    "issue_number",
                    "issue_id",
                    "pledge_id"
                ],
                "title": "RewardPaidNotificationPayload"
            },
            "RewardState": {
                "type": "string",
                "enum": [
                    "pending",
                    "paid"
                ],
                "title": "RewardState"
            },
            "RewardsSummary": {
                "properties": {
                    "receivers": {
                        "items": {
                            "$ref": "#/components/schemas/RewardsSummaryReceiver"
                        },
                        "type": "array",
                        "title": "Receivers"
                    }
                },
                "type": "object",
                "required": [
                    "receivers"
                ],
                "title": "RewardsSummary"
            },
            "RewardsSummaryReceiver": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "avatar_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Avatar Url"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "avatar_url"
                ],
                "title": "RewardsSummaryReceiver"
            },
            "S3DownloadURL": {
                "properties": {
                    "url": {
                        "type": "string",
                        "title": "Url"
                    },
                    "headers": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object",
                        "title": "Headers",
                        "default": {}
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Expires At"
                    }
                },
                "type": "object",
                "required": [
                    "url",
                    "expires_at"
                ],
                "title": "S3DownloadURL"
            },
            "S3FileCreateMultipart": {
                "properties": {
                    "parts": {
                        "items": {
                            "$ref": "#/components/schemas/S3FileCreatePart"
                        },
                        "type": "array",
                        "title": "Parts"
                    }
                },
                "type": "object",
                "required": [
                    "parts"
                ],
                "title": "S3FileCreateMultipart"
            },
            "S3FileCreatePart": {
                "properties": {
                    "number": {
                        "type": "integer",
                        "title": "Number"
                    },
                    "chunk_start": {
                        "type": "integer",
                        "title": "Chunk Start"
                    },
                    "chunk_end": {
                        "type": "integer",
                        "title": "Chunk End"
                    },
                    "checksum_sha256_base64": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Checksum Sha256 Base64"
                    }
                },
                "type": "object",
                "required": [
                    "number",
                    "chunk_start",
                    "chunk_end"
                ],
                "title": "S3FileCreatePart"
            },
            "S3FileUploadCompletedPart": {
                "properties": {
                    "number": {
                        "type": "integer",
                        "title": "Number"
                    },
                    "checksum_etag": {
                        "type": "string",
                        "title": "Checksum Etag"
                    },
                    "checksum_sha256_base64": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Checksum Sha256 Base64"
                    }
                },
                "type": "object",
                "required": [
                    "number",
                    "checksum_etag",
                    "checksum_sha256_base64"
                ],
                "title": "S3FileUploadCompletedPart"
            },
            "S3FileUploadMultipart": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "path": {
                        "type": "string",
                        "title": "Path"
                    },
                    "parts": {
                        "items": {
                            "$ref": "#/components/schemas/S3FileUploadPart"
                        },
                        "type": "array",
                        "title": "Parts"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "path",
                    "parts"
                ],
                "title": "S3FileUploadMultipart"
            },
            "S3FileUploadPart": {
                "properties": {
                    "number": {
                        "type": "integer",
                        "title": "Number"
                    },
                    "chunk_start": {
                        "type": "integer",
                        "title": "Chunk Start"
                    },
                    "chunk_end": {
                        "type": "integer",
                        "title": "Chunk End"
                    },
                    "checksum_sha256_base64": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Checksum Sha256 Base64"
                    },
                    "url": {
                        "type": "string",
                        "title": "Url"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Expires At"
                    },
                    "headers": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object",
                        "title": "Headers",
                        "default": {}
                    }
                },
                "type": "object",
                "required": [
                    "number",
                    "chunk_start",
                    "chunk_end",
                    "url",
                    "expires_at"
                ],
                "title": "S3FileUploadPart"
            },
            "Scope": {
                "type": "string",
                "enum": [
                    "openid",
                    "profile",
                    "email",
                    "user:read",
                    "admin",
                    "web_default",
                    "organizations:read",
                    "organizations:write",
                    "custom_fields:read",
                    "custom_fields:write",
                    "discounts:read",
                    "discounts:write",
                    "checkout_links:read",
                    "checkout_links:write",
                    "checkouts:read",
                    "checkouts:write",
                    "products:read",
                    "products:write",
                    "benefits:read",
                    "benefits:write",
                    "files:read",
                    "files:write",
                    "subscriptions:read",
                    "subscriptions:write",
                    "customers:read",
                    "customers:write",
                    "orders:read",
                    "metrics:read",
                    "webhooks:read",
                    "webhooks:write",
                    "external_organizations:read",
                    "license_keys:read",
                    "license_keys:write",
                    "repositories:read",
                    "repositories:write",
                    "issues:read",
                    "issues:write",
                    "customer_portal:read",
                    "customer_portal:write"
                ],
                "title": "Scope",
                "enumNames": {
                    "benefits:read": "Read benefits",
                    "benefits:write": "Create or modify benefits",
                    "checkout_links:read": "Read checkout links",
                    "checkout_links:write": "Create or modify checkout links",
                    "checkouts:read": "Read checkout sessions",
                    "checkouts:write": "Create or modify checkout sessions",
                    "custom_fields:read": "Read custom fields",
                    "custom_fields:write": "Create or modify custom fields",
                    "customer_portal:read": "Read your orders, subscriptions and benefits",
                    "customer_portal:write": "Create or modify your orders, subscriptions and benefits",
                    "customers:read": "Read customers",
                    "customers:write": "Create or modify customers",
                    "discounts:read": "Read discounts",
                    "discounts:write": "Create or modify discounts",
                    "email": "Read your email address",
                    "files:read": "Read file uploads",
                    "files:write": "Create or modify file uploads",
                    "license_keys:read": "Read license keys",
                    "license_keys:write": "Modify license keys",
                    "metrics:read": "Read metrics",
                    "openid": "OpenID",
                    "orders:read": "Read orders made on your organizations",
                    "organizations:read": "Read your organizations",
                    "organizations:write": "Create or modify organizations",
                    "products:read": "Read products",
                    "products:write": "Create or modify products",
                    "profile": "Read your profile",
                    "subscriptions:read": "Read subscriptions made on your organizations",
                    "subscriptions:write": "Create or modify subscriptions made on your organizations",
                    "user:read": "User Read",
                    "web_default": "Web Default",
                    "webhooks:read": "Read webhooks",
                    "webhooks:write": "Create or modify webhooks"
                }
            },
            "State": {
                "type": "string",
                "enum": [
                    "open",
                    "closed"
                ],
                "title": "State"
            },
            "Status": {
                "type": "string",
                "enum": [
                    "created",
                    "onboarding_started",
                    "under_review",
                    "active"
                ],
                "title": "Status"
            },
            "Storefront": {
                "properties": {
                    "organization": {
                        "$ref": "#/components/schemas/Organization"
                    },
                    "products": {
                        "items": {
                            "$ref": "#/components/schemas/ProductStorefront"
                        },
                        "type": "array",
                        "title": "Products"
                    },
                    "donation_product": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ProductStorefront"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "customers": {
                        "$ref": "#/components/schemas/StorefrontCustomers"
                    }
                },
                "type": "object",
                "required": [
                    "organization",
                    "products",
                    "donation_product",
                    "customers"
                ],
                "title": "Storefront",
                "description": "Schema of a public storefront."
            },
            "StorefrontCustomer": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "StorefrontCustomer"
            },
            "StorefrontCustomers": {
                "properties": {
                    "total": {
                        "type": "integer",
                        "title": "Total"
                    },
                    "customers": {
                        "items": {
                            "$ref": "#/components/schemas/StorefrontCustomer"
                        },
                        "type": "array",
                        "title": "Customers"
                    }
                },
                "type": "object",
                "required": [
                    "total",
                    "customers"
                ],
                "title": "StorefrontCustomers"
            },
            "SubType": {
                "type": "string",
                "enum": [
                    "user",
                    "organization"
                ],
                "title": "SubType"
            },
            "Subscription": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "amount": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Amount"
                    },
                    "currency": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Currency"
                    },
                    "recurring_interval": {
                        "$ref": "#/components/schemas/SubscriptionRecurringInterval"
                    },
                    "status": {
                        "$ref": "#/components/schemas/SubscriptionStatus"
                    },
                    "current_period_start": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Current Period Start"
                    },
                    "current_period_end": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Current Period End"
                    },
                    "cancel_at_period_end": {
                        "type": "boolean",
                        "title": "Cancel At Period End"
                    },
                    "started_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Started At"
                    },
                    "ended_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Ended At"
                    },
                    "customer_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Customer Id"
                    },
                    "product_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Product Id"
                    },
                    "price_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Price Id"
                    },
                    "discount_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Discount Id"
                    },
                    "checkout_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Checkout Id"
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "custom_field_data": {
                        "type": "object",
                        "title": "Custom Field Data",
                        "description": "Key-value object storing custom field values."
                    },
                    "customer": {
                        "$ref": "#/components/schemas/SubscriptionCustomer"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "User Id",
                        "deprecated": true
                    },
                    "user": {
                        "$ref": "#/components/schemas/SubscriptionUser",
                        "deprecated": true
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    },
                    "price": {
                        "$ref": "#/components/schemas/ProductPriceRecurring"
                    },
                    "discount": {
                        "anyOf": [
                            {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/DiscountFixedOnceForeverDurationBase"
                                    },
                                    {
                                        "$ref": "#/components/schemas/DiscountFixedRepeatDurationBase"
                                    },
                                    {
                                        "$ref": "#/components/schemas/DiscountPercentageOnceForeverDurationBase"
                                    },
                                    {
                                        "$ref": "#/components/schemas/DiscountPercentageRepeatDurationBase"
                                    }
                                ],
                                "title": "SubscriptionDiscount"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Discount"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "amount",
                    "currency",
                    "recurring_interval",
                    "status",
                    "current_period_start",
                    "current_period_end",
                    "cancel_at_period_end",
                    "started_at",
                    "ended_at",
                    "customer_id",
                    "product_id",
                    "price_id",
                    "discount_id",
                    "checkout_id",
                    "metadata",
                    "customer",
                    "user_id",
                    "user",
                    "product",
                    "price",
                    "discount"
                ],
                "title": "Subscription"
            },
            "SubscriptionCustomer": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "email_verified": {
                        "type": "boolean",
                        "title": "Email Verified"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "billing_address": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Address"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "tax_id": {
                        "anyOf": [
                            {
                                "prefixItems": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "$ref": "#/components/schemas/TaxIDFormat"
                                    }
                                ],
                                "type": "array",
                                "maxItems": 2,
                                "minItems": 2
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tax Id"
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id"
                    },
                    "avatar_url": {
                        "type": "string",
                        "title": "Avatar Url",
                        "readOnly": true
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "metadata",
                    "email",
                    "email_verified",
                    "name",
                    "billing_address",
                    "tax_id",
                    "organization_id",
                    "avatar_url"
                ],
                "title": "SubscriptionCustomer"
            },
            "SubscriptionRecurringInterval": {
                "type": "string",
                "enum": [
                    "month",
                    "year"
                ],
                "title": "SubscriptionRecurringInterval"
            },
            "SubscriptionSortProperty": {
                "type": "string",
                "enum": [
                    "customer",
                    "-customer",
                    "status",
                    "-status",
                    "started_at",
                    "-started_at",
                    "current_period_end",
                    "-current_period_end",
                    "amount",
                    "-amount",
                    "product",
                    "-product",
                    "discount",
                    "-discount"
                ],
                "title": "SubscriptionSortProperty"
            },
            "SubscriptionStatus": {
                "type": "string",
                "enum": [
                    "incomplete",
                    "incomplete_expired",
                    "trialing",
                    "active",
                    "past_due",
                    "canceled",
                    "unpaid"
                ],
                "title": "SubscriptionStatus"
            },
            "SubscriptionUser": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "public_name": {
                        "type": "string",
                        "title": "Public Name"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "email",
                    "public_name"
                ],
                "title": "SubscriptionUser"
            },
            "SummaryPledge": {
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/PledgeType",
                        "description": "Type of pledge"
                    },
                    "pledger": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Pledger"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "pledger"
                ],
                "title": "SummaryPledge"
            },
            "TaxIDFormat": {
                "type": "string",
                "enum": [
                    "ad_nrt",
                    "ae_trn",
                    "ar_cuit",
                    "au_abn",
                    "au_arn",
                    "bg_uic",
                    "bh_vat",
                    "bo_tin",
                    "br_cnpj",
                    "br_cpf",
                    "ca_bn",
                    "ca_gst_hst",
                    "ca_pst_bc",
                    "ca_pst_mb",
                    "ca_pst_sk",
                    "ca_qst",
                    "ch_uid",
                    "ch_vat",
                    "cl_tin",
                    "cn_tin",
                    "co_nit",
                    "cr_tin",
                    "de_stn",
                    "do_rcn",
                    "ec_ruc",
                    "eg_tin",
                    "es_cif",
                    "eu_oss_vat",
                    "eu_vat",
                    "gb_vat",
                    "ge_vat",
                    "hk_br",
                    "hr_oib",
                    "hu_tin",
                    "id_npwp",
                    "il_vat",
                    "in_gst",
                    "is_vat",
                    "jp_cn",
                    "jp_rn",
                    "jp_trn",
                    "ke_pin",
                    "kr_brn",
                    "kz_bin",
                    "li_uid",
                    "mx_rfc",
                    "my_frp",
                    "my_itn",
                    "my_sst",
                    "ng_tin",
                    "no_vat",
                    "no_voec",
                    "nz_gst",
                    "om_vat",
                    "pe_ruc",
                    "ph_tin",
                    "ro_tin",
                    "rs_pib",
                    "ru_inn",
                    "ru_kpp",
                    "sa_vat",
                    "sg_gst",
                    "sg_uen",
                    "si_tin",
                    "sv_nit",
                    "th_vat",
                    "tr_tin",
                    "tw_vat",
                    "ua_vat",
                    "us_ein",
                    "uy_ruc",
                    "ve_rif",
                    "vn_tin",
                    "za_vat"
                ],
                "title": "TaxIDFormat",
                "description": "List of supported tax ID formats.\n\nRef: https://docs.stripe.com/billing/customer/tax-ids#supported-tax-id"
            },
            "TeamAdminMemberPledgedNotification": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "TeamAdminMemberPledgedNotification"
                        ],
                        "const": "TeamAdminMemberPledgedNotification",
                        "title": "Type"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/TeamAdminMemberPledgedNotificationPayload"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "created_at",
                    "type",
                    "payload"
                ],
                "title": "TeamAdminMemberPledgedNotification"
            },
            "TeamAdminMemberPledgedNotificationPayload": {
                "properties": {
                    "team_member_name": {
                        "type": "string",
                        "title": "Team Member Name"
                    },
                    "team_name": {
                        "type": "string",
                        "title": "Team Name"
                    },
                    "pledge_amount": {
                        "type": "string",
                        "title": "Pledge Amount"
                    },
                    "issue_url": {
                        "type": "string",
                        "title": "Issue Url"
                    },
                    "issue_title": {
                        "type": "string",
                        "title": "Issue Title"
                    },
                    "issue_number": {
                        "type": "integer",
                        "title": "Issue Number"
                    },
                    "issue_org_name": {
                        "type": "string",
                        "title": "Issue Org Name"
                    },
                    "issue_repo_name": {
                        "type": "string",
                        "title": "Issue Repo Name"
                    },
                    "pledge_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Pledge Id"
                    }
                },
                "type": "object",
                "required": [
                    "team_member_name",
                    "team_name",
                    "pledge_amount",
                    "issue_url",
                    "issue_title",
                    "issue_number",
                    "issue_org_name",
                    "issue_repo_name",
                    "pledge_id"
                ],
                "title": "TeamAdminMemberPledgedNotificationPayload"
            },
            "TokenResponse": {
                "properties": {
                    "access_token": {
                        "type": "string",
                        "title": "Access Token"
                    },
                    "token_type": {
                        "type": "string",
                        "enum": [
                            "Bearer"
                        ],
                        "const": "Bearer",
                        "title": "Token Type"
                    },
                    "expires_in": {
                        "type": "integer",
                        "title": "Expires In"
                    },
                    "refresh_token": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Refresh Token"
                    },
                    "scope": {
                        "type": "string",
                        "title": "Scope"
                    },
                    "id_token": {
                        "type": "string",
                        "title": "Id Token"
                    }
                },
                "type": "object",
                "required": [
                    "access_token",
                    "token_type",
                    "expires_in",
                    "refresh_token",
                    "scope",
                    "id_token"
                ],
                "title": "TokenResponse"
            },
            "Transaction": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "type": {
                        "$ref": "#/components/schemas/TransactionType"
                    },
                    "processor": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/polar__models__transaction__PaymentProcessor"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "currency": {
                        "type": "string",
                        "title": "Currency"
                    },
                    "amount": {
                        "type": "integer",
                        "title": "Amount"
                    },
                    "account_currency": {
                        "type": "string",
                        "title": "Account Currency"
                    },
                    "account_amount": {
                        "type": "integer",
                        "title": "Account Amount"
                    },
                    "platform_fee_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PlatformFeeType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "pledge_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pledge Id"
                    },
                    "issue_reward_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Issue Reward Id"
                    },
                    "order_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Order Id"
                    },
                    "payout_transaction_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Payout Transaction Id"
                    },
                    "incurred_by_transaction_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Incurred By Transaction Id"
                    },
                    "pledge": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TransactionPledge"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "issue_reward": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TransactionIssueReward"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "order": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TransactionOrder"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "account_incurred_transactions": {
                        "items": {
                            "$ref": "#/components/schemas/TransactionEmbedded"
                        },
                        "type": "array",
                        "title": "Account Incurred Transactions"
                    },
                    "incurred_amount": {
                        "type": "integer",
                        "title": "Incurred Amount"
                    },
                    "gross_amount": {
                        "type": "integer",
                        "title": "Gross Amount"
                    },
                    "net_amount": {
                        "type": "integer",
                        "title": "Net Amount"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "type",
                    "processor",
                    "currency",
                    "amount",
                    "account_currency",
                    "account_amount",
                    "platform_fee_type",
                    "pledge_id",
                    "issue_reward_id",
                    "order_id",
                    "payout_transaction_id",
                    "incurred_by_transaction_id",
                    "pledge",
                    "issue_reward",
                    "order",
                    "account_incurred_transactions",
                    "incurred_amount",
                    "gross_amount",
                    "net_amount"
                ],
                "title": "Transaction"
            },
            "TransactionDetails": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "type": {
                        "$ref": "#/components/schemas/TransactionType"
                    },
                    "processor": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/polar__models__transaction__PaymentProcessor"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "currency": {
                        "type": "string",
                        "title": "Currency"
                    },
                    "amount": {
                        "type": "integer",
                        "title": "Amount"
                    },
                    "account_currency": {
                        "type": "string",
                        "title": "Account Currency"
                    },
                    "account_amount": {
                        "type": "integer",
                        "title": "Account Amount"
                    },
                    "platform_fee_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PlatformFeeType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "pledge_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pledge Id"
                    },
                    "issue_reward_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Issue Reward Id"
                    },
                    "order_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Order Id"
                    },
                    "payout_transaction_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Payout Transaction Id"
                    },
                    "incurred_by_transaction_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Incurred By Transaction Id"
                    },
                    "pledge": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TransactionPledge"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "issue_reward": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TransactionIssueReward"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "order": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TransactionOrder"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "account_incurred_transactions": {
                        "items": {
                            "$ref": "#/components/schemas/TransactionEmbedded"
                        },
                        "type": "array",
                        "title": "Account Incurred Transactions"
                    },
                    "incurred_amount": {
                        "type": "integer",
                        "title": "Incurred Amount"
                    },
                    "gross_amount": {
                        "type": "integer",
                        "title": "Gross Amount"
                    },
                    "net_amount": {
                        "type": "integer",
                        "title": "Net Amount"
                    },
                    "paid_transactions": {
                        "items": {
                            "$ref": "#/components/schemas/Transaction"
                        },
                        "type": "array",
                        "title": "Paid Transactions"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "type",
                    "processor",
                    "currency",
                    "amount",
                    "account_currency",
                    "account_amount",
                    "platform_fee_type",
                    "pledge_id",
                    "issue_reward_id",
                    "order_id",
                    "payout_transaction_id",
                    "incurred_by_transaction_id",
                    "pledge",
                    "issue_reward",
                    "order",
                    "account_incurred_transactions",
                    "incurred_amount",
                    "gross_amount",
                    "net_amount",
                    "paid_transactions"
                ],
                "title": "TransactionDetails"
            },
            "TransactionEmbedded": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "type": {
                        "$ref": "#/components/schemas/TransactionType"
                    },
                    "processor": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/polar__models__transaction__PaymentProcessor"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "currency": {
                        "type": "string",
                        "title": "Currency"
                    },
                    "amount": {
                        "type": "integer",
                        "title": "Amount"
                    },
                    "account_currency": {
                        "type": "string",
                        "title": "Account Currency"
                    },
                    "account_amount": {
                        "type": "integer",
                        "title": "Account Amount"
                    },
                    "platform_fee_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PlatformFeeType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "pledge_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pledge Id"
                    },
                    "issue_reward_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Issue Reward Id"
                    },
                    "order_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Order Id"
                    },
                    "payout_transaction_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Payout Transaction Id"
                    },
                    "incurred_by_transaction_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Incurred By Transaction Id"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "type",
                    "processor",
                    "currency",
                    "amount",
                    "account_currency",
                    "account_amount",
                    "platform_fee_type",
                    "pledge_id",
                    "issue_reward_id",
                    "order_id",
                    "payout_transaction_id",
                    "incurred_by_transaction_id"
                ],
                "title": "TransactionEmbedded"
            },
            "TransactionExternalOrganization": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "platform": {
                        "$ref": "#/components/schemas/Platforms"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "avatar_url": {
                        "type": "string",
                        "title": "Avatar Url"
                    },
                    "is_personal": {
                        "type": "boolean",
                        "title": "Is Personal"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "platform",
                    "name",
                    "avatar_url",
                    "is_personal"
                ],
                "title": "TransactionExternalOrganization"
            },
            "TransactionIssue": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "platform": {
                        "$ref": "#/components/schemas/Platforms"
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id"
                    },
                    "repository_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Repository Id"
                    },
                    "number": {
                        "type": "integer",
                        "title": "Number"
                    },
                    "title": {
                        "type": "string",
                        "title": "Title"
                    },
                    "organization": {
                        "$ref": "#/components/schemas/TransactionExternalOrganization"
                    },
                    "repository": {
                        "$ref": "#/components/schemas/TransactionRepository"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "platform",
                    "organization_id",
                    "repository_id",
                    "number",
                    "title",
                    "organization",
                    "repository"
                ],
                "title": "TransactionIssue"
            },
            "TransactionIssueReward": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "issue_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Issue Id"
                    },
                    "share_thousands": {
                        "type": "integer",
                        "title": "Share Thousands"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "issue_id",
                    "share_thousands"
                ],
                "title": "TransactionIssueReward"
            },
            "TransactionOrder": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "product": {
                        "$ref": "#/components/schemas/TransactionProduct"
                    },
                    "product_price": {
                        "$ref": "#/components/schemas/ProductPrice"
                    },
                    "subscription_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subscription Id"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "product",
                    "product_price",
                    "subscription_id"
                ],
                "title": "TransactionOrder"
            },
            "TransactionOrganization": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "slug": {
                        "type": "string",
                        "title": "Slug"
                    },
                    "avatar_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Avatar Url"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "name",
                    "slug",
                    "avatar_url"
                ],
                "title": "TransactionOrganization"
            },
            "TransactionPledge": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "state": {
                        "$ref": "#/components/schemas/PledgeState"
                    },
                    "issue": {
                        "$ref": "#/components/schemas/TransactionIssue"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "state",
                    "issue"
                ],
                "title": "TransactionPledge"
            },
            "TransactionProduct": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id"
                    },
                    "organization": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TransactionOrganization"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "name",
                    "organization_id",
                    "organization"
                ],
                "title": "TransactionProduct"
            },
            "TransactionRepository": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The ID of the object."
                    },
                    "platform": {
                        "$ref": "#/components/schemas/Platforms"
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "platform",
                    "organization_id",
                    "name"
                ],
                "title": "TransactionRepository"
            },
            "TransactionSortProperty": {
                "type": "string",
                "enum": [
                    "created_at",
                    "-created_at",
                    "amount",
                    "-amount"
                ],
                "title": "TransactionSortProperty"
            },
            "TransactionType": {
                "type": "string",
                "enum": [
                    "payment",
                    "processor_fee",
                    "refund",
                    "dispute",
                    "dispute_reversal",
                    "balance",
                    "payout"
                ],
                "title": "TransactionType",
                "description": "Type of transactions."
            },
            "TransactionsBalance": {
                "properties": {
                    "currency": {
                        "type": "string",
                        "title": "Currency"
                    },
                    "amount": {
                        "type": "integer",
                        "title": "Amount"
                    },
                    "account_currency": {
                        "type": "string",
                        "title": "Account Currency"
                    },
                    "account_amount": {
                        "type": "integer",
                        "title": "Account Amount"
                    }
                },
                "type": "object",
                "required": [
                    "currency",
                    "amount",
                    "account_currency",
                    "account_amount"
                ],
                "title": "TransactionsBalance"
            },
            "TransactionsSummary": {
                "properties": {
                    "balance": {
                        "$ref": "#/components/schemas/TransactionsBalance"
                    },
                    "payout": {
                        "$ref": "#/components/schemas/TransactionsBalance"
                    }
                },
                "type": "object",
                "required": [
                    "balance",
                    "payout"
                ],
                "title": "TransactionsSummary"
            },
            "Unauthorized": {
                "properties": {
                    "error": {
                        "type": "string",
                        "enum": [
                            "Unauthorized"
                        ],
                        "const": "Unauthorized",
                        "title": "Error"
                    },
                    "detail": {
                        "type": "string",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "required": [
                    "error",
                    "detail"
                ],
                "title": "Unauthorized"
            },
            "UpdateIssue": {
                "properties": {
                    "funding_goal": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyAmount"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "upfront_split_to_contributors": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 100,
                                "minimum": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Upfront Split To Contributors"
                    },
                    "set_upfront_split_to_contributors": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Set Upfront Split To Contributors"
                    }
                },
                "type": "object",
                "title": "UpdateIssue"
            },
            "User": {
                "properties": {
                    "public_name": {
                        "type": "string",
                        "title": "Public Name"
                    },
                    "avatar_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Avatar Url"
                    }
                },
                "type": "object",
                "required": [
                    "public_name",
                    "avatar_url"
                ],
                "title": "User"
            },
            "UserBase": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "avatar_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Avatar Url"
                    },
                    "account_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Account Id"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "avatar_url",
                    "account_id"
                ],
                "title": "UserBase"
            },
            "UserInfoOrganization": {
                "properties": {
                    "sub": {
                        "type": "string",
                        "title": "Sub"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    }
                },
                "type": "object",
                "required": [
                    "sub"
                ],
                "title": "UserInfoOrganization"
            },
            "UserInfoUser": {
                "properties": {
                    "sub": {
                        "type": "string",
                        "title": "Sub"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "email": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Email"
                    },
                    "email_verified": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Email Verified"
                    }
                },
                "type": "object",
                "required": [
                    "sub"
                ],
                "title": "UserInfoUser"
            },
            "UserRead": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "avatar_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Avatar Url"
                    },
                    "account_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Account Id"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "accepted_terms_of_service": {
                        "type": "boolean",
                        "title": "Accepted Terms Of Service"
                    },
                    "oauth_accounts": {
                        "items": {
                            "$ref": "#/components/schemas/OAuthAccountRead"
                        },
                        "type": "array",
                        "title": "Oauth Accounts"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "email",
                    "avatar_url",
                    "account_id",
                    "id",
                    "accepted_terms_of_service",
                    "oauth_accounts"
                ],
                "title": "UserRead"
            },
            "UserScopes": {
                "properties": {
                    "scopes": {
                        "items": {
                            "$ref": "#/components/schemas/Scope"
                        },
                        "type": "array",
                        "title": "Scopes"
                    }
                },
                "type": "object",
                "required": [
                    "scopes"
                ],
                "title": "UserScopes"
            },
            "UserSetAccount": {
                "properties": {
                    "account_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Account Id"
                    }
                },
                "type": "object",
                "required": [
                    "account_id"
                ],
                "title": "UserSetAccount"
            },
            "UserSignupAttribution": {
                "properties": {
                    "intent": {
                        "anyOf": [
                            {
                                "type": "string",
                                "enum": [
                                    "creator",
                                    "pledge",
                                    "purchase",
                                    "subscription",
                                    "newsletter_subscription"
                                ]
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Intent"
                    },
                    "order": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Order"
                    },
                    "subscription": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subscription"
                    },
                    "pledge": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pledge"
                    },
                    "from_storefront": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "From Storefront"
                    },
                    "path": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Path"
                    },
                    "host": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Host"
                    },
                    "utm_source": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Utm Source"
                    },
                    "utm_medium": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Utm Medium"
                    },
                    "utm_campaign": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Utm Campaign"
                    }
                },
                "type": "object",
                "title": "UserSignupAttribution"
            },
            "UserStripePortalSession": {
                "properties": {
                    "url": {
                        "type": "string",
                        "title": "Url"
                    }
                },
                "type": "object",
                "required": [
                    "url"
                ],
                "title": "UserStripePortalSession"
            },
            "ValidatedLicenseKey": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Organization Id"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "User Id",
                        "deprecated": true
                    },
                    "customer_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Customer Id"
                    },
                    "user": {
                        "$ref": "#/components/schemas/LicenseKeyUser",
                        "deprecated": true
                    },
                    "customer": {
                        "$ref": "#/components/schemas/LicenseKeyCustomer"
                    },
                    "benefit_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Benefit Id",
                        "description": "The benefit ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "description",
                            "resourceName": "Benefit",
                            "resourceRoot": "/v1/benefits"
                        }
                    },
                    "key": {
                        "type": "string",
                        "title": "Key"
                    },
                    "display_key": {
                        "type": "string",
                        "title": "Display Key"
                    },
                    "status": {
                        "$ref": "#/components/schemas/LicenseKeyStatus"
                    },
                    "limit_activations": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Limit Activations"
                    },
                    "usage": {
                        "type": "integer",
                        "title": "Usage"
                    },
                    "limit_usage": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Limit Usage"
                    },
                    "validations": {
                        "type": "integer",
                        "title": "Validations"
                    },
                    "last_validated_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Validated At"
                    },
                    "expires_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Expires At"
                    },
                    "activation": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/LicenseKeyActivationBase"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "organization_id",
                    "user_id",
                    "customer_id",
                    "user",
                    "customer",
                    "benefit_id",
                    "key",
                    "display_key",
                    "status",
                    "limit_activations",
                    "usage",
                    "limit_usage",
                    "validations",
                    "last_validated_at",
                    "expires_at"
                ],
                "title": "ValidatedLicenseKey"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "WebhookBenefitCreatedPayload": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "benefit.created"
                        ],
                        "const": "benefit.created",
                        "title": "Type"
                    },
                    "data": {
                        "$ref": "#/components/schemas/Benefit",
                        "title": "Benefit"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "data"
                ],
                "title": "WebhookBenefitCreatedPayload",
                "description": "Sent when a new benefit is created.\n\n**Discord & Slack support:** Basic"
            },
            "WebhookBenefitGrantCreatedPayload": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "benefit_grant.created"
                        ],
                        "const": "benefit_grant.created",
                        "title": "Type"
                    },
                    "data": {
                        "$ref": "#/components/schemas/BenefitGrantWebhook"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "data"
                ],
                "title": "WebhookBenefitGrantCreatedPayload",
                "description": "Sent when a new benefit grant is created.\n\n**Discord & Slack support:** Basic"
            },
            "WebhookBenefitGrantRevokedPayload": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "benefit_grant.revoked"
                        ],
                        "const": "benefit_grant.revoked",
                        "title": "Type"
                    },
                    "data": {
                        "$ref": "#/components/schemas/BenefitGrantWebhook"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "data"
                ],
                "title": "WebhookBenefitGrantRevokedPayload",
                "description": "Sent when a new benefit grant is revoked.\n\n**Discord & Slack support:** Basic"
            },
            "WebhookBenefitGrantUpdatedPayload": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "benefit_grant.updated"
                        ],
                        "const": "benefit_grant.updated",
                        "title": "Type"
                    },
                    "data": {
                        "$ref": "#/components/schemas/BenefitGrantWebhook"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "data"
                ],
                "title": "WebhookBenefitGrantUpdatedPayload",
                "description": "Sent when a new benefit grant is updated.\n\n**Discord & Slack support:** Basic"
            },
            "WebhookBenefitUpdatedPayload": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "benefit.updated"
                        ],
                        "const": "benefit.updated",
                        "title": "Type"
                    },
                    "data": {
                        "$ref": "#/components/schemas/Benefit",
                        "title": "Benefit"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "data"
                ],
                "title": "WebhookBenefitUpdatedPayload",
                "description": "Sent when a benefit is updated.\n\n**Discord & Slack support:** Basic"
            },
            "WebhookCheckoutCreatedPayload": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "checkout.created"
                        ],
                        "const": "checkout.created",
                        "title": "Type"
                    },
                    "data": {
                        "$ref": "#/components/schemas/Checkout"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "data"
                ],
                "title": "WebhookCheckoutCreatedPayload",
                "description": "Sent when a new checkout is created.\n\n**Discord & Slack support:** Basic"
            },
            "WebhookCheckoutUpdatedPayload": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "checkout.updated"
                        ],
                        "const": "checkout.updated",
                        "title": "Type"
                    },
                    "data": {
                        "$ref": "#/components/schemas/Checkout"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "data"
                ],
                "title": "WebhookCheckoutUpdatedPayload",
                "description": "Sent when a checkout is updated.\n\n**Discord & Slack support:** Basic"
            },
            "WebhookDelivery": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The webhook delivery ID."
                    },
                    "http_code": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Http Code",
                        "description": "The HTTP code returned by the URL. `null` if the endpoint was unreachable."
                    },
                    "succeeded": {
                        "type": "boolean",
                        "title": "Succeeded",
                        "description": "Whether the delivery was successful."
                    },
                    "webhook_event": {
                        "$ref": "#/components/schemas/WebhookEvent",
                        "description": "The webhook event sent by this delivery."
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "succeeded",
                    "webhook_event"
                ],
                "title": "WebhookDelivery",
                "description": "A webhook delivery for a webhook event."
            },
            "WebhookEndpoint": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The webhook endpoint ID."
                    },
                    "url": {
                        "type": "string",
                        "title": "Url",
                        "description": "The URL where the webhook events will be sent.",
                        "examples": [
                            "https://webhook.site/cb791d80-f26e-4f8c-be88-6e56054192b0"
                        ]
                    },
                    "format": {
                        "$ref": "#/components/schemas/WebhookFormat",
                        "description": "The format of the webhook payload."
                    },
                    "user_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Id",
                        "description": "The user ID associated with the webhook endpoint."
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id",
                        "description": "The organization ID associated with the webhook endpoint."
                    },
                    "events": {
                        "items": {
                            "$ref": "#/components/schemas/WebhookEventType"
                        },
                        "type": "array",
                        "title": "Events",
                        "description": "The events that will trigger the webhook."
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "url",
                    "format",
                    "events"
                ],
                "title": "WebhookEndpoint",
                "description": "A webhook endpoint."
            },
            "WebhookEndpointCreate": {
                "properties": {
                    "url": {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri",
                        "title": "Url",
                        "description": "The URL where the webhook events will be sent.",
                        "examples": [
                            "https://webhook.site/cb791d80-f26e-4f8c-be88-6e56054192b0"
                        ]
                    },
                    "format": {
                        "$ref": "#/components/schemas/WebhookFormat",
                        "description": "The format of the webhook payload."
                    },
                    "secret": {
                        "type": "string",
                        "title": "Secret",
                        "description": "The secret used to sign the webhook events.",
                        "examples": [
                            "f_z6mfSpxkjogyw3FkA2aH2gYE5huxruNf34MpdWMcA"
                        ]
                    },
                    "events": {
                        "items": {
                            "$ref": "#/components/schemas/WebhookEventType"
                        },
                        "type": "array",
                        "title": "Events",
                        "description": "The events that will trigger the webhook."
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid4",
                                "description": "The organization ID.",
                                "x-polar-selector-widget": {
                                    "displayProperty": "name",
                                    "resourceName": "Organization",
                                    "resourceRoot": "/v1/organizations"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id",
                        "description": "The organization ID associated with the webhook endpoint. **Required unless you use an organization token.**"
                    }
                },
                "type": "object",
                "required": [
                    "url",
                    "format",
                    "secret",
                    "events"
                ],
                "title": "WebhookEndpointCreate",
                "description": "Schema to create a webhook endpoint."
            },
            "WebhookEndpointUpdate": {
                "properties": {
                    "url": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2083,
                                "minLength": 1,
                                "format": "uri",
                                "description": "The URL where the webhook events will be sent.",
                                "examples": [
                                    "https://webhook.site/cb791d80-f26e-4f8c-be88-6e56054192b0"
                                ]
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Url"
                    },
                    "format": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/WebhookFormat",
                                "description": "The format of the webhook payload."
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "secret": {
                        "anyOf": [
                            {
                                "type": "string",
                                "description": "The secret used to sign the webhook events.",
                                "examples": [
                                    "f_z6mfSpxkjogyw3FkA2aH2gYE5huxruNf34MpdWMcA"
                                ]
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Secret"
                    },
                    "events": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/WebhookEventType"
                                },
                                "type": "array",
                                "description": "The events that will trigger the webhook."
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Events"
                    }
                },
                "type": "object",
                "title": "WebhookEndpointUpdate",
                "description": "Schema to update a webhook endpoint."
            },
            "WebhookEvent": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp of the object."
                    },
                    "modified_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified At",
                        "description": "Last modification timestamp of the object."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "The webhook event ID."
                    },
                    "last_http_code": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Http Code",
                        "description": "Last HTTP code returned by the URL. `null` if no delviery has been attempted or if the endpoint was unreachable."
                    },
                    "succeeded": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Succeeded",
                        "description": "Whether this event was successfully delivered. `null` if no delivery has been attempted."
                    },
                    "payload": {
                        "type": "string",
                        "title": "Payload",
                        "description": "The payload of the webhook event."
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "modified_at",
                    "id",
                    "payload"
                ],
                "title": "WebhookEvent",
                "description": "A webhook event.\n\nAn event represent something that happened in the system\nthat should be sent to the webhook endpoint.\n\nIt can be delivered multiple times until it's marked as succeeded,\neach one creating a new delivery."
            },
            "WebhookEventType": {
                "type": "string",
                "enum": [
                    "checkout.created",
                    "checkout.updated",
                    "order.created",
                    "subscription.created",
                    "subscription.updated",
                    "subscription.active",
                    "subscription.canceled",
                    "subscription.revoked",
                    "product.created",
                    "product.updated",
                    "benefit.created",
                    "benefit.updated",
                    "benefit_grant.created",
                    "benefit_grant.updated",
                    "benefit_grant.revoked",
                    "organization.updated",
                    "pledge.created",
                    "pledge.updated"
                ],
                "title": "WebhookEventType"
            },
            "WebhookFormat": {
                "type": "string",
                "enum": [
                    "raw",
                    "discord",
                    "slack"
                ],
                "title": "WebhookFormat"
            },
            "WebhookOrderCreatedPayload": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "order.created"
                        ],
                        "const": "order.created",
                        "title": "Type"
                    },
                    "data": {
                        "$ref": "#/components/schemas/Order"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "data"
                ],
                "title": "WebhookOrderCreatedPayload",
                "description": "Sent when a new order is created.\n\n**Discord & Slack support:** Full"
            },
            "WebhookOrganizationUpdatedPayload": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "organization.updated"
                        ],
                        "const": "organization.updated",
                        "title": "Type"
                    },
                    "data": {
                        "$ref": "#/components/schemas/Organization"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "data"
                ],
                "title": "WebhookOrganizationUpdatedPayload",
                "description": "Sent when a organization is updated.\n\n**Discord & Slack support:** Basic"
            },
            "WebhookPledgeCreatedPayload": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "pledge.created"
                        ],
                        "const": "pledge.created",
                        "title": "Type"
                    },
                    "data": {
                        "$ref": "#/components/schemas/Pledge"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "data"
                ],
                "title": "WebhookPledgeCreatedPayload",
                "description": "Sent when a new pledge is created. Note that this does mean that the pledge has been paid yet.\n\n**Discord & Slack support:** Full"
            },
            "WebhookPledgeUpdatedPayload": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "pledge.updated"
                        ],
                        "const": "pledge.updated",
                        "title": "Type"
                    },
                    "data": {
                        "$ref": "#/components/schemas/Pledge"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "data"
                ],
                "title": "WebhookPledgeUpdatedPayload",
                "description": "Sent when a pledge is updated.\n\n**Discord & Slack support:** Basic"
            },
            "WebhookProductCreatedPayload": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "product.created"
                        ],
                        "const": "product.created",
                        "title": "Type"
                    },
                    "data": {
                        "$ref": "#/components/schemas/Product"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "data"
                ],
                "title": "WebhookProductCreatedPayload",
                "description": "Sent when a new product is created.\n\n**Discord & Slack support:** Basic"
            },
            "WebhookProductUpdatedPayload": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "product.updated"
                        ],
                        "const": "product.updated",
                        "title": "Type"
                    },
                    "data": {
                        "$ref": "#/components/schemas/Product"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "data"
                ],
                "title": "WebhookProductUpdatedPayload",
                "description": "Sent when a product is updated.\n\n**Discord & Slack support:** Basic"
            },
            "WebhookResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "title": "Success"
                    },
                    "message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Message"
                    },
                    "job_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Job Id"
                    }
                },
                "type": "object",
                "required": [
                    "success"
                ],
                "title": "WebhookResponse"
            },
            "WebhookSubscriptionActivePayload": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "subscription.active"
                        ],
                        "const": "subscription.active",
                        "title": "Type"
                    },
                    "data": {
                        "$ref": "#/components/schemas/Subscription"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "data"
                ],
                "title": "WebhookSubscriptionActivePayload",
                "description": "Sent when a subscription becomes active,\nwhether because it's a new paid subscription or because payment was recovered.\n\n**Discord & Slack support:** Full"
            },
            "WebhookSubscriptionCanceledPayload": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "subscription.canceled"
                        ],
                        "const": "subscription.canceled",
                        "title": "Type"
                    },
                    "data": {
                        "$ref": "#/components/schemas/Subscription"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "data"
                ],
                "title": "WebhookSubscriptionCanceledPayload",
                "description": "Sent when a subscription is canceled by the user.\nThey might still have access until the end of the current period.\n\n**Discord & Slack support:** Full"
            },
            "WebhookSubscriptionCreatedPayload": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "subscription.created"
                        ],
                        "const": "subscription.created",
                        "title": "Type"
                    },
                    "data": {
                        "$ref": "#/components/schemas/Subscription"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "data"
                ],
                "title": "WebhookSubscriptionCreatedPayload",
                "description": "Sent when a new subscription is created.\n\n**Discord & Slack support:** Full"
            },
            "WebhookSubscriptionRevokedPayload": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "subscription.revoked"
                        ],
                        "const": "subscription.revoked",
                        "title": "Type"
                    },
                    "data": {
                        "$ref": "#/components/schemas/Subscription"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "data"
                ],
                "title": "WebhookSubscriptionRevokedPayload",
                "description": "Sent when a subscription is revoked, the user looses access immediately.\nHappens when the subscription is canceled, or payment is past due.\n\n**Discord & Slack support:** Full"
            },
            "WebhookSubscriptionUpdatedPayload": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "subscription.updated"
                        ],
                        "const": "subscription.updated",
                        "title": "Type"
                    },
                    "data": {
                        "$ref": "#/components/schemas/Subscription"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "data"
                ],
                "title": "WebhookSubscriptionUpdatedPayload",
                "description": "Sent when a subscription is updated. This event fires for all changes to the subscription, including renewals.\n\nIf you want more specific events, you can listen to `subscription.active`, `subscription.canceled`, and `subscription.revoked`.\n\nTo listen specifically for renewals, you can listen to `order.created` events and check the `billing_reason` field.\n\n**Discord & Slack support:** On cancellation and revocation. Renewals are skipped."
            },
            "authenticate": {
                "properties": {
                    "token": {
                        "type": "string",
                        "title": "Token"
                    }
                },
                "type": "object",
                "required": [
                    "token"
                ],
                "title": "Body_magic_link:magic_link.authenticate"
            },
            "polar__enums__PaymentProcessor": {
                "type": "string",
                "enum": [
                    "stripe"
                ],
                "const": "stripe",
                "title": "PaymentProcessor"
            },
            "polar__models__transaction__PaymentProcessor": {
                "type": "string",
                "enum": [
                    "stripe",
                    "open_collective"
                ],
                "title": "PaymentProcessor",
                "description": "Supported payment processors."
            }
        },
        "securitySchemes": {
            "oidc": {
                "type": "openIdConnect",
                "openIdConnectUrl": "/.well-known/openid-configuration"
            },
            "pat": {
                "type": "http",
                "description": "You can generate a **Personal Access Token** from your [settings](https://polar.sh/settings).",
                "scheme": "bearer"
            },
            "customer_session": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "private",
            "description": "Endpoints that should appear in the schema only in development to generate our internal JS SDK."
        },
        {
            "name": "documented",
            "description": "Endpoints shown and documented in the Polar API documentation."
        },
        {
            "name": "featured",
            "description": "Endpoints featured in the Polar API documentation for their interest in common use-cases."
        },
        {
            "name": "issue_funding",
            "description": "Endpoints related to issue funding and rewards in the Polar API."
        }
    ]
}