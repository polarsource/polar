/* tslint:disable */
/* eslint-disable */
/**
 * Polar API
 * Read the docs at https://docs.polar.sh/api
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  HTTPValidationError,
  ResourceNotFound,
  Storefront,
} from '../models/index';

export interface StorefrontsApiGetRequest {
    slug: string;
}

/**
 * 
 */
export class StorefrontsApi extends runtime.BaseAPI {

    /**
     * Get an organization storefront by slug.
     * Get Organization Storefront
     */
    async getRaw(requestParameters: StorefrontsApiGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Storefront>> {
        if (requestParameters['slug'] == null) {
            throw new runtime.RequiredError(
                'slug',
                'Required parameter "slug" was null or undefined when calling get().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/storefronts/{slug}`.replace(`{${"slug"}}`, encodeURIComponent(String(requestParameters['slug']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Get an organization storefront by slug.
     * Get Organization Storefront
     */
    async get(requestParameters: StorefrontsApiGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Storefront> {
        const response = await this.getRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
