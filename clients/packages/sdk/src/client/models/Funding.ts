/* tslint:disable */
/* eslint-disable */
/**
 * Polar API
 *  Welcome to the **Polar API** for [polar.sh](https://polar.sh).  The Public API is currently a [work in progress](https://github.com/polarsource/polar/issues/834) and is in active development. ðŸš€  #### Authentication  Use a [Personal Access Token](https://polar.sh/settings) and send it in the `Authorization` header on the format `Bearer [YOUR_TOKEN]`.  #### Feedback  If you have any feedback or comments, reach out in the [Polar API-issue](https://github.com/polarsource/polar/issues/834), or reach out on the Polar Discord server.  We\'d love to see what you\'ve built with the API and to get your thoughts on how we can make the API better!  #### Connecting  The Polar API is online at `https://api.polar.sh`. 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CurrencyAmount } from './CurrencyAmount';
import {
    CurrencyAmountFromJSON,
    CurrencyAmountFromJSONTyped,
    CurrencyAmountToJSON,
} from './CurrencyAmount';

/**
 * 
 * @export
 * @interface Funding
 */
export interface Funding {
    /**
     * 
     * @type {CurrencyAmount}
     * @memberof Funding
     */
    funding_goal?: CurrencyAmount;
    /**
     * 
     * @type {CurrencyAmount}
     * @memberof Funding
     */
    pledges_sum?: CurrencyAmount;
}

/**
 * Check if a given object implements the Funding interface.
 */
export function instanceOfFunding(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FundingFromJSON(json: any): Funding {
    return FundingFromJSONTyped(json, false);
}

export function FundingFromJSONTyped(json: any, ignoreDiscriminator: boolean): Funding {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'funding_goal': !exists(json, 'funding_goal') ? undefined : CurrencyAmountFromJSON(json['funding_goal']),
        'pledges_sum': !exists(json, 'pledges_sum') ? undefined : CurrencyAmountFromJSON(json['pledges_sum']),
    };
}

export function FundingToJSON(value?: Funding | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'funding_goal': CurrencyAmountToJSON(value.funding_goal),
        'pledges_sum': CurrencyAmountToJSON(value.pledges_sum),
    };
}

