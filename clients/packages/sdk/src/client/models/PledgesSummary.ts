/* tslint:disable */
/* eslint-disable */
/**
 * Polar API
 *  Welcome to the **Polar API** for [polar.sh](https://polar.sh).  The Public API is currently a [work in progress](https://github.com/polarsource/polar/issues/834) and is in active development. ðŸš€  #### Authentication  Use a [Personal Access Token](https://polar.sh/settings) and send it in the `Authorization` header on the format `Bearer [YOUR_TOKEN]`.  #### Feedback  If you have any feedback or comments, reach out in the [Polar API-issue](https://github.com/polarsource/polar/issues/834), or reach out on the Polar Discord server.  We\'d love to see what you\'ve built with the API and to get your thoughts on how we can make the API better!  #### Connecting  The Polar API is online at `https://api.polar.sh`. 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CurrencyAmount } from './CurrencyAmount';
import {
    CurrencyAmountFromJSON,
    CurrencyAmountFromJSONTyped,
    CurrencyAmountToJSON,
} from './CurrencyAmount';
import type { Pledger } from './Pledger';
import {
    PledgerFromJSON,
    PledgerFromJSONTyped,
    PledgerToJSON,
} from './Pledger';

/**
 * 
 * @export
 * @interface PledgesSummary
 */
export interface PledgesSummary {
    /**
     * 
     * @type {CurrencyAmount}
     * @memberof PledgesSummary
     */
    total: CurrencyAmount;
    /**
     * 
     * @type {Array<Pledger>}
     * @memberof PledgesSummary
     */
    pledgers: Array<Pledger>;
}

/**
 * Check if a given object implements the PledgesSummary interface.
 */
export function instanceOfPledgesSummary(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "total" in value;
    isInstance = isInstance && "pledgers" in value;

    return isInstance;
}

export function PledgesSummaryFromJSON(json: any): PledgesSummary {
    return PledgesSummaryFromJSONTyped(json, false);
}

export function PledgesSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): PledgesSummary {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'total': CurrencyAmountFromJSON(json['total']),
        'pledgers': ((json['pledgers'] as Array<any>).map(PledgerFromJSON)),
    };
}

export function PledgesSummaryToJSON(value?: PledgesSummary | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'total': CurrencyAmountToJSON(value.total),
        'pledgers': ((value.pledgers as Array<any>).map(PledgerToJSON)),
    };
}

