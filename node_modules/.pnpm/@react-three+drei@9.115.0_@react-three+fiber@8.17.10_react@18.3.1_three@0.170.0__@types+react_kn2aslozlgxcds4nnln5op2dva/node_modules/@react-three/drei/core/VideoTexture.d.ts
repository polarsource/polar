import * as React from 'react';
import * as THREE from 'three';
import { type default as Hls } from 'hls.js';
declare function getHls(...args: ConstructorParameters<typeof Hls>): Promise<Hls | null>;
export declare function useVideoTexture(srcOrSrcObject: HTMLVideoElement['src' | 'srcObject'], { unsuspend, start, hls: hlsConfig, crossOrigin, muted, loop, playsInline, ...videoProps }?: {
    unsuspend?: keyof HTMLVideoElementEventMap;
    start?: boolean;
    hls?: Parameters<typeof getHls>[0];
} & Partial<Omit<HTMLVideoElement, 'children' | 'src' | 'srcObject'>>): THREE.VideoTexture;
type UseVideoTexture = Parameters<typeof useVideoTexture>;
export declare const VideoTexture: ({ children, src, ...config }: {
    children?: (texture: ReturnType<typeof useVideoTexture>) => React.ReactNode;
    src: UseVideoTexture[0];
} & UseVideoTexture[1]) => React.JSX.Element;
export {};
