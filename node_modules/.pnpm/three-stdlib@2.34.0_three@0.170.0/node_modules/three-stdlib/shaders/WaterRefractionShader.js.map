{"version":3,"file":"WaterRefractionShader.js","sources":["../../src/shaders/WaterRefractionShader.ts"],"sourcesContent":["export const WaterRefractionShader = {\n  uniforms: {\n    color: {\n      value: null,\n    },\n\n    time: {\n      value: 0,\n    },\n\n    tDiffuse: {\n      value: null,\n    },\n\n    tDudv: {\n      value: null,\n    },\n\n    textureMatrix: {\n      value: null,\n    },\n  },\n\n  vertexShader: [\n    'uniform mat4 textureMatrix;',\n\n    'varying vec2 vUv;',\n    'varying vec4 vUvRefraction;',\n\n    'void main() {',\n\n    '\tvUv = uv;',\n\n    '\tvUvRefraction = textureMatrix * vec4( position, 1.0 );',\n\n    '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n    '}',\n  ].join('\\n'),\n\n  fragmentShader: [\n    'uniform vec3 color;',\n    'uniform float time;',\n    'uniform sampler2D tDiffuse;',\n    'uniform sampler2D tDudv;',\n\n    'varying vec2 vUv;',\n    'varying vec4 vUvRefraction;',\n\n    'float blendOverlay( float base, float blend ) {',\n\n    '\treturn( base < 0.5 ? ( 2.0 * base * blend ) : ( 1.0 - 2.0 * ( 1.0 - base ) * ( 1.0 - blend ) ) );',\n\n    '}',\n\n    'vec3 blendOverlay( vec3 base, vec3 blend ) {',\n\n    '\treturn vec3( blendOverlay( base.r, blend.r ), blendOverlay( base.g, blend.g ),blendOverlay( base.b, blend.b ) );',\n\n    '}',\n\n    'void main() {',\n\n    ' float waveStrength = 0.1;',\n    ' float waveSpeed = 0.03;',\n\n    // simple distortion (ripple) via dudv map (see https://www.youtube.com/watch?v=6B7IF6GOu7s)\n\n    '\tvec2 distortedUv = texture2D( tDudv, vec2( vUv.x + time * waveSpeed, vUv.y ) ).rg * waveStrength;',\n    '\tdistortedUv = vUv.xy + vec2( distortedUv.x, distortedUv.y + time * waveSpeed );',\n    '\tvec2 distortion = ( texture2D( tDudv, distortedUv ).rg * 2.0 - 1.0 ) * waveStrength;',\n\n    // new uv coords\n\n    ' vec4 uv = vec4( vUvRefraction );',\n    ' uv.xy += distortion;',\n\n    '\tvec4 base = texture2DProj( tDiffuse, uv );',\n\n    '\tgl_FragColor = vec4( blendOverlay( base.rgb, color ), 1.0 );',\n\n    '}',\n  ].join('\\n'),\n}\n"],"names":[],"mappings":"AAAO,MAAM,wBAAwB;AAAA,EACnC,UAAU;AAAA,IACR,OAAO;AAAA,MACL,OAAO;AAAA,IACT;AAAA,IAEA,MAAM;AAAA,MACJ,OAAO;AAAA,IACT;AAAA,IAEA,UAAU;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IAEA,OAAO;AAAA,MACL,OAAO;AAAA,IACT;AAAA,IAEA,eAAe;AAAA,MACb,OAAO;AAAA,IACT;AAAA,EACF;AAAA,EAEA,cAAc;AAAA,IACZ;AAAA,IAEA;AAAA,IACA;AAAA,IAEA;AAAA,IAEA;AAAA,IAEA;AAAA,IAEA;AAAA,IAEA;AAAA,EAAA,EACA,KAAK,IAAI;AAAA,EAEX,gBAAgB;AAAA,IACd;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IAEA;AAAA,IACA;AAAA,IAEA;AAAA,IAEA;AAAA,IAEA;AAAA,IAEA;AAAA,IAEA;AAAA,IAEA;AAAA,IAEA;AAAA,IAEA;AAAA,IACA;AAAA;AAAA,IAIA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAIA;AAAA,IACA;AAAA,IAEA;AAAA,IAEA;AAAA,IAEA;AAAA,EAAA,EACA,KAAK,IAAI;AACb;"}