services:
  # Frontend
  - type: web
    name: web
    env: node
    buildCommand: pnpm install; pnpm build
    startCommand: pnpm start -p 10000
    branch: main
    rootDir: clients/apps/web
    numInstances: 1
    healthCheckPath: /
    region: ohio
    plan: standard
    envVars:
      - key: NEXT_PUBLIC_API_URL
        value: "https://api.polar.sh"
      - key: NEXT_PUBLIC_GITHUB_INSTALLATION_URL
        value: "https://github.com/apps/polar-sh/installations/new"
      - key: NEXT_PUBLIC_SENTRY_ENABLED
        value: "true"

      # Workaround for https://community.render.com/t/how-to-debug-issues-with-deploy-time-health-check/12300
      # and https://github.com/vercel/next.js/issues/49677
      - key: PORT
        value: "10000"
      - fromGroup: web-stripe
      - fromGroup: web-posthog

    domains:
      - dashboard.polar.sh

  # FastAPI Backend
  - type: web
    name: server
    env: docker
    dockerfilePath: ./Dockerfile
    dockerContext: ./
    dockerCommand: "./hack/production_run_server.sh"
    region: ohio
    plan: standard
    branch: main
    rootDir: server
    numInstances: 1
    healthCheckPath: /readyz
    domains:
      - api.polar.sh
    envVars:
      # CORS
      - key: POLAR_CORS_ORIGINS
        value: '["https://dashboard.polar.sh", "https://github.com"]'
      
      # GitHub
      - key: POLAR_GITHUB_REDIRECT_URL
        value: "https://dashboard.polar.sh/github/session"

      # PostgreSQL
      - key: POLAR_POSTGRES_USER
        fromDatabase:
          name: polar
          property: user
      - key: POLAR_POSTGRES_PWD
        fromDatabase:
          name: polar
          property: password
      - key: POLAR_POSTGRES_DATABASE
        fromDatabase:
          name: polar
          property: database
      - key: POLAR_POSTGRES_PORT
        fromDatabase:
          name: polar
          property: port
      - key: POLAR_POSTGRES_HOST
        fromDatabase:
          name: polar
          property: host

      # Redis
      - key: POLAR_REDIS_HOST
        fromService:
          type: redis
          name: polar-tasks
          property: host
      - key: POLAR_REDIS_PORT
        fromService:
          type: redis
          name: polar-tasks
          property: port

      - fromGroup: github-production
      - fromGroup: server-common
      - fromGroup: server-stripe



  # Worker
  - type: worker
    name: worker
    env: docker
    dockerfilePath: ./Dockerfile
    dockerContext: ./
    dockerCommand: "poetry run arq run_worker.WorkerSettings"
    region: ohio
    plan: standard
    branch: main
    rootDir: server
    numInstances: 1
    envVars:
      # PostgreSQL
      - key: POLAR_POSTGRES_USER
        fromDatabase:
          name: polar
          property: user
      - key: POLAR_POSTGRES_PWD
        fromDatabase:
          name: polar
          property: password
      - key: POLAR_POSTGRES_DATABASE
        fromDatabase:
          name: polar
          property: database
      - key: POLAR_POSTGRES_PORT
        fromDatabase:
          name: polar
          property: port
      - key: POLAR_POSTGRES_HOST
        fromDatabase:
          name: polar
          property: host

      # Redis
      - key: POLAR_REDIS_HOST
        fromService:
          type: redis
          name: polar-tasks
          property: host
      - key: POLAR_REDIS_PORT
        fromService:
          type: redis
          name: polar-tasks
          property: port

      - fromGroup: github-production
      - fromGroup: server-common
      - fromGroup: server-stripe

  # Worker
  - type: worker
    name: worker-image
    env: image
    image:
      url: ghcr.io/polarsource/polar:latest
      creds:
        fromRegistryCreds:
          name: polarsource
    dockerCommand: "poetry run arq run_worker.WorkerSettings"
    region: ohio
    plan: standard
    branch: main
    rootDir: server
    numInstances: 1
    envVars:
      # PostgreSQL
      - key: POLAR_POSTGRES_USER
        fromDatabase:
          name: polar
          property: user
      - key: POLAR_POSTGRES_PWD
        fromDatabase:
          name: polar
          property: password
      - key: POLAR_POSTGRES_DATABASE
        fromDatabase:
          name: polar
          property: database
      - key: POLAR_POSTGRES_PORT
        fromDatabase:
          name: polar
          property: port
      - key: POLAR_POSTGRES_HOST
        fromDatabase:
          name: polar
          property: host

      # Redis
      - key: POLAR_REDIS_HOST
        fromService:
          type: redis
          name: polar-tasks
          property: host
      - key: POLAR_REDIS_PORT
        fromService:
          type: redis
          name: polar-tasks
          property: port

      - fromGroup: github-production
      - fromGroup: server-common
      - fromGroup: server-stripe

  - type: redis
    name: polar-tasks
    ipAllowList: [] # allow only internal connections
    plan: starter
    maxmemoryPolicy: noeviction # no-eviciton for our queue

databases:
  - name: polar
    databaseName: polar
    user: polar
    ipAllowList: [] # allow only internal connections
    plan: standard


envVarGroups:
- name: github-production
  envVars:
    - key: POLAR_GITHUB_APP_IDENTIFIER
      sync: false
    - key: POLAR_GITHUB_APP_PRIVATE_KEY
      sync: false
    - key: POLAR_GITHUB_APP_WEBHOOK_SECRET
      sync: false
    - key: POLAR_GITHUB_CLIENT_ID
      sync: false
    - key: POLAR_GITHUB_CLIENT_SECRET
      sync: false

- name: server-common
  envVars:
  - key: POLAR_GITHUB_BADGE_EMBED
    value: 1
  - key: POLAR_ENV
    value: production
  - key: POLAR_LOG_LEVEL
    value: INFO
  - key: POLAR_TESTING
    value: 0
  - key: POLAR_DEBUG
    value: 0
  - key: POLAR_FRONTEND_BASE_URL
    value: "https://dashboard.polar.sh"
  - key: POLAR_SENTRY_DSN
    sync: false
  - key: POLAR_EMAIL_SENDER
    value: "sendgrid"
  - key: POLAR_SENDGRID_API_KEY
    sync: false
  - key: POLAR_BASE_URL
    value: "https://api.polar.sh/api/v1"
  - key: POLAR_DISCORD_WEBHOOK_URL
    sync: false
  - key: POLAR_POSTHOG_PROJECT_API_KEY
    sync: false

- name: server-stripe
  envVars:
  - key: POLAR_STRIPE_SECRET_KEY
    sync: false
  - key: POLAR_STRIPE_WEBHOOK_SECRET
    sync: false

- name: web-stripe
  envVars:
  - key: NEXT_PUBLIC_STRIPE_KEY
    sync: false

- name: web-posthog
  envVars:
  - key: NEXT_PUBLIC_POSTHOG_TOKEN
    sync: false
