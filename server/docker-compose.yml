version: "3.8"

services:
  redis:
    image: redis
    ports:
      - "${POLAR_REDIS_PORT}:${POLAR_REDIS_PORT}"

  db:
    image: postgres:15.1-bullseye
    environment:
      - POSTGRES_USER=${POLAR_POSTGRES_USER}
      - POSTGRES_PASSWORD=${POLAR_POSTGRES_PWD}
      - POSTGRES_DB=${POLAR_POSTGRES_DATABASE}
      - POSTGRES_PORT=${POLAR_POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "${POLAR_POSTGRES_PORT}:${POLAR_POSTGRES_PORT}"
    expose:
      - ${POLAR_POSTGRES_PORT}
    restart: always
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-q",
          "-d",
          "${POLAR_POSTGRES_DATABASE}",
          "-U",
          "${POLAR_POSTGRES_USER}",
        ]
      timeout: 40s
      interval: 2s
      retries: 20

  ingress:
    image: caddy:2.7
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    ports:
      - "6380:6380"

  minio:
    image: docker.io/bitnami/minio:2024.5.28
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - "minio_data:/minio"
    environment:
      - MINIO_ROOT_USER=${POLAR_MINIO_USER}
      - MINIO_ROOT_PASSWORD=${POLAR_MINIO_PWD}

  minio-setup:
    image: docker.io/bitnami/minio-client:2024.5.24
    depends_on:
      - minio
    volumes:
      - ./.minio:/tmp/config
    environment:
      - MINIO_HOST=minio
      - MINIO_ROOT_USER=${POLAR_MINIO_USER}
      - MINIO_ROOT_PASSWORD=${POLAR_MINIO_PWD}
      - BUCKET_NAME=${POLAR_S3_FILES_BUCKET_NAME}
      - BUCKET_TESTING_NAME=testing-${POLAR_S3_FILES_BUCKET_NAME}
      - ACCESS_KEY=${POLAR_AWS_ACCESS_KEY_ID}
      - SECRET_ACCESS_KEY=${POLAR_AWS_SECRET_ACCESS_KEY}
    entrypoint: [
      "bash",
      "-c",
      "chmod +x /tmp/config/configure.sh && /tmp/config/configure.sh"
    ]


volumes:
  postgres_data:
  minio_data:
    driver: local
