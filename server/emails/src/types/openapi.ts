/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** CustomerSessionCodeEmail */
        CustomerSessionCodeEmail: {
            /**
             * Template
             * @default customer_session_code
             * @constant
             */
            template: "customer_session_code";
            props: components["schemas"]["CustomerSessionCodeProps"];
        };
        /** CustomerSessionCodeProps */
        CustomerSessionCodeProps: {
            organization: components["schemas"]["Organization"];
            /** Code */
            code: string;
            /** Code Lifetime Minutes */
            code_lifetime_minutes: number;
            /** Url */
            url: string;
        };
        /** LoginCodeEmail */
        LoginCodeEmail: {
            /**
             * Template
             * @default login_code
             * @constant
             */
            template: "login_code";
            props: components["schemas"]["LoginCodeProps"];
        };
        /** LoginCodeProps */
        LoginCodeProps: {
            /** Code */
            code: string;
            /** Code Lifetime Minutes */
            code_lifetime_minutes: number;
        };
        /** Organization */
        Organization: {
            /**
             * Created At
             * Format: date-time
             * @description Creation timestamp of the object.
             */
            created_at: string;
            /**
             * Modified At
             * @description Last modification timestamp of the object.
             */
            modified_at: string | null;
            /**
             * Id
             * Format: uuid4
             * @description The organization ID.
             * @example 1dbfc517-0bbf-4301-9ba8-555ca42b9737
             */
            id: string;
            /**
             * Name
             * @description Organization name shown in checkout, customer portal, emails etc.
             */
            name: string;
            /**
             * Slug
             * @description Unique organization slug in checkout, customer portal and credit card statements.
             */
            slug: string;
            /**
             * Avatar Url
             * @description Avatar URL shown in checkout, customer portal, emails etc.
             */
            avatar_url: string | null;
            /**
             * Email
             * @description Public support email.
             */
            email: string | null;
            /**
             * Website
             * @description Official website of the organization.
             */
            website: string | null;
            /**
             * Socials
             * @description Links to social profiles.
             */
            socials: components["schemas"]["OrganizationSocialLink"][];
            /** @description Current organization status */
            status: components["schemas"]["Status"];
            /**
             * Details Submitted At
             * @description When the business details were submitted.
             */
            details_submitted_at: string | null;
            /** @description Organization feature settings */
            feature_settings: components["schemas"]["OrganizationFeatureSettings"] | null;
            /** @description Settings related to subscriptions management */
            subscription_settings: components["schemas"]["OrganizationSubscriptionSettings"];
            /** @description Settings related to notifications */
            notification_settings: components["schemas"]["OrganizationNotificationSettings"];
            /** @description Settings related to customer emails */
            customer_email_settings: components["schemas"]["OrganizationCustomerEmailSettings"];
        };
        /** OrganizationCustomerEmailSettings */
        OrganizationCustomerEmailSettings: {
            /** Order Confirmation */
            order_confirmation: boolean;
            /** Subscription Cancellation */
            subscription_cancellation: boolean;
            /** Subscription Confirmation */
            subscription_confirmation: boolean;
            /** Subscription Cycled */
            subscription_cycled: boolean;
            /** Subscription Past Due */
            subscription_past_due: boolean;
            /** Subscription Revoked */
            subscription_revoked: boolean;
            /** Subscription Uncanceled */
            subscription_uncanceled: boolean;
            /** Subscription Updated */
            subscription_updated: boolean;
        };
        /** OrganizationFeatureSettings */
        OrganizationFeatureSettings: {
            /**
             * Issue Funding Enabled
             * @description If this organization has issue funding enabled
             * @default false
             */
            issue_funding_enabled: boolean;
            /**
             * Seat Based Pricing Enabled
             * @description If this organization has seat-based pricing enabled
             * @default false
             */
            seat_based_pricing_enabled: boolean;
        };
        /** OrganizationNotificationSettings */
        OrganizationNotificationSettings: {
            /** New Order */
            new_order: boolean;
            /** New Subscription */
            new_subscription: boolean;
        };
        /** OrganizationSocialLink */
        OrganizationSocialLink: {
            /** @description The social platform of the URL */
            platform: components["schemas"]["OrganizationSocialPlatforms"];
            /**
             * Url
             * Format: uri
             * @description The URL to the organization profile
             */
            url: string;
        };
        /**
         * OrganizationSocialPlatforms
         * @enum {string}
         */
        OrganizationSocialPlatforms: "x" | "github" | "facebook" | "instagram" | "youtube" | "tiktok" | "linkedin" | "other";
        /** OrganizationSubscriptionSettings */
        OrganizationSubscriptionSettings: {
            /** Allow Multiple Subscriptions */
            allow_multiple_subscriptions: boolean;
            /** Allow Customer Updates */
            allow_customer_updates: boolean;
            proration_behavior: components["schemas"]["SubscriptionProrationBehavior"];
        };
        /**
         * Status
         * @enum {string}
         */
        Status: "created" | "onboarding_started" | "under_review" | "denied" | "active";
        /**
         * SubscriptionProrationBehavior
         * @enum {string}
         */
        SubscriptionProrationBehavior: "invoice" | "prorate";
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
