"""create rewards

Revision ID: 489ecfd46540
Revises: 8fb1fcc039a1
Create Date: 2023-03-01 11:23:38.587852

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# Polar Custom Imports
from polar.kit.extensions.sqlalchemy import GUID

# revision identifiers, used by Alembic.
revision = "489ecfd46540"
down_revision = "8fb1fcc039a1"
branch_labels: tuple[str] | None = None
depends_on: tuple[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "rewards",
        sa.Column("issue_id", GUID(), nullable=False),
        sa.Column("repository_id", GUID(), nullable=False),
        sa.Column("organization_id", GUID(), nullable=False),
        sa.Column("amount", sa.Numeric(precision=25, scale=10), nullable=False),
        sa.Column("id", GUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.alter_column(
        "accounts", "organization_id", existing_type=sa.UUID(), nullable=False
    )
    op.alter_column("accounts", "user_id", existing_type=sa.UUID(), nullable=False)
    op.alter_column(
        "accounts", "email", existing_type=sa.VARCHAR(length=254), nullable=False
    )
    op.drop_index("oauth_accounts_account_idx", table_name="oauth_accounts")
    op.drop_index("oauth_accounts_oauth_namex", table_name="oauth_accounts")
    op.create_index(
        op.f("ix_oauth_accounts_account_id"),
        "oauth_accounts",
        ["account_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_oauth_accounts_oauth_name"),
        "oauth_accounts",
        ["oauth_name"],
        unique=False,
    )
    op.drop_constraint(
        "oauth_accounts_user_id_fkey", "oauth_accounts", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "oauth_accounts", "users", ["user_id"], ["id"], ondelete="cascade"
    )
    op.alter_column(
        "repositories",
        "topics",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "repositories",
        "topics",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        nullable=True,
    )
    op.drop_constraint(None, "oauth_accounts", type_="foreignkey")  # type: ignore
    op.create_foreign_key(
        "oauth_accounts_user_id_fkey", "oauth_accounts", "users", ["user_id"], ["id"]
    )
    op.drop_index(op.f("ix_oauth_accounts_oauth_name"), table_name="oauth_accounts")
    op.drop_index(op.f("ix_oauth_accounts_account_id"), table_name="oauth_accounts")
    op.create_index(
        "oauth_accounts_oauth_namex", "oauth_accounts", ["oauth_name"], unique=False
    )
    op.create_index(
        "oauth_accounts_account_idx", "oauth_accounts", ["account_id"], unique=False
    )
    op.alter_column(
        "accounts", "email", existing_type=sa.VARCHAR(length=254), nullable=True
    )
    op.alter_column("accounts", "user_id", existing_type=sa.UUID(), nullable=True)
    op.alter_column(
        "accounts", "organization_id", existing_type=sa.UUID(), nullable=True
    )
    op.drop_table("rewards")
    # ### end Alembic commands ###
