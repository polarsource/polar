"""user_organization_settings

Revision ID: e652369d0a02
Revises: b7bb01cdf901
Create Date: 2023-04-11 09:58:04.186152

"""
import sqlalchemy as sa
from alembic import op

# Polar Custom Imports

# revision identifiers, used by Alembic.
revision = "e652369d0a02"
down_revision = "b7bb01cdf901"
branch_labels: tuple[str] | None = None
depends_on: tuple[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_organization_settings",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column(
            "email_notification_maintainer_issue_receives_backing",
            sa.Boolean(),
            nullable=False,
        ),
        sa.Column(
            "email_notification_maintainer_issue_branch_created",
            sa.Boolean(),
            nullable=False,
        ),
        sa.Column(
            "email_notification_maintainer_pull_request_created",
            sa.Boolean(),
            nullable=False,
        ),
        sa.Column(
            "email_notification_maintainer_pull_request_merged",
            sa.Boolean(),
            nullable=False,
        ),
        sa.Column(
            "email_notification_backed_issue_branch_created",
            sa.Boolean(),
            nullable=False,
        ),
        sa.Column(
            "email_notification_backed_issue_pull_request_created",
            sa.Boolean(),
            nullable=False,
        ),
        sa.Column(
            "email_notification_backed_issue_pull_request_merged",
            sa.Boolean(),
            nullable=False,
        ),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name=op.f("user_organization_settings_organization_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("user_organization_settings_user_id_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "user_id", "organization_id", name=op.f("user_organization_settings_pkey")
        ),
    )
    op.drop_column(
        "organizations", "email_notification_backed_issue_pull_request_created"
    )
    op.drop_column("organizations", "email_notification_backed_issue_branch_created")
    op.drop_column("organizations", "email_notification_issue_receives_backing")
    op.drop_column(
        "organizations", "email_notification_backed_issue_pull_request_merged"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "organizations",
        sa.Column(
            "email_notification_backed_issue_pull_request_merged",
            sa.BOOLEAN(),
            server_default=sa.text("false"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "organizations",
        sa.Column(
            "email_notification_issue_receives_backing",
            sa.BOOLEAN(),
            server_default=sa.text("false"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "organizations",
        sa.Column(
            "email_notification_backed_issue_branch_created",
            sa.BOOLEAN(),
            server_default=sa.text("false"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "organizations",
        sa.Column(
            "email_notification_backed_issue_pull_request_created",
            sa.BOOLEAN(),
            server_default=sa.text("false"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_table("user_organization_settings")
    # ### end Alembic commands ###
