"""accounts.user_id

Revision ID: 9371405af6fd
Revises: 1bd979055f40
Create Date: 2023-08-17 10:01:54.158097

"""

import sqlalchemy as sa
from alembic import op

# Polar Custom Imports
from polar.kit.extensions.sqlalchemy import PostgresUUID

# revision identifiers, used by Alembic.
revision = "9371405af6fd"
down_revision = "1bd979055f40"
branch_labels: tuple[str] | None = None
depends_on: tuple[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("accounts", sa.Column("user_id", sa.UUID(), nullable=True))
    op.alter_column(
        "accounts", "organization_id", existing_type=sa.UUID(), nullable=True
    )
    op.drop_constraint("accounts_stripe_id_key", "accounts", type_="unique")
    op.create_unique_constraint(op.f("accounts_user_id_key"), "accounts", ["user_id"])
    op.create_foreign_key(
        op.f("accounts_user_id_fkey"), "accounts", "users", ["user_id"], ["id"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("accounts_user_id_fkey"), "accounts", type_="foreignkey")
    op.drop_constraint(op.f("accounts_user_id_key"), "accounts", type_="unique")
    op.create_unique_constraint("accounts_stripe_id_key", "accounts", ["stripe_id"])
    op.alter_column(
        "accounts", "organization_id", existing_type=sa.UUID(), nullable=False
    )
    op.drop_column("accounts", "user_id")
    # ### end Alembic commands ###
