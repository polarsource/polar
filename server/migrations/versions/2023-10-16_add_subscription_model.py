"""Add Subscription model

Revision ID: 69a80ecda1df
Revises: e446b68108e6
Create Date: 2023-10-16 15:40:27.173572

"""
import sqlalchemy as sa
from alembic import op

# Polar Custom Imports
from polar.kit.extensions.sqlalchemy import PostgresUUID

# revision identifiers, used by Alembic.
revision = "69a80ecda1df"
down_revision = "e446b68108e6"
branch_labels: tuple[str] | None = None
depends_on: tuple[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "subscription",
        sa.Column("stripe_subscription_id", sa.String(), nullable=False),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("current_period_start", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("current_period_end", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("cancel_at_period_end", sa.Boolean(), nullable=False),
        sa.Column("ended_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("price_currency", sa.String(length=3), nullable=False),
        sa.Column("price_amount", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("subscription_tier_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["subscription_tier_id"],
            ["subscription_tiers.id"],
            name=op.f("subscription_subscription_tier_id_fkey"),
            ondelete="cascade",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("subscription_user_id_fkey"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("subscription_pkey")),
    )
    op.create_index(
        op.f("ix_subscription_stripe_subscription_id"),
        "subscription",
        ["stripe_subscription_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_subscription_subscription_tier_id"),
        "subscription",
        ["subscription_tier_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_subscription_user_id"), "subscription", ["user_id"], unique=False
    )
    op.create_index(
        op.f("ix_subscription_tiers_stripe_product_id"),
        "subscription_tiers",
        ["stripe_product_id"],
        unique=False,
    )
    op.create_unique_constraint(
        op.f("users_stripe_customer_id_key"), "users", ["stripe_customer_id"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("users_stripe_customer_id_key"), "users", type_="unique")
    op.drop_index(
        op.f("ix_subscription_tiers_stripe_product_id"), table_name="subscription_tiers"
    )
    op.drop_index(op.f("ix_subscription_user_id"), table_name="subscription")
    op.drop_index(
        op.f("ix_subscription_subscription_tier_id"), table_name="subscription"
    )
    op.drop_index(
        op.f("ix_subscription_stripe_subscription_id"), table_name="subscription"
    )
    op.drop_table("subscription")
    # ### end Alembic commands ###
