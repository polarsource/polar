"""Add subscription benefits models

Revision ID: 8f8b4ff1caea
Revises: 352d39e50178
Create Date: 2023-10-25 11:19:28.856933

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# Polar Custom Imports
from polar.kit.extensions.sqlalchemy import PostgresUUID

# revision identifiers, used by Alembic.
revision = "8f8b4ff1caea"
down_revision = "352d39e50178"
branch_labels: tuple[str] | None = None
depends_on: tuple[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "subscription_benefits",
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("is_tax_applicable", sa.Boolean(), nullable=False),
        sa.Column(
            "properties", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column("organization_id", sa.UUID(), nullable=True),
        sa.Column("repository_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name=op.f("subscription_benefits_organization_id_fkey"),
            ondelete="cascade",
        ),
        sa.ForeignKeyConstraint(
            ["repository_id"],
            ["repositories.id"],
            name=op.f("subscription_benefits_repository_id_fkey"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("subscription_benefits_pkey")),
    )
    op.create_index(
        op.f("ix_subscription_benefits_type"),
        "subscription_benefits",
        ["type"],
        unique=False,
    )
    op.create_table(
        "subscription_tier_benefits",
        sa.Column("subscription_tier_id", sa.UUID(), nullable=False),
        sa.Column("subscription_benefit_id", sa.UUID(), nullable=False),
        sa.Column("order", sa.Integer(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["subscription_benefit_id"],
            ["subscription_benefits.id"],
            name=op.f("subscription_tier_benefits_subscription_benefit_id_fkey"),
            ondelete="cascade",
        ),
        sa.ForeignKeyConstraint(
            ["subscription_tier_id"],
            ["subscription_tiers.id"],
            name=op.f("subscription_tier_benefits_subscription_tier_id_fkey"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint(
            "subscription_tier_id",
            "subscription_benefit_id",
            "id",
            name=op.f("subscription_tier_benefits_pkey"),
        ),
        sa.UniqueConstraint(
            "subscription_tier_id",
            "order",
            name=op.f("subscription_tier_benefits_subscription_tier_id_order_key"),
        ),
    )
    op.create_index(
        op.f("ix_subscription_tier_benefits_order"),
        "subscription_tier_benefits",
        ["order"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_subscription_tier_benefits_order"),
        table_name="subscription_tier_benefits",
    )
    op.drop_table("subscription_tier_benefits")
    op.drop_index(
        op.f("ix_subscription_benefits_type"), table_name="subscription_benefits"
    )
    op.drop_table("subscription_benefits")
    # ### end Alembic commands ###
