"""Add HeldTransfer model

Revision ID: 28aa8bed1eeb
Revises: e82ceb168ce8
Create Date: 2024-01-08 13:25:53.567596

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# Polar Custom Imports
from polar.kit.extensions.sqlalchemy import PostgresUUID

# revision identifiers, used by Alembic.
revision = "28aa8bed1eeb"
down_revision = "e82ceb168ce8"
branch_labels: tuple[str] | None = None
depends_on: tuple[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "held_transfers",
        sa.Column("account_id", sa.UUID(), nullable=False),
        sa.Column("payment_transaction_id", sa.UUID(), nullable=False),
        sa.Column("amount", sa.Integer(), nullable=False),
        sa.Column("pledge_id", sa.UUID(), nullable=True),
        sa.Column("subscription_id", sa.UUID(), nullable=True),
        sa.Column("issue_reward_id", sa.UUID(), nullable=True),
        sa.Column("properties", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["accounts.id"],
            name=op.f("held_transfers_account_id_fkey"),
            ondelete="cascade",
        ),
        sa.ForeignKeyConstraint(
            ["issue_reward_id"],
            ["issue_rewards.id"],
            name=op.f("held_transfers_issue_reward_id_fkey"),
            ondelete="set null",
        ),
        sa.ForeignKeyConstraint(
            ["payment_transaction_id"],
            ["transactions.id"],
            name=op.f("held_transfers_payment_transaction_id_fkey"),
            ondelete="cascade",
        ),
        sa.ForeignKeyConstraint(
            ["pledge_id"],
            ["pledges.id"],
            name=op.f("held_transfers_pledge_id_fkey"),
            ondelete="set null",
        ),
        sa.ForeignKeyConstraint(
            ["subscription_id"],
            ["subscriptions.id"],
            name=op.f("held_transfers_subscription_id_fkey"),
            ondelete="set null",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("held_transfers_pkey")),
    )
    op.create_index(
        op.f("ix_held_transfers_account_id"),
        "held_transfers",
        ["account_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_held_transfers_issue_reward_id"),
        "held_transfers",
        ["issue_reward_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_held_transfers_payment_transaction_id"),
        "held_transfers",
        ["payment_transaction_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_held_transfers_pledge_id"),
        "held_transfers",
        ["pledge_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_held_transfers_subscription_id"),
        "held_transfers",
        ["subscription_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_held_transfers_subscription_id"), table_name="held_transfers"
    )
    op.drop_index(op.f("ix_held_transfers_pledge_id"), table_name="held_transfers")
    op.drop_index(
        op.f("ix_held_transfers_payment_transaction_id"), table_name="held_transfers"
    )
    op.drop_index(
        op.f("ix_held_transfers_issue_reward_id"), table_name="held_transfers"
    )
    op.drop_index(op.f("ix_held_transfers_account_id"), table_name="held_transfers")
    op.drop_table("held_transfers")
    # ### end Alembic commands ###
