"""Add fees support to Transaction model

Revision ID: 983162e3a21e
Revises: c569718ba695
Create Date: 2024-02-20 16:41:30.680712

"""
import sqlalchemy as sa
from alembic import op

# Polar Custom Imports
from polar.kit.extensions.sqlalchemy import PostgresUUID

# revision identifiers, used by Alembic.
revision = "983162e3a21e"
down_revision = "c569718ba695"
branch_labels: tuple[str] | None = None
depends_on: tuple[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "transactions", sa.Column("processor_fee_type", sa.String(), nullable=True)
    )
    op.add_column(
        "transactions",
        sa.Column("fee_balance_transaction_id", sa.String(), nullable=True),
    )
    op.add_column(
        "transactions",
        sa.Column("incurred_by_transaction_id", sa.UUID(), nullable=True),
    )
    op.create_index(
        op.f("ix_transactions_fee_balance_transaction_id"),
        "transactions",
        ["fee_balance_transaction_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transactions_processor_fee_type"),
        "transactions",
        ["processor_fee_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transactions_incurred_by_transaction_id"),
        "transactions",
        ["incurred_by_transaction_id"],
        unique=False,
    )
    op.create_foreign_key(
        op.f("transactions_incurred_by_transaction_id_fkey"),
        "transactions",
        "transactions",
        ["incurred_by_transaction_id"],
        ["id"],
        ondelete="set null",
    )

    # Create fee transactions before dropping the processor_fee_amount column
    op.execute(
        """
        INSERT INTO transactions (
            id,
            created_at,
            type,
            processor,
            currency,
            amount,
            account_currency,
            account_amount,
            tax_amount,
            processor_fee_type,
            incurred_by_transaction_id,
            processor_fee_amount
        )
        SELECT
            uuid_generate_v4(),
            t.created_at,
            'processor_fee',
            t.processor,
            t.currency,
            -t.processor_fee_amount,
            t.currency,
            -t.processor_fee_amount,
            0,
            CASE
                WHEN t.type = 'payment' THEN 'payment'
                WHEN t.type = 'dispute' THEN 'dispute'
                ELSE NULL
            END,
            t.id,
            0
        FROM transactions AS t
        WHERE processor_fee_amount > 0
        """
    )

    op.drop_column("transactions", "processor_fee_amount")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "transactions",
        sa.Column(
            "processor_fee_amount", sa.INTEGER(), autoincrement=False, nullable=True
        ),
    )

    # Restore the processor_fee_amount column
    op.execute(
        """
        UPDATE transactions
        SET processor_fee_amount = -t.amount
        FROM transactions AS t
        WHERE t.incurred_by_transaction_id = transactions.id
        """
    )
    op.execute(
        """
        UPDATE transactions
        SET processor_fee_amount = 0
        WHERE processor_fee_amount IS NULL
        """
    )

    # Drop the fee transactions
    op.execute(
        """
        DELETE FROM transactions
        WHERE type = 'processor_fee'
        """
    )

    op.alter_column(
        "transactions",
        "processor_fee_amount",
        nullable=False,
        existing_nullable=True,
        existing_type=sa.INTEGER(),
    )

    op.drop_constraint(
        op.f("transactions_incurred_by_transaction_id_fkey"),
        "transactions",
        type_="foreignkey",
    )
    op.drop_index(
        op.f("ix_transactions_incurred_by_transaction_id"), table_name="transactions"
    )
    op.drop_index(op.f("ix_transactions_processor_fee_type"), table_name="transactions")
    op.drop_index(
        op.f("ix_transactions_fee_balance_transaction_id"), table_name="transactions"
    )
    op.drop_column("transactions", "incurred_by_transaction_id")
    op.drop_column("transactions", "fee_balance_transaction_id")
    op.drop_column("transactions", "processor_fee_type")
    # ### end Alembic commands ###
