"""traffic.organization_id

Revision ID: 1ce8e8379bd1
Revises: 983162e3a21e
Create Date: 2024-02-22 18:06:29.207546

"""
import sqlalchemy as sa
from alembic import op

# Polar Custom Imports
from polar.kit.extensions.sqlalchemy import PostgresUUID

# revision identifiers, used by Alembic.
revision = "1ce8e8379bd1"
down_revision = "983162e3a21e"
branch_labels: tuple[str] | None = None
depends_on: tuple[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("traffic", sa.Column("organization_id", sa.UUID(), nullable=True))
    op.alter_column("traffic", "article_id", existing_type=sa.UUID(), nullable=True)
    op.drop_constraint(
        "traffic_article_id_date_location_href_referrer_key", "traffic", type_="unique"
    )
    op.create_index("article_id", "traffic", ["date"], unique=False)
    op.create_index("organization_id", "traffic", ["date"], unique=False)
    op.create_unique_constraint(
        "traffic_unique_key",
        "traffic",
        ["organization_id", "article_id", "date", "location_href", "referrer"],
    )
    op.create_foreign_key(
        op.f("traffic_organization_id_fkey"),
        "traffic",
        "organizations",
        ["organization_id"],
        ["id"],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        op.f("traffic_organization_id_fkey"), "traffic", type_="foreignkey"
    )
    op.drop_constraint("traffic_unique_key", "traffic", type_="unique")
    op.drop_index("organization_id", table_name="traffic")
    op.drop_index("article_id", table_name="traffic")
    op.create_unique_constraint(
        "traffic_article_id_date_location_href_referrer_key",
        "traffic",
        ["article_id", "date", "location_href", "referrer"],
    )
    op.alter_column("traffic", "article_id", existing_type=sa.UUID(), nullable=False)
    op.drop_column("traffic", "organization_id")
    # ### end Alembic commands ###
