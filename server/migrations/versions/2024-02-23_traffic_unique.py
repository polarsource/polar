"""traffic.unique

Revision ID: 81d2b0eddfcb
Revises: e5e68362e04a
Create Date: 2024-02-23 14:24:35.343041

"""

import sqlalchemy as sa
from alembic import op

# Polar Custom Imports
from polar.kit.extensions.sqlalchemy import PostgresUUID

# revision identifiers, used by Alembic.
revision = "81d2b0eddfcb"
down_revision = "e5e68362e04a"
branch_labels: tuple[str] | None = None
depends_on: tuple[str] | None = None


def upgrade() -> None:
    op.drop_constraint("traffic_unique_key", "traffic", type_="unique")

    # clean up data
    op.execute(
        "create table traffic_duplicate as (select * from traffic) with no data;"
    )

    op.execute(
        "insert into traffic_duplicate (id, article_id, date, views, referrer, location_href, organization_id) select gen_random_uuid(), article_id, date, sum(views), referrer, location_href, organization_id from traffic group by article_id, organization_id, date,  location_href, referrer"
    )

    op.execute("truncate traffic")

    # insert data
    op.execute(
        "insert into traffic (id, article_id, date, views, referrer, location_href, organization_id) select id, article_id, date, views, referrer, location_href, organization_id from traffic_duplicate"
    )

    # create new unique index
    op.create_unique_constraint(
        "traffic_unique_key",
        "traffic",
        ["organization_id", "article_id", "date", "location_href", "referrer"],
        postgresql_nulls_not_distinct=True,
    )

    op.drop_table("traffic_duplicate")


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("traffic_unique_key", "traffic", type_="unique")
    op.create_unique_constraint(
        "traffic_unique_key",
        "traffic",
        ["organization_id", "article_id", "date", "location_href", "referrer"],
    )
    # ### end Alembic commands ###
