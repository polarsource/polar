"""donations

Revision ID: b8d208424987
Revises: 3c9d3be8a4e6
Create Date: 2024-03-25 13:36:13.980440

"""
import sqlalchemy as sa
from alembic import op

# Polar Custom Imports
from polar.kit.extensions.sqlalchemy import PostgresUUID

# revision identifiers, used by Alembic.
revision = "b8d208424987"
down_revision = "3c9d3be8a4e6"
branch_labels: tuple[str] | None = None
depends_on: tuple[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "donations",
        sa.Column("to_organization_id", sa.UUID(), nullable=False),
        sa.Column("payment_id", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("amount", sa.BigInteger(), nullable=False),
        sa.Column("amount_received", sa.BigInteger(), nullable=True),
        sa.Column("by_user_id", sa.UUID(), nullable=True),
        sa.Column("by_organization_id", sa.UUID(), nullable=True),
        sa.Column("on_behalf_of_organization_id", sa.UUID(), nullable=True),
        sa.Column("created_by_user_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["by_organization_id"],
            ["organizations.id"],
            name=op.f("donations_by_organization_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["by_user_id"], ["users.id"], name=op.f("donations_by_user_id_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["created_by_user_id"],
            ["users.id"],
            name=op.f("donations_created_by_user_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["on_behalf_of_organization_id"],
            ["organizations.id"],
            name=op.f("donations_on_behalf_of_organization_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["to_organization_id"],
            ["organizations.id"],
            name=op.f("donations_to_organization_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("donations_pkey")),
    )
    op.create_index(
        op.f("ix_donations_by_organization_id"),
        "donations",
        ["by_organization_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_donations_by_user_id"), "donations", ["by_user_id"], unique=False
    )
    op.create_index(op.f("ix_donations_email"), "donations", ["email"], unique=False)
    op.create_index(
        op.f("ix_donations_on_behalf_of_organization_id"),
        "donations",
        ["on_behalf_of_organization_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_donations_payment_id"), "donations", ["payment_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_donations_payment_id"), table_name="donations")
    op.drop_index(
        op.f("ix_donations_on_behalf_of_organization_id"), table_name="donations"
    )
    op.drop_index(op.f("ix_donations_email"), table_name="donations")
    op.drop_index(op.f("ix_donations_by_user_id"), table_name="donations")
    op.drop_index(op.f("ix_donations_by_organization_id"), table_name="donations")
    op.drop_table("donations")
    # ### end Alembic commands ###
