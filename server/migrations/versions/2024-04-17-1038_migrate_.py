"""Migrate BenefitPreconditionErrorNotificationPayload payloads

Revision ID: 7e8f9af7da4d
Revises: 01ed0cee6494
Create Date: 2024-04-17 10:38:39.102371

"""

import sqlalchemy as sa
from alembic import op

# Polar Custom Imports
from polar.kit.extensions.sqlalchemy import PostgresUUID

# revision identifiers, used by Alembic.
revision = "7e8f9af7da4d"
down_revision = "01ed0cee6494"
branch_labels: tuple[str] | None = None
depends_on: tuple[str] | None = None


def upgrade() -> None:
    op.execute(
        """
        UPDATE notifications
        SET payload = jsonb_set(
            payload,
            '{benefit_id}',
            to_jsonb(CAST (payload ->> 'subscription_benefit_id' AS TEXT)),
            true
        )
        WHERE type = 'BenefitPreconditionErrorNotification'
        AND payload ->> 'subscription_benefit_id' IS NOT NULL
        """
    )
    op.execute(
        """
        UPDATE notifications
        SET payload = jsonb_set(
            payload,
            '{benefit_description}',
            to_jsonb(CAST (payload ->> 'subscription_benefit_description' AS TEXT)),
            true
        )
        WHERE type = 'BenefitPreconditionErrorNotification'
        AND payload ->> 'subscription_benefit_id' IS NOT NULL
        """
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
