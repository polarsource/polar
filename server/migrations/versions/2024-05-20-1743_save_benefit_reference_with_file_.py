"""save benefit reference with file permissions

Revision ID: f00471adc3e1
Revises: cf85947fa6b8
Create Date: 2024-05-20 17:43:35.403511

"""

import sqlalchemy as sa
from alembic import op

# Polar Custom Imports
from polar.kit.extensions.sqlalchemy import PostgresUUID

# revision identifiers, used by Alembic.
revision = "f00471adc3e1"
down_revision = "cf85947fa6b8"
branch_labels: tuple[str] | None = None
depends_on: tuple[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "file_permissions", sa.Column("benefit_id", sa.UUID(), nullable=False)
    )
    op.drop_constraint(
        "file_permissions_user_id_file_id_key", "file_permissions", type_="unique"
    )
    op.create_unique_constraint(
        op.f("file_permissions_user_id_file_id_benefit_id_key"),
        "file_permissions",
        ["user_id", "file_id", "benefit_id"],
    )
    op.create_index(
        op.f("ix_file_permissions_benefit_id"),
        "file_permissions",
        ["benefit_id"],
        unique=False,
    )
    op.create_foreign_key(
        op.f("file_permissions_benefit_id_fkey"),
        "file_permissions",
        "benefits",
        ["benefit_id"],
        ["id"],
        ondelete="cascade",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        op.f("file_permissions_benefit_id_fkey"), "file_permissions", type_="foreignkey"
    )
    op.drop_index(op.f("ix_file_permissions_benefit_id"), table_name="file_permissions")
    op.drop_constraint(
        op.f("file_permissions_user_id_file_id_benefit_id_key"),
        "file_permissions",
        type_="unique",
    )
    op.create_unique_constraint(
        "file_permissions_user_id_file_id_key",
        "file_permissions",
        ["user_id", "file_id"],
    )
    op.drop_column("file_permissions", "benefit_id")
    # ### end Alembic commands ###
