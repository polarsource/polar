"""Initial migration

Revision ID: 26ccc98e38f1
Revises:
Create Date: 2024-06-06 10:59:25.903538

"""

import enum

import citext
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql
from sqlalchemy_utils.types.ts_vector import TSVectorType

from polar.enums import Platforms
from polar.kit.extensions.sqlalchemy import StringEnum
from polar.models import Account, Issue
from polar.models.article import ArticleByline, ArticleVisibility


# This enum has been removed from the codebase since this migration was created
# Creating it here to avoid breaking the migration
class ReferenceType(str, enum.Enum):
    # external_id is a pull_requests.id UUID
    PULL_REQUEST = "pull_request"

    # external_id is a HREF
    EXTERNAL_GITHUB_PULL_REQUEST = "external_github_pull_request"

    # external_id is a SHA1
    EXTERNAL_GITHUB_COMMIT = "external_github_commit"


# revision identifiers, used by Alembic.
revision = "26ccc98e38f1"
down_revision = None
branch_labels: tuple[str] | None = None
depends_on: tuple[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE EXTENSION IF NOT EXISTS citext")

    op.create_table(
        "accounts",
        sa.Column("account_type", sa.String(length=255), nullable=False),
        sa.Column("admin_id", sa.UUID(), nullable=False),
        sa.Column("stripe_id", sa.String(length=100), nullable=True),
        sa.Column("open_collective_slug", sa.String(length=255), nullable=True),
        sa.Column("email", sa.String(length=254), nullable=True),
        sa.Column("country", sa.String(length=2), nullable=False),
        sa.Column("currency", sa.String(length=3), nullable=True),
        sa.Column("is_details_submitted", sa.Boolean(), nullable=False),
        sa.Column("is_charges_enabled", sa.Boolean(), nullable=False),
        sa.Column("is_payouts_enabled", sa.Boolean(), nullable=False),
        sa.Column("processor_fees_applicable", sa.Boolean(), nullable=False),
        sa.Column("platform_pledge_fee_percent", sa.Integer(), nullable=True),
        sa.Column("platform_subscription_fee_percent", sa.Integer(), nullable=True),
        sa.Column("business_type", sa.String(length=255), nullable=True),
        sa.Column("status", StringEnum(Account.Status), nullable=False),
        sa.Column("next_review_threshold", sa.Integer(), nullable=True),
        sa.Column("data", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["admin_id"],
            ["users.id"],
            name=op.f("accounts_admin_id_fkey"),
            use_alter=True,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("accounts_pkey")),
    )
    op.create_index(
        op.f("ix_accounts_created_at"), "accounts", ["created_at"], unique=False
    )
    op.create_index(
        op.f("ix_accounts_deleted_at"), "accounts", ["deleted_at"], unique=False
    )
    op.create_index(
        op.f("ix_accounts_modified_at"), "accounts", ["modified_at"], unique=False
    )
    op.create_table(
        "organizations",
        sa.Column(
            "platform",
            StringEnum(Platforms),
            nullable=False,
        ),
        sa.Column("name", citext.CIText(), nullable=False),
        sa.Column("external_id", sa.BigInteger(), nullable=False),
        sa.Column("avatar_url", sa.String(), nullable=False),
        sa.Column("is_personal", sa.Boolean(), nullable=False),
        sa.Column("account_id", sa.UUID(), nullable=True),
        sa.Column("installation_id", sa.Integer(), nullable=True),
        sa.Column(
            "installation_created_at", sa.TIMESTAMP(timezone=True), nullable=True
        ),
        sa.Column(
            "installation_updated_at", sa.TIMESTAMP(timezone=True), nullable=True
        ),
        sa.Column(
            "installation_suspended_at", sa.TIMESTAMP(timezone=True), nullable=True
        ),
        sa.Column("installation_suspended_by", sa.Integer(), nullable=True),
        sa.Column("installation_suspender", sa.UUID(), nullable=True),
        sa.Column(
            "installation_permissions",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("pledge_badge_show_amount", sa.Boolean(), nullable=False),
        sa.Column("pledge_minimum_amount", sa.Integer(), nullable=False),
        sa.Column("default_badge_custom_content", sa.String(), nullable=True),
        sa.Column("default_upfront_split_to_contributors", sa.Integer(), nullable=True),
        sa.Column("onboarded_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("blocked_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("created_from_user_maintainer_upgrade", sa.Boolean(), nullable=False),
        sa.Column("is_teams_enabled", sa.Boolean(), nullable=False),
        sa.Column("stripe_customer_id", sa.String(length=50), nullable=True),
        sa.Column("billing_email", sa.String(length=120), nullable=True),
        sa.Column("total_monthly_spending_limit", sa.Integer(), nullable=True),
        sa.Column("per_user_monthly_spending_limit", sa.Integer(), nullable=True),
        sa.Column("custom_domain", sa.String(), nullable=True),
        sa.Column(
            "profile_settings", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column("donations_enabled", sa.Boolean(), nullable=False),
        sa.Column("public_donation_timestamps", sa.Boolean(), nullable=False),
        sa.Column(
            "feature_settings", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column("bio", sa.String(), nullable=True),
        sa.Column("pretty_name", sa.String(), nullable=True),
        sa.Column("company", sa.String(), nullable=True),
        sa.Column("blog", sa.String(), nullable=True),
        sa.Column("location", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("twitter_username", sa.String(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["accounts.id"],
            name=op.f("organizations_account_id_fkey"),
            ondelete="set null",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("organizations_pkey")),
        sa.UniqueConstraint(
            "custom_domain", name=op.f("organizations_custom_domain_key")
        ),
        sa.UniqueConstraint("external_id", name=op.f("organizations_external_id_key")),
        sa.UniqueConstraint("external_id", name=op.f("organizations_external_id_key")),
        sa.UniqueConstraint(
            "installation_id", name=op.f("organizations_installation_id_key")
        ),
        sa.UniqueConstraint(
            "installation_id", name=op.f("organizations_installation_id_key")
        ),
        sa.UniqueConstraint("name", name=op.f("organizations_name_key")),
        sa.UniqueConstraint("name", name=op.f("organizations_name_key")),
        sa.UniqueConstraint(
            "stripe_customer_id", name=op.f("organizations_stripe_customer_id_key")
        ),
    )
    op.create_index(
        op.f("ix_organizations_created_at"),
        "organizations",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_organizations_deleted_at"),
        "organizations",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_organizations_modified_at"),
        "organizations",
        ["modified_at"],
        unique=False,
    )
    op.create_table(
        "users",
        sa.Column("username", sa.String(length=50), nullable=False),
        sa.Column("email", sa.String(length=320), nullable=False),
        sa.Column("email_verified", sa.Boolean(), nullable=False),
        sa.Column("avatar_url", sa.String(length=1024), nullable=True),
        sa.Column("profile", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("account_id", sa.UUID(), nullable=True),
        sa.Column("invite_only_approved", sa.Boolean(), nullable=False),
        sa.Column("accepted_terms_of_service", sa.Boolean(), nullable=False),
        sa.Column("last_seen_at_extension", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("last_version_extension", sa.String(length=50), nullable=True),
        sa.Column("email_newsletters_and_changelogs", sa.Boolean(), nullable=False),
        sa.Column("email_promotions_and_events", sa.Boolean(), nullable=False),
        sa.Column("stripe_customer_id", sa.String(), nullable=True),
        sa.Column("blocked_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["accounts.id"],
            name=op.f("users_account_id_fkey"),
            ondelete="set null",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("users_pkey")),
        sa.UniqueConstraint(
            "stripe_customer_id", name=op.f("users_stripe_customer_id_key")
        ),
        sa.UniqueConstraint("username", name=op.f("users_username_key")),
    )
    op.create_index(op.f("ix_users_created_at"), "users", ["created_at"], unique=False)
    op.create_index(op.f("ix_users_deleted_at"), "users", ["deleted_at"], unique=False)
    op.create_index(
        "ix_users_email_case_insensitive",
        "users",
        [sa.text("lower(email)")],
        unique=True,
    )
    op.create_index(
        op.f("ix_users_modified_at"), "users", ["modified_at"], unique=False
    )

    op.create_foreign_key(
        op.f("accounts_admin_id_fkey"),
        "accounts",
        "users",
        ["admin_id"],
        ["id"],
        use_alter=True,
    )

    op.create_table(
        "advertisement_campaigns",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("views", sa.Integer(), nullable=False),
        sa.Column("clicks", sa.Integer(), nullable=False),
        sa.Column("image_url", sa.String(), nullable=False),
        sa.Column("image_url_dark", sa.String(), nullable=True),
        sa.Column("text", sa.String(), nullable=False),
        sa.Column("link_url", sa.String(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("advertisement_campaigns_user_id_fkey")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("advertisement_campaigns_pkey")),
    )
    op.create_index(
        op.f("ix_advertisement_campaigns_created_at"),
        "advertisement_campaigns",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_advertisement_campaigns_deleted_at"),
        "advertisement_campaigns",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_advertisement_campaigns_modified_at"),
        "advertisement_campaigns",
        ["modified_at"],
        unique=False,
    )
    op.create_table(
        "article_subscriptions",
        sa.Column("paid_subscriber", sa.Boolean(), nullable=False),
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("emails_unsubscribed_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name=op.f("article_subscriptions_organization_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("article_subscriptions_user_id_fkey"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("article_subscriptions_pkey")),
        sa.UniqueConstraint(
            "organization_id",
            "user_id",
            name=op.f("article_subscriptions_organization_id_user_id_key"),
        ),
    )
    op.create_index(
        op.f("ix_article_subscriptions_created_at"),
        "article_subscriptions",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_article_subscriptions_deleted_at"),
        "article_subscriptions",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_article_subscriptions_modified_at"),
        "article_subscriptions",
        ["modified_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_article_subscriptions_organization_id"),
        "article_subscriptions",
        ["organization_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_article_subscriptions_user_id"),
        "article_subscriptions",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "articles",
        sa.Column("slug", sa.String(length=255), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("body", sa.String(), nullable=False),
        sa.Column("created_by", sa.UUID(), nullable=False),
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("published_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("byline", StringEnum(ArticleByline), nullable=False),
        sa.Column(
            "visibility",
            StringEnum(ArticleVisibility),
            nullable=False,
        ),
        sa.Column("paid_subscribers_only", sa.Boolean(), nullable=False),
        sa.Column(
            "paid_subscribers_only_ends_at", sa.TIMESTAMP(timezone=True), nullable=True
        ),
        sa.Column("notifications_sent_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("notify_subscribers", sa.Boolean(), nullable=False),
        sa.Column("email_sent_to_count", sa.Integer(), nullable=True),
        sa.Column("email_open_count", sa.Integer(), nullable=False),
        sa.Column("web_view_count", sa.Integer(), nullable=False),
        sa.Column("is_pinned", sa.Boolean(), nullable=False),
        sa.Column("og_image_url", sa.String(), nullable=True),
        sa.Column("og_description", sa.String(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"], ["users.id"], name=op.f("articles_created_by_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name=op.f("articles_organization_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("articles_pkey")),
        sa.UniqueConstraint(
            "organization_id", "slug", name=op.f("articles_organization_id_slug_key")
        ),
    )
    op.create_index(
        op.f("ix_articles_created_at"), "articles", ["created_at"], unique=False
    )
    op.create_index(
        op.f("ix_articles_deleted_at"), "articles", ["deleted_at"], unique=False
    )
    op.create_index(
        op.f("ix_articles_modified_at"), "articles", ["modified_at"], unique=False
    )
    op.create_table(
        "benefits",
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("is_tax_applicable", sa.Boolean(), nullable=False),
        sa.Column("selectable", sa.Boolean(), nullable=False),
        sa.Column("deletable", sa.Boolean(), nullable=False),
        sa.Column(
            "properties", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name=op.f("benefits_organization_id_fkey"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("benefits_pkey")),
    )
    op.create_index(
        op.f("ix_benefits_created_at"), "benefits", ["created_at"], unique=False
    )
    op.create_index(
        op.f("ix_benefits_deleted_at"), "benefits", ["deleted_at"], unique=False
    )
    op.create_index(
        op.f("ix_benefits_modified_at"), "benefits", ["modified_at"], unique=False
    )
    op.create_index(op.f("ix_benefits_type"), "benefits", ["type"], unique=False)
    op.create_table(
        "files",
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("version", sa.String(), nullable=True),
        sa.Column("path", sa.String(), nullable=False),
        sa.Column("mime_type", sa.String(), nullable=False),
        sa.Column("size", sa.Integer(), nullable=False),
        sa.Column("service", sa.String(), nullable=False),
        sa.Column("last_modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("storage_version", sa.String(), nullable=True),
        sa.Column("checksum_etag", sa.String(), nullable=True),
        sa.Column("checksum_sha256_base64", sa.String(), nullable=True),
        sa.Column("checksum_sha256_hex", sa.String(), nullable=True),
        sa.Column("is_uploaded", sa.Boolean(), nullable=False),
        sa.Column("is_enabled", sa.Boolean(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name=op.f("files_organization_id_fkey"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("files_pkey")),
    )
    op.create_index(op.f("ix_files_created_at"), "files", ["created_at"], unique=False)
    op.create_index(op.f("ix_files_deleted_at"), "files", ["deleted_at"], unique=False)
    op.create_index(
        op.f("ix_files_modified_at"), "files", ["modified_at"], unique=False
    )
    op.create_index(
        op.f("ix_files_organization_id"), "files", ["organization_id"], unique=False
    )
    op.create_table(
        "invites",
        sa.Column("created_by", sa.UUID(), nullable=False),
        sa.Column("claimed_by", sa.UUID(), nullable=True),
        sa.Column("code", sa.String(), nullable=False),
        sa.Column("note", sa.String(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["claimed_by"], ["users.id"], name=op.f("invites_claimed_by_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["created_by"], ["users.id"], name=op.f("invites_created_by_fkey")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("invites_pkey")),
    )
    op.create_index(op.f("ix_invites_code"), "invites", ["code"], unique=True)
    op.create_index(
        op.f("ix_invites_created_at"), "invites", ["created_at"], unique=False
    )
    op.create_index(
        op.f("ix_invites_deleted_at"), "invites", ["deleted_at"], unique=False
    )
    op.create_index(
        op.f("ix_invites_modified_at"), "invites", ["modified_at"], unique=False
    )
    op.create_table(
        "magic_links",
        sa.Column("token_hash", sa.String(), nullable=False),
        sa.Column("expires_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("user_email", sa.String(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("source", sa.String(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("magic_links_user_id_fkey"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("magic_links_pkey")),
    )
    op.create_index(
        op.f("ix_magic_links_created_at"), "magic_links", ["created_at"], unique=False
    )
    op.create_index(
        op.f("ix_magic_links_deleted_at"), "magic_links", ["deleted_at"], unique=False
    )
    op.create_index(
        op.f("ix_magic_links_modified_at"), "magic_links", ["modified_at"], unique=False
    )
    op.create_index(
        op.f("ix_magic_links_token_hash"), "magic_links", ["token_hash"], unique=False
    )
    op.create_table(
        "oauth2_authorization_codes",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("sub_type", sa.String(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("organization_id", sa.UUID(), nullable=True),
        sa.Column("code", sa.String(length=120), nullable=False),
        sa.Column("client_id", sa.String(length=48), nullable=True),
        sa.Column("redirect_uri", sa.Text(), nullable=True),
        sa.Column("response_type", sa.Text(), nullable=True),
        sa.Column("scope", sa.Text(), nullable=True),
        sa.Column("nonce", sa.Text(), nullable=True),
        sa.Column("auth_time", sa.Integer(), nullable=False),
        sa.Column("code_challenge", sa.Text(), nullable=True),
        sa.Column("code_challenge_method", sa.String(length=48), nullable=True),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name=op.f("oauth2_authorization_codes_organization_id_fkey"),
            ondelete="cascade",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("oauth2_authorization_codes_user_id_fkey"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("oauth2_authorization_codes_pkey")),
        sa.UniqueConstraint("code", name=op.f("oauth2_authorization_codes_code_key")),
    )
    op.create_index(
        op.f("ix_oauth2_authorization_codes_created_at"),
        "oauth2_authorization_codes",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_oauth2_authorization_codes_deleted_at"),
        "oauth2_authorization_codes",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_oauth2_authorization_codes_modified_at"),
        "oauth2_authorization_codes",
        ["modified_at"],
        unique=False,
    )
    op.create_table(
        "oauth2_clients",
        sa.Column("registration_access_token", sa.String(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("client_id", sa.String(length=48), nullable=True),
        sa.Column("client_secret", sa.String(length=120), nullable=True),
        sa.Column("client_id_issued_at", sa.Integer(), nullable=False),
        sa.Column("client_secret_expires_at", sa.Integer(), nullable=False),
        sa.Column("client_metadata", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("oauth2_clients_user_id_fkey")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("oauth2_clients_pkey")),
        sa.UniqueConstraint("client_id", name=op.f("oauth2_clients_client_id_key")),
    )
    op.create_index(
        op.f("ix_oauth2_clients_client_id"),
        "oauth2_clients",
        ["client_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_oauth2_clients_created_at"),
        "oauth2_clients",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_oauth2_clients_deleted_at"),
        "oauth2_clients",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_oauth2_clients_modified_at"),
        "oauth2_clients",
        ["modified_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_oauth2_clients_registration_access_token"),
        "oauth2_clients",
        ["registration_access_token"],
        unique=False,
    )
    op.create_index(
        op.f("ix_oauth2_clients_user_id"), "oauth2_clients", ["user_id"], unique=False
    )
    op.create_table(
        "oauth2_grants",
        sa.Column("client_id", sa.String(length=48), nullable=False),
        sa.Column("scope", sa.Text(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("organization_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name=op.f("oauth2_grants_organization_id_fkey"),
            ondelete="cascade",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("oauth2_grants_user_id_fkey"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("oauth2_grants_pkey")),
        sa.UniqueConstraint(
            "client_id",
            "organization_id",
            name=op.f("oauth2_grants_client_id_organization_id_key"),
        ),
        sa.UniqueConstraint(
            "client_id", "user_id", name=op.f("oauth2_grants_client_id_user_id_key")
        ),
    )
    op.create_index(
        op.f("ix_oauth2_grants_client_id"), "oauth2_grants", ["client_id"], unique=False
    )
    op.create_index(
        op.f("ix_oauth2_grants_created_at"),
        "oauth2_grants",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_oauth2_grants_deleted_at"),
        "oauth2_grants",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_oauth2_grants_modified_at"),
        "oauth2_grants",
        ["modified_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_oauth2_grants_organization_id"),
        "oauth2_grants",
        ["organization_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_oauth2_grants_user_id"), "oauth2_grants", ["user_id"], unique=False
    )
    op.create_table(
        "oauth2_tokens",
        sa.Column("nonce", sa.String(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("client_id", sa.String(length=48), nullable=True),
        sa.Column("token_type", sa.String(length=40), nullable=True),
        sa.Column("access_token", sa.String(length=255), nullable=False),
        sa.Column("refresh_token", sa.String(length=255), nullable=True),
        sa.Column("scope", sa.Text(), nullable=True),
        sa.Column("issued_at", sa.Integer(), nullable=False),
        sa.Column("access_token_revoked_at", sa.Integer(), nullable=False),
        sa.Column("refresh_token_revoked_at", sa.Integer(), nullable=False),
        sa.Column("expires_in", sa.Integer(), nullable=False),
        sa.Column("sub_type", sa.String(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("organization_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name=op.f("oauth2_tokens_organization_id_fkey"),
            ondelete="cascade",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("oauth2_tokens_user_id_fkey"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("oauth2_tokens_pkey")),
        sa.UniqueConstraint(
            "access_token", name=op.f("oauth2_tokens_access_token_key")
        ),
    )
    op.create_index(
        op.f("ix_oauth2_tokens_created_at"),
        "oauth2_tokens",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_oauth2_tokens_deleted_at"),
        "oauth2_tokens",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_oauth2_tokens_modified_at"),
        "oauth2_tokens",
        ["modified_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_oauth2_tokens_nonce"), "oauth2_tokens", ["nonce"], unique=False
    )
    op.create_index(
        op.f("ix_oauth2_tokens_refresh_token"),
        "oauth2_tokens",
        ["refresh_token"],
        unique=False,
    )
    op.create_table(
        "oauth_accounts",
        sa.Column("platform", sa.String(length=32), nullable=False),
        sa.Column("access_token", sa.String(length=1024), nullable=False),
        sa.Column("expires_at", sa.Integer(), nullable=True),
        sa.Column("refresh_token", sa.String(length=1024), nullable=True),
        sa.Column("account_id", sa.String(length=320), nullable=False),
        sa.Column("account_email", sa.String(length=320), nullable=False),
        sa.Column("account_username", sa.String(length=320), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("oauth_accounts_user_id_fkey"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("oauth_accounts_pkey")),
        sa.UniqueConstraint(
            "platform",
            "account_id",
            name=op.f("oauth_accounts_platform_account_id_key"),
        ),
    )
    op.create_index(
        "idx_user_id_platform", "oauth_accounts", ["user_id", "platform"], unique=False
    )
    op.create_index(
        op.f("ix_oauth_accounts_created_at"),
        "oauth_accounts",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_oauth_accounts_deleted_at"),
        "oauth_accounts",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_oauth_accounts_modified_at"),
        "oauth_accounts",
        ["modified_at"],
        unique=False,
    )
    op.create_table(
        "personal_access_tokens",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("expires_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("comment", sa.String(), nullable=False),
        sa.Column("last_used_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("personal_access_tokens_user_id_fkey")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("personal_access_tokens_pkey")),
    )
    op.create_index(
        op.f("ix_personal_access_tokens_created_at"),
        "personal_access_tokens",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_personal_access_tokens_deleted_at"),
        "personal_access_tokens",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_personal_access_tokens_modified_at"),
        "personal_access_tokens",
        ["modified_at"],
        unique=False,
    )
    op.create_table(
        "products",
        sa.Column("name", citext.CIText(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("is_archived", sa.Boolean(), nullable=False),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column("is_highlighted", sa.Boolean(), nullable=True),
        sa.Column("stripe_product_id", sa.String(), nullable=True),
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name=op.f("products_organization_id_fkey"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("products_pkey")),
    )
    op.create_index(
        "idx_organization_id_type",
        "products",
        ["organization_id", "type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_products_created_at"), "products", ["created_at"], unique=False
    )
    op.create_index(
        op.f("ix_products_deleted_at"), "products", ["deleted_at"], unique=False
    )
    op.create_index(
        op.f("ix_products_is_highlighted"), "products", ["is_highlighted"], unique=False
    )
    op.create_index(
        op.f("ix_products_modified_at"), "products", ["modified_at"], unique=False
    )
    op.create_index(
        op.f("ix_products_stripe_product_id"),
        "products",
        ["stripe_product_id"],
        unique=False,
    )
    op.create_index(op.f("ix_products_type"), "products", ["type"], unique=False)
    op.create_table(
        "repositories",
        sa.Column(
            "platform",
            StringEnum(Platforms),
            nullable=False,
        ),
        sa.Column("external_id", sa.BigInteger(), nullable=False),
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("name", citext.CIText(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("open_issues", sa.Integer(), nullable=True),
        sa.Column("forks", sa.Integer(), nullable=True),
        sa.Column("stars", sa.Integer(), nullable=True),
        sa.Column("watchers", sa.Integer(), nullable=True),
        sa.Column("main_branch", sa.String(), nullable=True),
        sa.Column("topics", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("license", sa.String(), nullable=True),
        sa.Column("homepage", sa.String(), nullable=True),
        sa.Column("repository_pushed_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("repository_created_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("repository_modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column(
            "issues_references_synced_at", sa.TIMESTAMP(timezone=True), nullable=True
        ),
        sa.Column(
            "profile_settings", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column("pledge_badge_auto_embed", sa.Boolean(), nullable=False),
        sa.Column("pledge_badge_label", sa.String(), nullable=False),
        sa.Column("is_private", sa.Boolean(), nullable=False),
        sa.Column("is_fork", sa.Boolean(), nullable=True),
        sa.Column("is_issues_enabled", sa.Boolean(), nullable=True),
        sa.Column("is_projects_enabled", sa.Boolean(), nullable=True),
        sa.Column("is_wiki_enabled", sa.Boolean(), nullable=True),
        sa.Column("is_pages_enabled", sa.Boolean(), nullable=True),
        sa.Column("is_downloads_enabled", sa.Boolean(), nullable=True),
        sa.Column("is_archived", sa.Boolean(), nullable=True),
        sa.Column("is_disabled", sa.Boolean(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name=op.f("repositories_organization_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("repositories_pkey")),
        sa.UniqueConstraint("external_id", name=op.f("repositories_external_id_key")),
        sa.UniqueConstraint("external_id", name=op.f("repositories_external_id_key")),
        sa.UniqueConstraint(
            "organization_id",
            "name",
            name=op.f("repositories_organization_id_name_key"),
        ),
    )
    op.create_index(
        "idx_deleted_at_is_private",
        "repositories",
        ["deleted_at", "is_private"],
        unique=False,
    )
    op.create_index(
        op.f("ix_repositories_created_at"), "repositories", ["created_at"], unique=False
    )
    op.create_index(
        op.f("ix_repositories_deleted_at"), "repositories", ["deleted_at"], unique=False
    )
    op.create_index(
        op.f("ix_repositories_modified_at"),
        "repositories",
        ["modified_at"],
        unique=False,
    )
    op.create_table(
        "user_notifications",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("last_read_notification_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("user_notifications_user_id_fkey")
        ),
        sa.PrimaryKeyConstraint("user_id", name=op.f("user_notifications_pkey")),
    )
    op.create_table(
        "user_organizations",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("is_admin", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name=op.f("user_organizations_organization_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("user_organizations_user_id_fkey")
        ),
        sa.PrimaryKeyConstraint(
            "user_id", "organization_id", name=op.f("user_organizations_pkey")
        ),
    )
    op.create_index(
        op.f("ix_user_organizations_created_at"),
        "user_organizations",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_user_organizations_deleted_at"),
        "user_organizations",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_user_organizations_modified_at"),
        "user_organizations",
        ["modified_at"],
        unique=False,
    )
    op.create_table(
        "webhook_endpoints",
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("secret", sa.String(), nullable=False),
        sa.Column("organization_id", sa.UUID(), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("events", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name=op.f("webhook_endpoints_organization_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("webhook_endpoints_user_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("webhook_endpoints_pkey")),
    )
    op.create_index(
        op.f("ix_webhook_endpoints_created_at"),
        "webhook_endpoints",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_webhook_endpoints_deleted_at"),
        "webhook_endpoints",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_webhook_endpoints_modified_at"),
        "webhook_endpoints",
        ["modified_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_webhook_endpoints_organization_id"),
        "webhook_endpoints",
        ["organization_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_webhook_endpoints_user_id"),
        "webhook_endpoints",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "webhook_notifications",
        sa.Column("integration", sa.String(), nullable=False),
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name=op.f("webhook_notifications_organization_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("webhook_notifications_pkey")),
    )
    op.create_index(
        op.f("ix_webhook_notifications_created_at"),
        "webhook_notifications",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_webhook_notifications_deleted_at"),
        "webhook_notifications",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_webhook_notifications_modified_at"),
        "webhook_notifications",
        ["modified_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_webhook_notifications_organization_id"),
        "webhook_notifications",
        ["organization_id"],
        unique=False,
    )
    op.create_table(
        "downloadables",
        sa.Column("file_id", sa.UUID(), nullable=False),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("benefit_id", sa.UUID(), nullable=False),
        sa.Column("downloaded", sa.Integer(), nullable=False),
        sa.Column("last_downloaded_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["benefit_id"],
            ["benefits.id"],
            name=op.f("downloadables_benefit_id_fkey"),
            ondelete="cascade",
        ),
        sa.ForeignKeyConstraint(
            ["file_id"], ["files.id"], name=op.f("downloadables_file_id_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("downloadables_user_id_fkey"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("downloadables_pkey")),
        sa.UniqueConstraint(
            "user_id",
            "file_id",
            "benefit_id",
            name=op.f("downloadables_user_id_file_id_benefit_id_key"),
        ),
    )
    op.create_index(
        op.f("ix_downloadables_benefit_id"),
        "downloadables",
        ["benefit_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_downloadables_created_at"),
        "downloadables",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_downloadables_deleted_at"),
        "downloadables",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_downloadables_file_id"), "downloadables", ["file_id"], unique=False
    )
    op.create_index(
        op.f("ix_downloadables_modified_at"),
        "downloadables",
        ["modified_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_downloadables_user_id"), "downloadables", ["user_id"], unique=False
    )
    op.create_table(
        "issues",
        sa.Column("external_lookup_key", sa.String(), nullable=True),
        sa.Column(
            "pledge_badge_embedded_at", sa.TIMESTAMP(timezone=True), nullable=True
        ),
        sa.Column("pledge_badge_ever_embedded", sa.Boolean(), nullable=False),
        sa.Column("has_pledge_badge_label", sa.Boolean(), nullable=False),
        sa.Column("badge_custom_content", sa.String(), nullable=True),
        sa.Column("github_issue_etag", sa.String(), nullable=True),
        sa.Column(
            "github_issue_fetched_at", sa.TIMESTAMP(timezone=True), nullable=True
        ),
        sa.Column("github_timeline_etag", sa.String(), nullable=True),
        sa.Column(
            "github_timeline_fetched_at", sa.TIMESTAMP(timezone=True), nullable=True
        ),
        sa.Column("funding_goal", sa.BigInteger(), nullable=True),
        sa.Column("pledged_amount_sum", sa.BigInteger(), nullable=False),
        sa.Column("last_pledged_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column(
            "issue_has_in_progress_relationship",
            sa.Boolean(),
            server_default="false",
            nullable=False,
        ),
        sa.Column(
            "issue_has_pull_request_relationship",
            sa.Boolean(),
            server_default="false",
            nullable=False,
        ),
        sa.Column("positive_reactions_count", sa.Integer(), nullable=False),
        sa.Column("total_engagement_count", sa.Integer(), nullable=False),
        sa.Column("needs_confirmation_solved", sa.Boolean(), nullable=False),
        sa.Column("confirmed_solved_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("confirmed_solved_by", sa.UUID(), nullable=True),
        sa.Column("upfront_split_to_contributors", sa.Integer(), nullable=True),
        sa.Column(
            "platform",
            StringEnum(Platforms),
            nullable=False,
        ),
        sa.Column("external_id", sa.BigInteger(), nullable=False),
        sa.Column("number", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("body", sa.Text(), nullable=True),
        sa.Column("comments", sa.Integer(), nullable=True),
        sa.Column(
            "author",
            postgresql.JSONB(none_as_null=True, astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("author_association", sa.String(), nullable=True),
        sa.Column(
            "labels",
            postgresql.JSONB(none_as_null=True, astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "assignee",
            postgresql.JSONB(none_as_null=True, astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "assignees",
            postgresql.JSONB(none_as_null=True, astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "milestone",
            postgresql.JSONB(none_as_null=True, astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "closed_by",
            postgresql.JSONB(none_as_null=True, astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "reactions",
            postgresql.JSONB(none_as_null=True, astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("state", StringEnum(Issue.State), nullable=False),
        sa.Column("state_reason", sa.String(), nullable=True),
        sa.Column("issue_closed_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("issue_created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("issue_modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column(
            "title_tsv",
            TSVectorType(),
            sa.Computed("to_tsvector('simple', \"title\")", persisted=True),
            nullable=False,
        ),
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("repository_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["confirmed_solved_by"],
            ["users.id"],
            name=op.f("issues_confirmed_solved_by_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name=op.f("issues_organization_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["repository_id"],
            ["repositories.id"],
            name=op.f("issues_repository_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("issues_pkey")),
        sa.UniqueConstraint("external_id", name=op.f("issues_external_id_key")),
        sa.UniqueConstraint(
            "organization_id",
            "repository_id",
            "number",
            name=op.f("issues_organization_id_repository_id_number_key"),
        ),
        sa.UniqueConstraint(
            "platform",
            "external_lookup_key",
            name=op.f("issues_platform_external_lookup_key_key"),
        ),
    )
    op.create_index(
        "idx_default_search",
        "issues",
        [
            "pledged_amount_sum",
            "last_pledged_at",
            "total_engagement_count",
            "created_at",
        ],
        unique=False,
    )
    op.create_index(
        "idx_issues_id_closed_at", "issues", ["id", "issue_closed_at"], unique=False
    )
    op.create_index(
        "idx_issues_pledged_amount_sum", "issues", ["pledged_amount_sum"], unique=False
    )
    op.create_index(
        "idx_issues_positive_reactions_count",
        "issues",
        ["positive_reactions_count"],
        unique=False,
    )
    op.create_index(
        "idx_issues_positive_total_engagement_count",
        "issues",
        ["total_engagement_count"],
        unique=False,
    )
    op.create_index(
        "idx_issues_title_tsv",
        "issues",
        ["title_tsv"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        op.f("ix_issues_created_at"), "issues", ["created_at"], unique=False
    )
    op.create_index(
        op.f("ix_issues_deleted_at"), "issues", ["deleted_at"], unique=False
    )
    op.create_index(
        op.f("ix_issues_external_lookup_key"),
        "issues",
        ["external_lookup_key"],
        unique=False,
    )
    op.create_index(
        op.f("ix_issues_modified_at"), "issues", ["modified_at"], unique=False
    )
    op.create_index(
        op.f("ix_issues_organization_id"), "issues", ["organization_id"], unique=False
    )
    op.create_index(
        op.f("ix_issues_repository_id"), "issues", ["repository_id"], unique=False
    )
    op.create_table(
        "product_benefits",
        sa.Column("product_id", sa.UUID(), nullable=False),
        sa.Column("benefit_id", sa.UUID(), nullable=False),
        sa.Column("order", sa.Integer(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["benefit_id"],
            ["benefits.id"],
            name=op.f("product_benefits_benefit_id_fkey"),
            ondelete="cascade",
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.id"],
            name=op.f("product_benefits_product_id_fkey"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint(
            "product_id", "benefit_id", "id", name=op.f("product_benefits_pkey")
        ),
        sa.UniqueConstraint(
            "product_id", "order", name=op.f("product_benefits_product_id_order_key")
        ),
    )
    op.create_index(
        op.f("ix_product_benefits_created_at"),
        "product_benefits",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_product_benefits_deleted_at"),
        "product_benefits",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_product_benefits_modified_at"),
        "product_benefits",
        ["modified_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_product_benefits_order"), "product_benefits", ["order"], unique=False
    )
    op.create_table(
        "product_prices",
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("recurring_interval", sa.String(), nullable=True),
        sa.Column("price_amount", sa.Integer(), nullable=False),
        sa.Column("price_currency", sa.String(length=3), nullable=False),
        sa.Column("is_archived", sa.Boolean(), nullable=False),
        sa.Column("stripe_price_id", sa.String(), nullable=False),
        sa.Column("product_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.id"],
            name=op.f("product_prices_product_id_fkey"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("product_prices_pkey")),
    )
    op.create_index(
        op.f("ix_product_prices_created_at"),
        "product_prices",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_product_prices_deleted_at"),
        "product_prices",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_product_prices_modified_at"),
        "product_prices",
        ["modified_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_product_prices_recurring_interval"),
        "product_prices",
        ["recurring_interval"],
        unique=False,
    )
    op.create_index(
        op.f("ix_product_prices_type"), "product_prices", ["type"], unique=False
    )
    op.create_table(
        "pull_requests",
        sa.Column("commits", sa.Integer(), nullable=True),
        sa.Column("additions", sa.Integer(), nullable=True),
        sa.Column("deletions", sa.Integer(), nullable=True),
        sa.Column("changed_files", sa.Integer(), nullable=True),
        sa.Column(
            "requested_reviewers",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "requested_teams", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("is_draft", sa.Boolean(), nullable=True),
        sa.Column("is_rebaseable", sa.Boolean(), nullable=True),
        sa.Column("review_comments", sa.Integer(), nullable=True),
        sa.Column("maintainer_can_modify", sa.Boolean(), nullable=True),
        sa.Column("is_mergeable", sa.Boolean(), nullable=True),
        sa.Column("mergeable_state", sa.String(), nullable=True),
        sa.Column("auto_merge", sa.String(), nullable=True),
        sa.Column("is_merged", sa.Boolean(), nullable=True),
        sa.Column("merged_by", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("merged_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("merge_commit_sha", sa.String(), nullable=True),
        sa.Column("head", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("base", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column(
            "platform",
            StringEnum(Platforms),
            nullable=False,
        ),
        sa.Column("external_id", sa.BigInteger(), nullable=False),
        sa.Column("number", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("body", sa.Text(), nullable=True),
        sa.Column("comments", sa.Integer(), nullable=True),
        sa.Column(
            "author",
            postgresql.JSONB(none_as_null=True, astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("author_association", sa.String(), nullable=True),
        sa.Column(
            "labels",
            postgresql.JSONB(none_as_null=True, astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "assignee",
            postgresql.JSONB(none_as_null=True, astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "assignees",
            postgresql.JSONB(none_as_null=True, astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "milestone",
            postgresql.JSONB(none_as_null=True, astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "closed_by",
            postgresql.JSONB(none_as_null=True, astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "reactions",
            postgresql.JSONB(none_as_null=True, astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("state", StringEnum(Issue.State), nullable=False),
        sa.Column("state_reason", sa.String(), nullable=True),
        sa.Column("issue_closed_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("issue_created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("issue_modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column(
            "title_tsv",
            TSVectorType(),
            sa.Computed("to_tsvector('simple', \"title\")", persisted=True),
            nullable=False,
        ),
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("repository_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name=op.f("pull_requests_organization_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["repository_id"],
            ["repositories.id"],
            name=op.f("pull_requests_repository_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pull_requests_pkey")),
        sa.UniqueConstraint("external_id", name=op.f("pull_requests_external_id_key")),
        sa.UniqueConstraint(
            "organization_id",
            "repository_id",
            "number",
            name=op.f("pull_requests_organization_id_repository_id_number_key"),
        ),
    )
    op.create_index(
        "idx_pull_requests_title_tsv",
        "pull_requests",
        ["title_tsv"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        op.f("ix_pull_requests_created_at"),
        "pull_requests",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_pull_requests_deleted_at"),
        "pull_requests",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_pull_requests_modified_at"),
        "pull_requests",
        ["modified_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_pull_requests_organization_id"),
        "pull_requests",
        ["organization_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_pull_requests_repository_id"),
        "pull_requests",
        ["repository_id"],
        unique=False,
    )
    op.create_table(
        "traffic",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("article_id", sa.UUID(), nullable=True),
        sa.Column("organization_id", sa.UUID(), nullable=True),
        sa.Column("date", sa.DATE(), nullable=False),
        sa.Column("views", sa.Integer(), nullable=False),
        sa.Column("location_href", sa.String(), nullable=True),
        sa.Column("referrer", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["article_id"], ["articles.id"], name=op.f("traffic_article_id_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name=op.f("traffic_organization_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("traffic_pkey")),
        sa.UniqueConstraint(
            "organization_id",
            "article_id",
            "date",
            "location_href",
            "referrer",
            name="traffic_unique_key",
            postgresql_nulls_not_distinct=True,
        ),
    )
    op.create_index(
        "idx_article_id_date", "traffic", ["article_id", "date"], unique=False
    )
    op.create_index(
        "idx_organization_id_date", "traffic", ["organization_id", "date"], unique=False
    )
    op.create_table(
        "webhook_events",
        sa.Column("webhook_endpoint_id", sa.UUID(), nullable=False),
        sa.Column("last_http_code", sa.Integer(), nullable=True),
        sa.Column("succeeded", sa.Boolean(), nullable=True),
        sa.Column("payload", sa.String(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["webhook_endpoint_id"],
            ["webhook_endpoints.id"],
            name=op.f("webhook_events_webhook_endpoint_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("webhook_events_pkey")),
    )
    op.create_index(
        op.f("ix_webhook_events_created_at"),
        "webhook_events",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_webhook_events_deleted_at"),
        "webhook_events",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_webhook_events_modified_at"),
        "webhook_events",
        ["modified_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_webhook_events_webhook_endpoint_id"),
        "webhook_events",
        ["webhook_endpoint_id"],
        unique=False,
    )
    op.create_table(
        "donations",
        sa.Column("to_organization_id", sa.UUID(), nullable=False),
        sa.Column("payment_id", sa.String(), nullable=False),
        sa.Column("charge_id", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("message", sa.String(), nullable=True),
        sa.Column("amount", sa.BigInteger(), nullable=False),
        sa.Column("amount_received", sa.BigInteger(), nullable=False),
        sa.Column("by_user_id", sa.UUID(), nullable=True),
        sa.Column("by_organization_id", sa.UUID(), nullable=True),
        sa.Column("on_behalf_of_organization_id", sa.UUID(), nullable=True),
        sa.Column("created_by_user_id", sa.UUID(), nullable=True),
        sa.Column("issue_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["by_organization_id"],
            ["organizations.id"],
            name=op.f("donations_by_organization_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["by_user_id"], ["users.id"], name=op.f("donations_by_user_id_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["created_by_user_id"],
            ["users.id"],
            name=op.f("donations_created_by_user_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["issue_id"], ["issues.id"], name=op.f("donations_issue_id_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["on_behalf_of_organization_id"],
            ["organizations.id"],
            name=op.f("donations_on_behalf_of_organization_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["to_organization_id"],
            ["organizations.id"],
            name=op.f("donations_to_organization_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("donations_pkey")),
    )
    op.create_index(
        op.f("ix_donations_by_organization_id"),
        "donations",
        ["by_organization_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_donations_by_user_id"), "donations", ["by_user_id"], unique=False
    )
    op.create_index(
        op.f("ix_donations_charge_id"), "donations", ["charge_id"], unique=False
    )
    op.create_index(
        op.f("ix_donations_created_at"), "donations", ["created_at"], unique=False
    )
    op.create_index(
        op.f("ix_donations_deleted_at"), "donations", ["deleted_at"], unique=False
    )
    op.create_index(op.f("ix_donations_email"), "donations", ["email"], unique=False)
    op.create_index(
        op.f("ix_donations_modified_at"), "donations", ["modified_at"], unique=False
    )
    op.create_index(
        op.f("ix_donations_on_behalf_of_organization_id"),
        "donations",
        ["on_behalf_of_organization_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_donations_payment_id"), "donations", ["payment_id"], unique=False
    )
    op.create_table(
        "issue_dependencies",
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("repository_id", sa.UUID(), nullable=False),
        sa.Column("dependent_issue_id", sa.UUID(), nullable=False),
        sa.Column("dependency_issue_id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["dependency_issue_id"],
            ["issues.id"],
            name=op.f("issue_dependencies_dependency_issue_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["dependent_issue_id"],
            ["issues.id"],
            name=op.f("issue_dependencies_dependent_issue_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name=op.f("issue_dependencies_organization_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["repository_id"],
            ["repositories.id"],
            name=op.f("issue_dependencies_repository_id_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "dependent_issue_id",
            "dependency_issue_id",
            name=op.f("issue_dependencies_pkey"),
        ),
    )
    op.create_index(
        op.f("ix_issue_dependencies_created_at"),
        "issue_dependencies",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_issue_dependencies_deleted_at"),
        "issue_dependencies",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_issue_dependencies_modified_at"),
        "issue_dependencies",
        ["modified_at"],
        unique=False,
    )
    op.create_table(
        "issue_references",
        sa.Column("issue_id", sa.UUID(), nullable=False),
        sa.Column(
            "reference_type",
            StringEnum(ReferenceType),
            nullable=False,
        ),
        sa.Column("external_id", sa.String(), nullable=False),
        sa.Column("pull_request_id", sa.UUID(), nullable=True),
        sa.Column(
            "external_source", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["issue_id"], ["issues.id"], name=op.f("issue_references_issue_id_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["pull_request_id"],
            ["pull_requests.id"],
            name=op.f("issue_references_pull_request_id_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "issue_id",
            "reference_type",
            "external_id",
            name=op.f("issue_references_pkey"),
        ),
    )
    op.create_index(
        op.f("ix_issue_references_created_at"),
        "issue_references",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_issue_references_deleted_at"),
        "issue_references",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_issue_references_issue_id"),
        "issue_references",
        ["issue_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_issue_references_modified_at"),
        "issue_references",
        ["modified_at"],
        unique=False,
    )
    op.create_table(
        "issue_rewards",
        sa.Column("issue_id", sa.UUID(), nullable=False),
        sa.Column("share_thousands", sa.BigInteger(), nullable=False),
        sa.Column("github_username", sa.String(), nullable=True),
        sa.Column("organization_id", sa.UUID(), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["issue_id"], ["issues.id"], name=op.f("issue_rewards_issue_id_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name=op.f("issue_rewards_organization_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("issue_rewards_user_id_fkey")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("issue_rewards_pkey")),
        sa.UniqueConstraint(
            "issue_id",
            "github_username",
            name=op.f("issue_rewards_issue_id_github_username_key"),
        ),
        sa.UniqueConstraint(
            "issue_id",
            "organization_id",
            name=op.f("issue_rewards_issue_id_organization_id_key"),
        ),
        sa.UniqueConstraint(
            "issue_id", "user_id", name=op.f("issue_rewards_issue_id_user_id_key")
        ),
    )
    op.create_index(
        op.f("ix_issue_rewards_created_at"),
        "issue_rewards",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_issue_rewards_deleted_at"),
        "issue_rewards",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_issue_rewards_modified_at"),
        "issue_rewards",
        ["modified_at"],
        unique=False,
    )
    op.create_table(
        "pledges",
        sa.Column("issue_id", sa.UUID(), nullable=False),
        sa.Column("repository_id", sa.UUID(), nullable=False),
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("payment_id", sa.String(), nullable=True),
        sa.Column("invoice_id", sa.String(), nullable=True),
        sa.Column("invoice_hosted_url", sa.String(), nullable=True),
        sa.Column("transfer_id", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("amount", sa.BigInteger(), nullable=False),
        sa.Column("fee", sa.BigInteger(), nullable=False),
        sa.Column("amount_received", sa.BigInteger(), nullable=True),
        sa.Column("state", sa.String(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("scheduled_payout_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("dispute_reason", sa.String(), nullable=True),
        sa.Column("disputed_by_user_id", sa.UUID(), nullable=True),
        sa.Column("disputed_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("refunded_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("by_user_id", sa.UUID(), nullable=True),
        sa.Column("by_organization_id", sa.UUID(), nullable=True),
        sa.Column("on_behalf_of_organization_id", sa.UUID(), nullable=True),
        sa.Column("created_by_user_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["by_organization_id"],
            ["organizations.id"],
            name=op.f("pledges_by_organization_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["by_user_id"], ["users.id"], name=op.f("pledges_by_user_id_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["created_by_user_id"],
            ["users.id"],
            name=op.f("pledges_created_by_user_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["disputed_by_user_id"],
            ["users.id"],
            name=op.f("pledges_disputed_by_user_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["issue_id"], ["issues.id"], name=op.f("pledges_issue_id_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["on_behalf_of_organization_id"],
            ["organizations.id"],
            name=op.f("pledges_on_behalf_of_organization_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name=op.f("pledges_organization_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["repository_id"],
            ["repositories.id"],
            name=op.f("pledges_repository_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pledges_pkey")),
    )
    op.create_index(
        "idx_issue_id_state", "pledges", ["issue_id", "state"], unique=False
    )
    op.create_index(
        op.f("ix_pledges_by_organization_id"),
        "pledges",
        ["by_organization_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_pledges_by_user_id"), "pledges", ["by_user_id"], unique=False
    )
    op.create_index(
        op.f("ix_pledges_created_at"), "pledges", ["created_at"], unique=False
    )
    op.create_index(
        op.f("ix_pledges_deleted_at"), "pledges", ["deleted_at"], unique=False
    )
    op.create_index(op.f("ix_pledges_email"), "pledges", ["email"], unique=False)
    op.create_index(op.f("ix_pledges_issue_id"), "pledges", ["issue_id"], unique=False)
    op.create_index(
        op.f("ix_pledges_modified_at"), "pledges", ["modified_at"], unique=False
    )
    op.create_index(
        op.f("ix_pledges_on_behalf_of_organization_id"),
        "pledges",
        ["on_behalf_of_organization_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_pledges_payment_id"), "pledges", ["payment_id"], unique=False
    )
    op.create_table(
        "subscriptions",
        sa.Column("stripe_subscription_id", sa.String(), nullable=True),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("current_period_start", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("current_period_end", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("cancel_at_period_end", sa.Boolean(), nullable=False),
        sa.Column("started_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("ended_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("product_id", sa.UUID(), nullable=False),
        sa.Column("price_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["price_id"],
            ["product_prices.id"],
            name=op.f("subscriptions_price_id_fkey"),
            ondelete="set null",
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.id"],
            name=op.f("subscriptions_product_id_fkey"),
            ondelete="cascade",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("subscriptions_user_id_fkey"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("subscriptions_pkey")),
    )
    op.create_index(
        op.f("ix_subscriptions_created_at"),
        "subscriptions",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_subscriptions_deleted_at"),
        "subscriptions",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_subscriptions_modified_at"),
        "subscriptions",
        ["modified_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_subscriptions_product_id"),
        "subscriptions",
        ["product_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_subscriptions_stripe_subscription_id"),
        "subscriptions",
        ["stripe_subscription_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_subscriptions_user_id"), "subscriptions", ["user_id"], unique=False
    )
    op.create_table(
        "webhook_deliveries",
        sa.Column("webhook_endpoint_id", sa.UUID(), nullable=False),
        sa.Column("webhook_event_id", sa.UUID(), nullable=False),
        sa.Column("http_code", sa.Integer(), nullable=True),
        sa.Column("succeeded", sa.Boolean(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["webhook_endpoint_id"],
            ["webhook_endpoints.id"],
            name=op.f("webhook_deliveries_webhook_endpoint_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["webhook_event_id"],
            ["webhook_events.id"],
            name=op.f("webhook_deliveries_webhook_event_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("webhook_deliveries_pkey")),
    )
    op.create_index(
        op.f("ix_webhook_deliveries_created_at"),
        "webhook_deliveries",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_webhook_deliveries_deleted_at"),
        "webhook_deliveries",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_webhook_deliveries_modified_at"),
        "webhook_deliveries",
        ["modified_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_webhook_deliveries_webhook_endpoint_id"),
        "webhook_deliveries",
        ["webhook_endpoint_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_webhook_deliveries_webhook_event_id"),
        "webhook_deliveries",
        ["webhook_event_id"],
        unique=False,
    )
    op.create_table(
        "notifications",
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("email_addr", sa.String(), nullable=True),
        sa.Column("organization_id", sa.UUID(), nullable=True),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("issue_id", sa.UUID(), nullable=True),
        sa.Column("pledge_id", sa.UUID(), nullable=True),
        sa.Column("pull_request_id", sa.UUID(), nullable=True),
        sa.Column("payload", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["issue_id"], ["issues.id"], name=op.f("notifications_issue_id_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["pledge_id"], ["pledges.id"], name=op.f("notifications_pledge_id_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["pull_request_id"],
            ["pull_requests.id"],
            name=op.f("notifications_pull_request_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("notifications_pkey")),
    )
    op.create_index(
        "idx_notifications_user_id", "notifications", ["user_id"], unique=False
    )
    op.create_index(
        op.f("ix_notifications_created_at"),
        "notifications",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_notifications_deleted_at"),
        "notifications",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_notifications_modified_at"),
        "notifications",
        ["modified_at"],
        unique=False,
    )
    op.create_table(
        "orders",
        sa.Column("amount", sa.Integer(), nullable=False),
        sa.Column("tax_amount", sa.Integer(), nullable=False),
        sa.Column("currency", sa.String(length=3), nullable=False),
        sa.Column("stripe_invoice_id", sa.String(), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("product_id", sa.UUID(), nullable=False),
        sa.Column("product_price_id", sa.UUID(), nullable=False),
        sa.Column("subscription_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["product_id"], ["products.id"], name=op.f("orders_product_id_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["product_price_id"],
            ["product_prices.id"],
            name=op.f("orders_product_price_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["subscription_id"],
            ["subscriptions.id"],
            name=op.f("orders_subscription_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("orders_user_id_fkey")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("orders_pkey")),
    )
    op.create_index(
        op.f("ix_orders_created_at"), "orders", ["created_at"], unique=False
    )
    op.create_index(
        op.f("ix_orders_deleted_at"), "orders", ["deleted_at"], unique=False
    )
    op.create_index(
        op.f("ix_orders_modified_at"), "orders", ["modified_at"], unique=False
    )
    op.create_table(
        "pledge_transactions",
        sa.Column("pledge_id", sa.UUID(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("amount", sa.BigInteger(), nullable=False),
        sa.Column("transaction_id", sa.String(), nullable=True),
        sa.Column("issue_reward_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["issue_reward_id"],
            ["issue_rewards.id"],
            name=op.f("pledge_transactions_issue_reward_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["pledge_id"],
            ["pledges.id"],
            name=op.f("pledge_transactions_pledge_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pledge_transactions_pkey")),
    )
    op.create_index(
        op.f("ix_pledge_transactions_created_at"),
        "pledge_transactions",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_pledge_transactions_deleted_at"),
        "pledge_transactions",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_pledge_transactions_modified_at"),
        "pledge_transactions",
        ["modified_at"],
        unique=False,
    )
    op.create_table(
        "benefit_grants",
        sa.Column("granted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("revoked_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column(
            "properties", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("benefit_id", sa.UUID(), nullable=False),
        sa.Column("subscription_id", sa.UUID(), nullable=True),
        sa.Column("order_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["benefit_id"],
            ["benefits.id"],
            name=op.f("benefit_grants_benefit_id_fkey"),
            ondelete="cascade",
        ),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["orders.id"],
            name=op.f("benefit_grants_order_id_fkey"),
            ondelete="cascade",
        ),
        sa.ForeignKeyConstraint(
            ["subscription_id"],
            ["subscriptions.id"],
            name=op.f("benefit_grants_subscription_id_fkey"),
            ondelete="cascade",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("benefit_grants_user_id_fkey"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("benefit_grants_pkey")),
        sa.UniqueConstraint(
            "subscription_id", "user_id", "benefit_id", name="benefit_grants_sbu_key"
        ),
    )
    op.create_index(
        op.f("ix_benefit_grants_benefit_id"),
        "benefit_grants",
        ["benefit_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_benefit_grants_created_at"),
        "benefit_grants",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_benefit_grants_deleted_at"),
        "benefit_grants",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_benefit_grants_modified_at"),
        "benefit_grants",
        ["modified_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_benefit_grants_order_id"), "benefit_grants", ["order_id"], unique=False
    )
    op.create_index(
        op.f("ix_benefit_grants_subscription_id"),
        "benefit_grants",
        ["subscription_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_benefit_grants_user_id"), "benefit_grants", ["user_id"], unique=False
    )
    op.create_table(
        "transactions",
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("processor", sa.String(), nullable=True),
        sa.Column("currency", sa.String(length=3), nullable=False),
        sa.Column("amount", sa.Integer(), nullable=False),
        sa.Column("account_currency", sa.String(length=3), nullable=False),
        sa.Column("account_amount", sa.Integer(), nullable=False),
        sa.Column("tax_amount", sa.Integer(), nullable=False),
        sa.Column("tax_country", sa.String(length=2), nullable=True),
        sa.Column("tax_state", sa.String(length=2), nullable=True),
        sa.Column("processor_fee_type", sa.String(), nullable=True),
        sa.Column("balance_correlation_key", sa.String(), nullable=True),
        sa.Column("platform_fee_type", sa.String(), nullable=True),
        sa.Column("customer_id", sa.String(), nullable=True),
        sa.Column("charge_id", sa.String(), nullable=True),
        sa.Column("refund_id", sa.String(), nullable=True),
        sa.Column("dispute_id", sa.String(), nullable=True),
        sa.Column("transfer_id", sa.String(), nullable=True),
        sa.Column("transfer_reversal_id", sa.String(), nullable=True),
        sa.Column("payout_id", sa.String(), nullable=True),
        sa.Column("fee_balance_transaction_id", sa.String(), nullable=True),
        sa.Column("account_id", sa.UUID(), nullable=True),
        sa.Column("payment_user_id", sa.UUID(), nullable=True),
        sa.Column("payment_organization_id", sa.UUID(), nullable=True),
        sa.Column("pledge_id", sa.UUID(), nullable=True),
        sa.Column("donation_id", sa.UUID(), nullable=True),
        sa.Column("order_id", sa.UUID(), nullable=True),
        sa.Column("issue_reward_id", sa.UUID(), nullable=True),
        sa.Column("payment_transaction_id", sa.UUID(), nullable=True),
        sa.Column("balance_reversal_transaction_id", sa.UUID(), nullable=True),
        sa.Column("payout_transaction_id", sa.UUID(), nullable=True),
        sa.Column("incurred_by_transaction_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["accounts.id"],
            name=op.f("transactions_account_id_fkey"),
            ondelete="set null",
        ),
        sa.ForeignKeyConstraint(
            ["balance_reversal_transaction_id"],
            ["transactions.id"],
            name=op.f("transactions_balance_reversal_transaction_id_fkey"),
            ondelete="set null",
        ),
        sa.ForeignKeyConstraint(
            ["donation_id"],
            ["donations.id"],
            name=op.f("transactions_donation_id_fkey"),
            ondelete="set null",
        ),
        sa.ForeignKeyConstraint(
            ["incurred_by_transaction_id"],
            ["transactions.id"],
            name=op.f("transactions_incurred_by_transaction_id_fkey"),
            ondelete="set null",
        ),
        sa.ForeignKeyConstraint(
            ["issue_reward_id"],
            ["issue_rewards.id"],
            name=op.f("transactions_issue_reward_id_fkey"),
            ondelete="set null",
        ),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["orders.id"],
            name=op.f("transactions_order_id_fkey"),
            ondelete="set null",
        ),
        sa.ForeignKeyConstraint(
            ["payment_organization_id"],
            ["organizations.id"],
            name=op.f("transactions_payment_organization_id_fkey"),
            ondelete="set null",
        ),
        sa.ForeignKeyConstraint(
            ["payment_transaction_id"],
            ["transactions.id"],
            name=op.f("transactions_payment_transaction_id_fkey"),
            ondelete="set null",
        ),
        sa.ForeignKeyConstraint(
            ["payment_user_id"],
            ["users.id"],
            name=op.f("transactions_payment_user_id_fkey"),
            ondelete="set null",
        ),
        sa.ForeignKeyConstraint(
            ["payout_transaction_id"],
            ["transactions.id"],
            name=op.f("transactions_payout_transaction_id_fkey"),
            ondelete="set null",
        ),
        sa.ForeignKeyConstraint(
            ["pledge_id"],
            ["pledges.id"],
            name=op.f("transactions_pledge_id_fkey"),
            ondelete="set null",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("transactions_pkey")),
    )
    op.create_index(
        op.f("ix_transactions_account_id"), "transactions", ["account_id"], unique=False
    )
    op.create_index(
        op.f("ix_transactions_balance_correlation_key"),
        "transactions",
        ["balance_correlation_key"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transactions_balance_reversal_transaction_id"),
        "transactions",
        ["balance_reversal_transaction_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transactions_charge_id"), "transactions", ["charge_id"], unique=False
    )
    op.create_index(
        op.f("ix_transactions_created_at"), "transactions", ["created_at"], unique=False
    )
    op.create_index(
        op.f("ix_transactions_customer_id"),
        "transactions",
        ["customer_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transactions_deleted_at"), "transactions", ["deleted_at"], unique=False
    )
    op.create_index(
        op.f("ix_transactions_dispute_id"), "transactions", ["dispute_id"], unique=False
    )
    op.create_index(
        op.f("ix_transactions_donation_id"),
        "transactions",
        ["donation_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transactions_fee_balance_transaction_id"),
        "transactions",
        ["fee_balance_transaction_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transactions_incurred_by_transaction_id"),
        "transactions",
        ["incurred_by_transaction_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transactions_issue_reward_id"),
        "transactions",
        ["issue_reward_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transactions_modified_at"),
        "transactions",
        ["modified_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transactions_order_id"), "transactions", ["order_id"], unique=False
    )
    op.create_index(
        op.f("ix_transactions_payment_organization_id"),
        "transactions",
        ["payment_organization_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transactions_payment_transaction_id"),
        "transactions",
        ["payment_transaction_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transactions_payment_user_id"),
        "transactions",
        ["payment_user_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transactions_payout_id"), "transactions", ["payout_id"], unique=False
    )
    op.create_index(
        op.f("ix_transactions_payout_transaction_id"),
        "transactions",
        ["payout_transaction_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transactions_platform_fee_type"),
        "transactions",
        ["platform_fee_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transactions_pledge_id"), "transactions", ["pledge_id"], unique=False
    )
    op.create_index(
        op.f("ix_transactions_processor"), "transactions", ["processor"], unique=False
    )
    op.create_index(
        op.f("ix_transactions_processor_fee_type"),
        "transactions",
        ["processor_fee_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transactions_refund_id"), "transactions", ["refund_id"], unique=False
    )
    op.create_index(
        op.f("ix_transactions_tax_country"),
        "transactions",
        ["tax_country"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transactions_tax_state"), "transactions", ["tax_state"], unique=False
    )
    op.create_index(
        op.f("ix_transactions_transfer_id"),
        "transactions",
        ["transfer_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transactions_transfer_reversal_id"),
        "transactions",
        ["transfer_reversal_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transactions_type"), "transactions", ["type"], unique=False
    )
    op.create_table(
        "held_balances",
        sa.Column("organization_id", sa.UUID(), nullable=True),
        sa.Column("account_id", sa.UUID(), nullable=True),
        sa.Column("payment_transaction_id", sa.UUID(), nullable=False),
        sa.Column("amount", sa.Integer(), nullable=False),
        sa.Column("pledge_id", sa.UUID(), nullable=True),
        sa.Column("order_id", sa.UUID(), nullable=True),
        sa.Column("issue_reward_id", sa.UUID(), nullable=True),
        sa.Column("donation_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["accounts.id"],
            name=op.f("held_balances_account_id_fkey"),
            ondelete="cascade",
        ),
        sa.ForeignKeyConstraint(
            ["donation_id"],
            ["donations.id"],
            name=op.f("held_balances_donation_id_fkey"),
            ondelete="set null",
        ),
        sa.ForeignKeyConstraint(
            ["issue_reward_id"],
            ["issue_rewards.id"],
            name=op.f("held_balances_issue_reward_id_fkey"),
            ondelete="set null",
        ),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["orders.id"],
            name=op.f("held_balances_order_id_fkey"),
            ondelete="set null",
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name=op.f("held_balances_organization_id_fkey"),
            ondelete="cascade",
        ),
        sa.ForeignKeyConstraint(
            ["payment_transaction_id"],
            ["transactions.id"],
            name=op.f("held_balances_payment_transaction_id_fkey"),
            ondelete="cascade",
        ),
        sa.ForeignKeyConstraint(
            ["pledge_id"],
            ["pledges.id"],
            name=op.f("held_balances_pledge_id_fkey"),
            ondelete="set null",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("held_balances_pkey")),
    )
    op.create_index(
        op.f("ix_held_balances_account_id"),
        "held_balances",
        ["account_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_held_balances_created_at"),
        "held_balances",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_held_balances_deleted_at"),
        "held_balances",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_held_balances_donation_id"),
        "held_balances",
        ["donation_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_held_balances_issue_reward_id"),
        "held_balances",
        ["issue_reward_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_held_balances_modified_at"),
        "held_balances",
        ["modified_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_held_balances_order_id"), "held_balances", ["order_id"], unique=False
    )
    op.create_index(
        op.f("ix_held_balances_organization_id"),
        "held_balances",
        ["organization_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_held_balances_payment_transaction_id"),
        "held_balances",
        ["payment_transaction_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_held_balances_pledge_id"), "held_balances", ["pledge_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("accounts_admin_id_fkey"), "accounts", type_="foreignkey")

    op.drop_index(op.f("ix_held_balances_pledge_id"), table_name="held_balances")
    op.drop_index(
        op.f("ix_held_balances_payment_transaction_id"), table_name="held_balances"
    )
    op.drop_index(op.f("ix_held_balances_organization_id"), table_name="held_balances")
    op.drop_index(op.f("ix_held_balances_order_id"), table_name="held_balances")
    op.drop_index(op.f("ix_held_balances_modified_at"), table_name="held_balances")
    op.drop_index(op.f("ix_held_balances_issue_reward_id"), table_name="held_balances")
    op.drop_index(op.f("ix_held_balances_donation_id"), table_name="held_balances")
    op.drop_index(op.f("ix_held_balances_deleted_at"), table_name="held_balances")
    op.drop_index(op.f("ix_held_balances_created_at"), table_name="held_balances")
    op.drop_index(op.f("ix_held_balances_account_id"), table_name="held_balances")
    op.drop_table("held_balances")
    op.drop_index(op.f("ix_transactions_type"), table_name="transactions")
    op.drop_index(
        op.f("ix_transactions_transfer_reversal_id"), table_name="transactions"
    )
    op.drop_index(op.f("ix_transactions_transfer_id"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_tax_state"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_tax_country"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_refund_id"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_processor_fee_type"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_processor"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_pledge_id"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_platform_fee_type"), table_name="transactions")
    op.drop_index(
        op.f("ix_transactions_payout_transaction_id"), table_name="transactions"
    )
    op.drop_index(op.f("ix_transactions_payout_id"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_payment_user_id"), table_name="transactions")
    op.drop_index(
        op.f("ix_transactions_payment_transaction_id"), table_name="transactions"
    )
    op.drop_index(
        op.f("ix_transactions_payment_organization_id"), table_name="transactions"
    )
    op.drop_index(op.f("ix_transactions_order_id"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_modified_at"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_issue_reward_id"), table_name="transactions")
    op.drop_index(
        op.f("ix_transactions_incurred_by_transaction_id"), table_name="transactions"
    )
    op.drop_index(
        op.f("ix_transactions_fee_balance_transaction_id"), table_name="transactions"
    )
    op.drop_index(op.f("ix_transactions_donation_id"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_dispute_id"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_deleted_at"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_customer_id"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_created_at"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_charge_id"), table_name="transactions")
    op.drop_index(
        op.f("ix_transactions_balance_reversal_transaction_id"),
        table_name="transactions",
    )
    op.drop_index(
        op.f("ix_transactions_balance_correlation_key"), table_name="transactions"
    )
    op.drop_index(op.f("ix_transactions_account_id"), table_name="transactions")
    op.drop_table("transactions")
    op.drop_index(op.f("ix_benefit_grants_user_id"), table_name="benefit_grants")
    op.drop_index(
        op.f("ix_benefit_grants_subscription_id"), table_name="benefit_grants"
    )
    op.drop_index(op.f("ix_benefit_grants_order_id"), table_name="benefit_grants")
    op.drop_index(op.f("ix_benefit_grants_modified_at"), table_name="benefit_grants")
    op.drop_index(op.f("ix_benefit_grants_deleted_at"), table_name="benefit_grants")
    op.drop_index(op.f("ix_benefit_grants_created_at"), table_name="benefit_grants")
    op.drop_index(op.f("ix_benefit_grants_benefit_id"), table_name="benefit_grants")
    op.drop_table("benefit_grants")
    op.drop_index(
        op.f("ix_pledge_transactions_modified_at"), table_name="pledge_transactions"
    )
    op.drop_index(
        op.f("ix_pledge_transactions_deleted_at"), table_name="pledge_transactions"
    )
    op.drop_index(
        op.f("ix_pledge_transactions_created_at"), table_name="pledge_transactions"
    )
    op.drop_table("pledge_transactions")
    op.drop_index(op.f("ix_orders_modified_at"), table_name="orders")
    op.drop_index(op.f("ix_orders_deleted_at"), table_name="orders")
    op.drop_index(op.f("ix_orders_created_at"), table_name="orders")
    op.drop_table("orders")
    op.drop_index(op.f("ix_notifications_modified_at"), table_name="notifications")
    op.drop_index(op.f("ix_notifications_deleted_at"), table_name="notifications")
    op.drop_index(op.f("ix_notifications_created_at"), table_name="notifications")
    op.drop_index("idx_notifications_user_id", table_name="notifications")
    op.drop_table("notifications")
    op.drop_index(
        op.f("ix_webhook_deliveries_webhook_event_id"), table_name="webhook_deliveries"
    )
    op.drop_index(
        op.f("ix_webhook_deliveries_webhook_endpoint_id"),
        table_name="webhook_deliveries",
    )
    op.drop_index(
        op.f("ix_webhook_deliveries_modified_at"), table_name="webhook_deliveries"
    )
    op.drop_index(
        op.f("ix_webhook_deliveries_deleted_at"), table_name="webhook_deliveries"
    )
    op.drop_index(
        op.f("ix_webhook_deliveries_created_at"), table_name="webhook_deliveries"
    )
    op.drop_table("webhook_deliveries")
    op.drop_index(op.f("ix_subscriptions_user_id"), table_name="subscriptions")
    op.drop_index(
        op.f("ix_subscriptions_stripe_subscription_id"), table_name="subscriptions"
    )
    op.drop_index(op.f("ix_subscriptions_product_id"), table_name="subscriptions")
    op.drop_index(op.f("ix_subscriptions_modified_at"), table_name="subscriptions")
    op.drop_index(op.f("ix_subscriptions_deleted_at"), table_name="subscriptions")
    op.drop_index(op.f("ix_subscriptions_created_at"), table_name="subscriptions")
    op.drop_table("subscriptions")
    op.drop_index(op.f("ix_pledges_payment_id"), table_name="pledges")
    op.drop_index(op.f("ix_pledges_on_behalf_of_organization_id"), table_name="pledges")
    op.drop_index(op.f("ix_pledges_modified_at"), table_name="pledges")
    op.drop_index(op.f("ix_pledges_issue_id"), table_name="pledges")
    op.drop_index(op.f("ix_pledges_email"), table_name="pledges")
    op.drop_index(op.f("ix_pledges_deleted_at"), table_name="pledges")
    op.drop_index(op.f("ix_pledges_created_at"), table_name="pledges")
    op.drop_index(op.f("ix_pledges_by_user_id"), table_name="pledges")
    op.drop_index(op.f("ix_pledges_by_organization_id"), table_name="pledges")
    op.drop_index("idx_issue_id_state", table_name="pledges")
    op.drop_table("pledges")
    op.drop_index(op.f("ix_issue_rewards_modified_at"), table_name="issue_rewards")
    op.drop_index(op.f("ix_issue_rewards_deleted_at"), table_name="issue_rewards")
    op.drop_index(op.f("ix_issue_rewards_created_at"), table_name="issue_rewards")
    op.drop_table("issue_rewards")
    op.drop_index(
        op.f("ix_issue_references_modified_at"), table_name="issue_references"
    )
    op.drop_index(op.f("ix_issue_references_issue_id"), table_name="issue_references")
    op.drop_index(op.f("ix_issue_references_deleted_at"), table_name="issue_references")
    op.drop_index(op.f("ix_issue_references_created_at"), table_name="issue_references")
    op.drop_table("issue_references")
    op.drop_index(
        op.f("ix_issue_dependencies_modified_at"), table_name="issue_dependencies"
    )
    op.drop_index(
        op.f("ix_issue_dependencies_deleted_at"), table_name="issue_dependencies"
    )
    op.drop_index(
        op.f("ix_issue_dependencies_created_at"), table_name="issue_dependencies"
    )
    op.drop_table("issue_dependencies")
    op.drop_index(op.f("ix_donations_payment_id"), table_name="donations")
    op.drop_index(
        op.f("ix_donations_on_behalf_of_organization_id"), table_name="donations"
    )
    op.drop_index(op.f("ix_donations_modified_at"), table_name="donations")
    op.drop_index(op.f("ix_donations_email"), table_name="donations")
    op.drop_index(op.f("ix_donations_deleted_at"), table_name="donations")
    op.drop_index(op.f("ix_donations_created_at"), table_name="donations")
    op.drop_index(op.f("ix_donations_charge_id"), table_name="donations")
    op.drop_index(op.f("ix_donations_by_user_id"), table_name="donations")
    op.drop_index(op.f("ix_donations_by_organization_id"), table_name="donations")
    op.drop_table("donations")
    op.drop_index(
        op.f("ix_webhook_events_webhook_endpoint_id"), table_name="webhook_events"
    )
    op.drop_index(op.f("ix_webhook_events_modified_at"), table_name="webhook_events")
    op.drop_index(op.f("ix_webhook_events_deleted_at"), table_name="webhook_events")
    op.drop_index(op.f("ix_webhook_events_created_at"), table_name="webhook_events")
    op.drop_table("webhook_events")
    op.drop_index("idx_organization_id_date", table_name="traffic")
    op.drop_index("idx_article_id_date", table_name="traffic")
    op.drop_table("traffic")
    op.drop_index(op.f("ix_pull_requests_repository_id"), table_name="pull_requests")
    op.drop_index(op.f("ix_pull_requests_organization_id"), table_name="pull_requests")
    op.drop_index(op.f("ix_pull_requests_modified_at"), table_name="pull_requests")
    op.drop_index(op.f("ix_pull_requests_deleted_at"), table_name="pull_requests")
    op.drop_index(op.f("ix_pull_requests_created_at"), table_name="pull_requests")
    op.drop_index(
        "idx_pull_requests_title_tsv",
        table_name="pull_requests",
        postgresql_using="gin",
    )
    op.drop_table("pull_requests")
    op.drop_index(op.f("ix_product_prices_type"), table_name="product_prices")
    op.drop_index(
        op.f("ix_product_prices_recurring_interval"), table_name="product_prices"
    )
    op.drop_index(op.f("ix_product_prices_modified_at"), table_name="product_prices")
    op.drop_index(op.f("ix_product_prices_deleted_at"), table_name="product_prices")
    op.drop_index(op.f("ix_product_prices_created_at"), table_name="product_prices")
    op.drop_table("product_prices")
    op.drop_index(op.f("ix_product_benefits_order"), table_name="product_benefits")
    op.drop_index(
        op.f("ix_product_benefits_modified_at"), table_name="product_benefits"
    )
    op.drop_index(op.f("ix_product_benefits_deleted_at"), table_name="product_benefits")
    op.drop_index(op.f("ix_product_benefits_created_at"), table_name="product_benefits")
    op.drop_table("product_benefits")
    op.drop_index(op.f("ix_issues_repository_id"), table_name="issues")
    op.drop_index(op.f("ix_issues_organization_id"), table_name="issues")
    op.drop_index(op.f("ix_issues_modified_at"), table_name="issues")
    op.drop_index(op.f("ix_issues_external_lookup_key"), table_name="issues")
    op.drop_index(op.f("ix_issues_deleted_at"), table_name="issues")
    op.drop_index(op.f("ix_issues_created_at"), table_name="issues")
    op.drop_index("idx_issues_title_tsv", table_name="issues", postgresql_using="gin")
    op.drop_index("idx_issues_positive_total_engagement_count", table_name="issues")
    op.drop_index("idx_issues_positive_reactions_count", table_name="issues")
    op.drop_index("idx_issues_pledged_amount_sum", table_name="issues")
    op.drop_index("idx_issues_id_closed_at", table_name="issues")
    op.drop_index("idx_default_search", table_name="issues")
    op.drop_table("issues")
    op.drop_index(op.f("ix_downloadables_user_id"), table_name="downloadables")
    op.drop_index(op.f("ix_downloadables_modified_at"), table_name="downloadables")
    op.drop_index(op.f("ix_downloadables_file_id"), table_name="downloadables")
    op.drop_index(op.f("ix_downloadables_deleted_at"), table_name="downloadables")
    op.drop_index(op.f("ix_downloadables_created_at"), table_name="downloadables")
    op.drop_index(op.f("ix_downloadables_benefit_id"), table_name="downloadables")
    op.drop_table("downloadables")
    op.drop_index(
        op.f("ix_webhook_notifications_organization_id"),
        table_name="webhook_notifications",
    )
    op.drop_index(
        op.f("ix_webhook_notifications_modified_at"), table_name="webhook_notifications"
    )
    op.drop_index(
        op.f("ix_webhook_notifications_deleted_at"), table_name="webhook_notifications"
    )
    op.drop_index(
        op.f("ix_webhook_notifications_created_at"), table_name="webhook_notifications"
    )
    op.drop_table("webhook_notifications")
    op.drop_index(op.f("ix_webhook_endpoints_user_id"), table_name="webhook_endpoints")
    op.drop_index(
        op.f("ix_webhook_endpoints_organization_id"), table_name="webhook_endpoints"
    )
    op.drop_index(
        op.f("ix_webhook_endpoints_modified_at"), table_name="webhook_endpoints"
    )
    op.drop_index(
        op.f("ix_webhook_endpoints_deleted_at"), table_name="webhook_endpoints"
    )
    op.drop_index(
        op.f("ix_webhook_endpoints_created_at"), table_name="webhook_endpoints"
    )
    op.drop_table("webhook_endpoints")
    op.drop_index(
        op.f("ix_user_organizations_modified_at"), table_name="user_organizations"
    )
    op.drop_index(
        op.f("ix_user_organizations_deleted_at"), table_name="user_organizations"
    )
    op.drop_index(
        op.f("ix_user_organizations_created_at"), table_name="user_organizations"
    )
    op.drop_table("user_organizations")
    op.drop_table("user_notifications")
    op.drop_index(op.f("ix_repositories_modified_at"), table_name="repositories")
    op.drop_index(op.f("ix_repositories_deleted_at"), table_name="repositories")
    op.drop_index(op.f("ix_repositories_created_at"), table_name="repositories")
    op.drop_index("idx_deleted_at_is_private", table_name="repositories")
    op.drop_table("repositories")
    op.drop_index(op.f("ix_products_type"), table_name="products")
    op.drop_index(op.f("ix_products_stripe_product_id"), table_name="products")
    op.drop_index(op.f("ix_products_modified_at"), table_name="products")
    op.drop_index(op.f("ix_products_is_highlighted"), table_name="products")
    op.drop_index(op.f("ix_products_deleted_at"), table_name="products")
    op.drop_index(op.f("ix_products_created_at"), table_name="products")
    op.drop_index("idx_organization_id_type", table_name="products")
    op.drop_table("products")
    op.drop_index(
        op.f("ix_personal_access_tokens_modified_at"),
        table_name="personal_access_tokens",
    )
    op.drop_index(
        op.f("ix_personal_access_tokens_deleted_at"),
        table_name="personal_access_tokens",
    )
    op.drop_index(
        op.f("ix_personal_access_tokens_created_at"),
        table_name="personal_access_tokens",
    )
    op.drop_table("personal_access_tokens")
    op.drop_index(op.f("ix_oauth_accounts_modified_at"), table_name="oauth_accounts")
    op.drop_index(op.f("ix_oauth_accounts_deleted_at"), table_name="oauth_accounts")
    op.drop_index(op.f("ix_oauth_accounts_created_at"), table_name="oauth_accounts")
    op.drop_index("idx_user_id_platform", table_name="oauth_accounts")
    op.drop_table("oauth_accounts")
    op.drop_index(op.f("ix_oauth2_tokens_refresh_token"), table_name="oauth2_tokens")
    op.drop_index(op.f("ix_oauth2_tokens_nonce"), table_name="oauth2_tokens")
    op.drop_index(op.f("ix_oauth2_tokens_modified_at"), table_name="oauth2_tokens")
    op.drop_index(op.f("ix_oauth2_tokens_deleted_at"), table_name="oauth2_tokens")
    op.drop_index(op.f("ix_oauth2_tokens_created_at"), table_name="oauth2_tokens")
    op.drop_table("oauth2_tokens")
    op.drop_index(op.f("ix_oauth2_grants_user_id"), table_name="oauth2_grants")
    op.drop_index(op.f("ix_oauth2_grants_organization_id"), table_name="oauth2_grants")
    op.drop_index(op.f("ix_oauth2_grants_modified_at"), table_name="oauth2_grants")
    op.drop_index(op.f("ix_oauth2_grants_deleted_at"), table_name="oauth2_grants")
    op.drop_index(op.f("ix_oauth2_grants_created_at"), table_name="oauth2_grants")
    op.drop_index(op.f("ix_oauth2_grants_client_id"), table_name="oauth2_grants")
    op.drop_table("oauth2_grants")
    op.drop_index(op.f("ix_oauth2_clients_user_id"), table_name="oauth2_clients")
    op.drop_index(
        op.f("ix_oauth2_clients_registration_access_token"), table_name="oauth2_clients"
    )
    op.drop_index(op.f("ix_oauth2_clients_modified_at"), table_name="oauth2_clients")
    op.drop_index(op.f("ix_oauth2_clients_deleted_at"), table_name="oauth2_clients")
    op.drop_index(op.f("ix_oauth2_clients_created_at"), table_name="oauth2_clients")
    op.drop_index(op.f("ix_oauth2_clients_client_id"), table_name="oauth2_clients")
    op.drop_table("oauth2_clients")
    op.drop_index(
        op.f("ix_oauth2_authorization_codes_modified_at"),
        table_name="oauth2_authorization_codes",
    )
    op.drop_index(
        op.f("ix_oauth2_authorization_codes_deleted_at"),
        table_name="oauth2_authorization_codes",
    )
    op.drop_index(
        op.f("ix_oauth2_authorization_codes_created_at"),
        table_name="oauth2_authorization_codes",
    )
    op.drop_table("oauth2_authorization_codes")
    op.drop_index(op.f("ix_magic_links_token_hash"), table_name="magic_links")
    op.drop_index(op.f("ix_magic_links_modified_at"), table_name="magic_links")
    op.drop_index(op.f("ix_magic_links_deleted_at"), table_name="magic_links")
    op.drop_index(op.f("ix_magic_links_created_at"), table_name="magic_links")
    op.drop_table("magic_links")
    op.drop_index(op.f("ix_invites_modified_at"), table_name="invites")
    op.drop_index(op.f("ix_invites_deleted_at"), table_name="invites")
    op.drop_index(op.f("ix_invites_created_at"), table_name="invites")
    op.drop_index(op.f("ix_invites_code"), table_name="invites")
    op.drop_table("invites")
    op.drop_index(op.f("ix_files_organization_id"), table_name="files")
    op.drop_index(op.f("ix_files_modified_at"), table_name="files")
    op.drop_index(op.f("ix_files_deleted_at"), table_name="files")
    op.drop_index(op.f("ix_files_created_at"), table_name="files")
    op.drop_table("files")
    op.drop_index(op.f("ix_benefits_type"), table_name="benefits")
    op.drop_index(op.f("ix_benefits_modified_at"), table_name="benefits")
    op.drop_index(op.f("ix_benefits_deleted_at"), table_name="benefits")
    op.drop_index(op.f("ix_benefits_created_at"), table_name="benefits")
    op.drop_table("benefits")
    op.drop_index(op.f("ix_articles_modified_at"), table_name="articles")
    op.drop_index(op.f("ix_articles_deleted_at"), table_name="articles")
    op.drop_index(op.f("ix_articles_created_at"), table_name="articles")
    op.drop_table("articles")
    op.drop_index(
        op.f("ix_article_subscriptions_user_id"), table_name="article_subscriptions"
    )
    op.drop_index(
        op.f("ix_article_subscriptions_organization_id"),
        table_name="article_subscriptions",
    )
    op.drop_index(
        op.f("ix_article_subscriptions_modified_at"), table_name="article_subscriptions"
    )
    op.drop_index(
        op.f("ix_article_subscriptions_deleted_at"), table_name="article_subscriptions"
    )
    op.drop_index(
        op.f("ix_article_subscriptions_created_at"), table_name="article_subscriptions"
    )
    op.drop_table("article_subscriptions")
    op.drop_index(
        op.f("ix_advertisement_campaigns_modified_at"),
        table_name="advertisement_campaigns",
    )
    op.drop_index(
        op.f("ix_advertisement_campaigns_deleted_at"),
        table_name="advertisement_campaigns",
    )
    op.drop_index(
        op.f("ix_advertisement_campaigns_created_at"),
        table_name="advertisement_campaigns",
    )
    op.drop_table("advertisement_campaigns")
    op.drop_index(op.f("ix_users_modified_at"), table_name="users")
    op.drop_index("ix_users_email_case_insensitive", table_name="users")
    op.drop_index(op.f("ix_users_deleted_at"), table_name="users")
    op.drop_index(op.f("ix_users_created_at"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_organizations_modified_at"), table_name="organizations")
    op.drop_index(op.f("ix_organizations_deleted_at"), table_name="organizations")
    op.drop_index(op.f("ix_organizations_created_at"), table_name="organizations")
    op.drop_table("organizations")
    op.drop_index(op.f("ix_accounts_modified_at"), table_name="accounts")
    op.drop_index(op.f("ix_accounts_deleted_at"), table_name="accounts")
    op.drop_index(op.f("ix_accounts_created_at"), table_name="accounts")
    op.drop_table("accounts")
    # ### end Alembic commands ###
