"""Remove Product.type/is_highlighted and introduce ProductPriceFree

Revision ID: 19f9bb88313b
Revises: 162775d9f4f2
Create Date: 2024-09-19 13:45:22.413448

"""

import sqlalchemy as sa
from alembic import op

# Polar Custom Imports
from polar.integrations.stripe.service import stripe as stripe_service

# revision identifiers, used by Alembic.
revision = "19f9bb88313b"
down_revision = "162775d9f4f2"
branch_labels: tuple[str] | None = None
depends_on: tuple[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "product_prices",
        "price_currency",
        existing_type=sa.VARCHAR(length=3),
        nullable=True,
    )

    connection = op.get_bind()
    results = connection.execute(
        sa.text("""
            SELECT products.id, products.name, products.description, products.organization_id, organizations.slug
            FROM products
            LEFT JOIN organizations ON products.organization_id = organizations.id
            WHERE type = 'free'
        """)
    )
    for product in results:
        id, name, description, organization_id, organization_slug = product
        metadata: dict[str, str] = {"product_id": str(id)}
        metadata["organization_id"] = str(organization_id)
        metadata["organization_name"] = organization_slug
        stripe_product = stripe_service.create_product(
            name, description=description, metadata=metadata
        )
        stripe_price = stripe_service.create_price_for_product(
            stripe_product.id,
            {
                "currency": "usd",
                "product": stripe_product.id,
                "recurring": {"interval": "month"},
                "unit_amount": 0,
            },
        )
        op.execute(
            sa.text("""
            INSERT INTO product_prices (
                id,
                created_at,
                type,
                recurring_interval,
                amount_type,
                is_archived,
                stripe_price_id,
                product_id
            )
            VALUES (
                uuid_generate_v4(),
                NOW(),
                'recurring',
                'month',
                'free',
                FALSE,
                :stripe_price_id,
                :product_id
            )
            """).bindparams(
                stripe_price_id=stripe_price.id,
                product_id=id,
            )
        )
        op.execute(
            sa.text("""
            UPDATE products
                    SET stripe_product_id = :stripe_product_id
                    WHERE id = :product_id""").bindparams(
                stripe_product_id=stripe_product.id,
                product_id=id,
            )
        )

    op.drop_index("idx_organization_id_type", table_name="products")
    op.drop_index("ix_products_is_highlighted", table_name="products")
    op.drop_index("ix_products_type", table_name="products")
    op.drop_column("products", "is_highlighted")
    op.drop_column("products", "type")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "products", sa.Column("type", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.add_column(
        "products",
        sa.Column("is_highlighted", sa.BOOLEAN(), autoincrement=False, nullable=True),
    )
    op.create_index("ix_products_type", "products", ["type"], unique=False)
    op.create_index(
        "ix_products_is_highlighted", "products", ["is_highlighted"], unique=False
    )
    op.create_index(
        "idx_organization_id_type",
        "products",
        ["organization_id", "type"],
        unique=False,
    )

    op.execute(
        """
        UPDATE products
        SET type = 'free', stripe_product_id = NULL
        WHERE id IN (
            SELECT product_id
            FROM product_prices
            WHERE amount_type = 'free' AND recurring_interval IS NOT NULL
        )
        """
    )
    op.execute(
        """
        DELETE FROM product_prices
        WHERE amount_type = 'free'
        """
    )

    op.alter_column(
        "product_prices", "stripe_price_id", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "product_prices",
        "price_currency",
        existing_type=sa.VARCHAR(length=3),
        nullable=False,
    )
    # ### end Alembic commands ###
