[tool.poetry]
name = "polar"
version = "0.1.0"
description = ""
authors = ["Birk Jernstr√∂m <birkjernstrom@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.89.1"
uvicorn = {extras = ["standard"], version = "^0.20.0"}
python-dotenv = "^0.21.1"
asyncpg = "^0.27.0"
alembic = "^1.9.2"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.0"}
greenlet = "^2.0.2"  # Need to be explicit, M1 Mac issue (https://github.com/python-poetry/poetry/issues/5429)
structlog = "^22.3.0"
fastapi-users = {extras = ["oauth", "sqlalchemy"], version = "^10.4.0"}
githubkit = {extras = ["auth-app"], version = "^0.9.4"}
redis = "^4.4.2"
sse-starlette = "^1.2.1"
blinker = {git = "https://github.com/pallets-eco/blinker.git"}
arq = "^0.25.0"
stripe = "^5.2.0"
sqlalchemy-searchable = "^1.4.1"
pytest-subtests = "^0.10.0"
types-redis = "^4.5.2.0"
mypy = "^1.1.1"

[tool.poetry.group.dev.dependencies]
black = "^22.12.0"
mypy = "^1.0.1"
pytest = "^7.2.1"
httpx = "^0.23.3"
pytest-sugar = "^0.9.6"
typer = "^0.7.0"
psycopg2-binary = "^2.9.5"
coverage = "^7.1.0"
pytest-mock = "^3.10.0"
nest-asyncio = "^1.5.6"
sqlalchemy-utils = "^0.40.0"
ruff = "^0.0.253"
pytest-asyncio = "^0.20.3"
taskipy = "^1.10.3"

[tool.taskipy.tasks]
api = { cmd = "task verify_github_app && uvicorn polar.app:app --reload --workers 1 --host 127.0.0.1 --port 8000", help = "run api service" }
worker = { cmd = "arq run_worker.WorkerSettings --watch polar", help = "run arq worker" }
test = { cmd = "POLAR_ENV=testing coverage run --source polar -m pytest && coverage report -m", help = "run all tests" }
lint = { cmd = "task lint_ruff & task lint_black", help = "run all linters" }
lint_ruff = { cmd = "ruff check .", help = "run ruff linter" }
lint_black = { cmd = "black .", help = "run black linter" }
db_migrate = { cmd = "python -m scripts.db upgrade", help = "run alembic upgrade" }
db_recreate = { cmd = "python -m scripts.db recreate", help = "drop and recreate database" }
clean = { cmd = "find * -name '*.pyc' -delete && find * -name '__pycache__' -delete", help = "clean up .pyc and __pycache__" }
verify_github_app = { cmd = "poetry run verify_github_app", help = "verify that the github app is correctly configured" }

[tool.poetry.scripts]
verify_github_app = "polar.verify_github_app:main"

[tool.ruff]
target-version = "py311"
ignore = [
    "F401",  # remove unused import
    "F841",  # remove unused variables
]

[tool.mypy]
ignore_missing_imports = true
strict = true
plugins = ["pydantic.mypy"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
