from polar.integrations.github import types


def create_github_repository(
    id: int,
    name: str,
    private: bool,
) -> types.Repository:
    return types.Repository(
        id=id,
        node_id=f"dummy_{id}",
        name=name,
        full_name=f"org/{name}",
        private=private,
        # dummy values
        license_=None,
        organization=None,
        forks=0,
        permissions=types.RepositoryPropPermissions(
            admin=True,
            pull=True,
            push=True,
            maintain=True,
            triage=True,
        ),
        owner=types.SimpleUser(
            login="xx",
            id=123,
            node_id="what",
            avatar_url="xxx",
            gravatar_id=None,
            url="xxx",
            html_url="xxx",
            followers_url="xxx",
            following_url="xxx",
            gists_url="xxx",
            starred_url="xxx",
            subscriptions_url="xxx",
            organizations_url="xxx",
            repos_url="xxx",
            events_url="xxx",
            received_events_url="xxx",
            type="xxx",
            site_admin=False,
        ),
        html_url="xx",
        description=None,
        fork=False,
        url="xx",
        archive_url="xx",
        assignees_url="xx",
        blobs_url="xx",
        branches_url="xx",
        collaborators_url="xx",
        comments_url="xx",
        commits_url="xx",
        compare_url="xx",
        contents_url="xx",
        contributors_url="xx",
        deployments_url="xx",
        downloads_url="xx",
        events_url="xx",
        forks_url="xx",
        git_commits_url="xx",
        git_refs_url="xx",
        git_tags_url="xx",
        git_url="xx",
        issue_comment_url="xx",
        issue_events_url="xx",
        issues_url="xx",
        keys_url="xx",
        labels_url="xx",
        languages_url="xx",
        merges_url="xx",
        milestones_url="xx",
        notifications_url="xx",
        pulls_url="xx",
        releases_url="xx",
        ssh_url="xx",
        stargazers_url="xx",
        statuses_url="xx",
        subscribers_url="xx",
        subscription_url="xx",
        tags_url="xx",
        teams_url="xx",
        trees_url="xx",
        clone_url="xx",
        mirror_url=None,
        hooks_url="xx",
        svn_url="xx",
        homepage=None,
        language=None,
        forks_count=0,
        stargazers_count=0,
        watchers_count=0,
        size=0,
        default_branch="main",
        open_issues_count=20,
        is_template=False,
        topics=[],
        has_issues=True,
        has_projects=True,
        has_wiki=True,
        has_pages=True,
        has_downloads=True,
        has_discussions=True,
        archived=False,
        disabled=False,
        visibility="private",
        pushed_at=None,
        created_at=None,
        updated_at=None,
        allow_rebase_merge=True,
        template_repository=None,
        temp_clone_token=None,
        allow_squash_merge=True,
        allow_auto_merge=True,
        delete_branch_on_merge=True,
        allow_update_branch=True,
        use_squash_pr_title_as_default=True,
        squash_merge_commit_title="PR_TITLE",
        squash_merge_commit_message="PR_BODY",
        merge_commit_title="PR_TITLE",
        merge_commit_message="PR_BODY",
        allow_merge_commit=True,
        allow_forking=True,
        web_commit_signoff_required=True,
        subscribers_count=123,
        network_count=123,
        open_issues=123,
        watchers=123,
        master_branch="main",
        starred_at="",
        anonymous_access_enabled=True,
    )
